-- phpMyAdmin SQL Dump
-- version 5.2.1
-- https://www.phpmyadmin.net/
--
-- Servidor: 127.0.0.1
-- Tiempo de generación: 13-07-2025 a las 23:18:30
-- Versión del servidor: 10.4.32-MariaDB
-- Versión de PHP: 8.2.12

SET SQL_MODE = "NO_AUTO_VALUE_ON_ZERO";
START TRANSACTION;
SET time_zone = "+00:00";


/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8mb4 */;

--
-- Base de datos: `tfg`
--

-- --------------------------------------------------------

--
-- Estructura de tabla para la tabla `criterio`
--

CREATE TABLE `criterio` (
  `Id` int(11) NOT NULL,
  `Descripcion` varchar(255) DEFAULT NULL,
  `HistoriaId` int(11) DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_general_ci;

--
-- Volcado de datos para la tabla `criterio`
--

INSERT INTO `criterio` (`Id`, `Descripcion`, `HistoriaId`) VALUES
(1, 'Comprendo el rol que juegan las bases de datos en el desarrollo de sistemas informáticos de uso cotidiano.', 1),
(2, 'Comprendo las limitaciones de las soluciones de datos basadas en ficheros.', 1),
(3, 'Comprendo qué es un Sistema de Gestión de Bases de Datos (SGBD) y qué es una Base de Datos (BD).', 1),
(4, 'Conozco las diferentes funciones que ofrece un SGBD y comprendo su relevancia para la gestión de la BD.', 1),
(5, 'Conozco los diferentes componentes de un SGBD y sus responsabilidades.', 1),
(6, 'Comprendo las ventajas y desventajas de un SGBD.', 1),
(7, 'Conozco la arquitectura de un SGBD y las características de sus niveles.', 1),
(8, 'Comprendo la diferencia entre independencia lógica y física de datos, con sus respectivas implicaciones.', 1),
(9, 'Comprendo el concepto de modelo de datos y su papel en el ciclo de vida de una BD.', 1),
(10, 'Conozco los (sub)lenguajes disponibles para interactuar con una BD y sus características.', 1),
(11, 'Conozco los diferentes tipos de actores que conviven alrededor de una BD y cómo se relacionan con ella.', 1),
(12, 'Conozco todas las etapas por las que pasa una base de datos y el papel que juegan dentro de su ciclo de vida.', 1),
(13, 'Comprendo el concepto de entidad, sus diferentes tipos y lo que representan desde el punto de vista del diseño conceptual de una base de datos.', 2),
(14, 'Comprendo el concepto de atributo, sus diferentes tipos y lo que representan desde el punto de vista del diseño conceptual de una base de datos.', 2),
(15, 'Comprendo el concepto de relación, sus diferentes tipos y lo que representan desde el punto de vista del diseño conceptual de una base de datos.', 2),
(16, 'Comprendo el concepto de metadato y el rol que desempeña en el diseño conceptual de una base de datos.', 2),
(17, 'Comprendo la necesidad de utilizar una notación estandarizada para expresar el diseño conceptual (y mantener un uso consistente de la misma durante todo el ciclo de vida).', 2),
(18, 'Comprendo el concepto de relación IS-A que describe una jerarquía de entidades.', 3),
(19, 'Conozco las diferentes actividades que se realizan durante el diseño conceptual y sé cómo llevarlas a cabo durante el desarrollo de una base de datos.', 3),
(20, 'Comprendo el propósito del modelo entidad-relación dentro del diseño conceptual de una base de datos.', 4),
(21, 'Soy capaz de interpretar el pliego técnico que describe un sistema de información, identificando todos los elementos de datos que caracterizan su dominio.', 4),
(22, 'Soy capaz de caracterizar las entidades presentes en el \"mini-mundo\" de una base de datos.', 4),
(23, 'Soy capaz de decidir cuándo una entidad debe modelarse como débil, de acuerdo con su dependencia existencial de una entidad fuerte.', 4),
(24, 'Soy capaz de caracterizar los atributos que describen cualquier entidad (o relación) presente en el \"mini-mundo\" de una base de datos.', 4),
(25, 'Soy capaz de elegir el identificador de una entidad, a partir de sus atributos descriptivos.', 4),
(26, 'Soy capaz de caracterizar las relaciones existentes entre cualquier entidad presente en el \"mini-mundo\" de una base de datos.', 4),
(27, 'Soy capaz de determinar la participación y la cardinalidades propias de relaciones de cualquier grado.', 4),
(28, 'Soy capaz de construir el modelo entidad-relación que establece el diseño conceptual de una base de datos.', 4),
(29, 'Soy capaz de caracterizar las relaciones generalización-especialización (IS-A) existentes en el \"mini-mundo\" de una base de datos.', 5),
(30, 'Soy capaz de determinar la obligatoriedad y la disyunción propias de relaciones IS-A.', 5),
(31, 'Soy capaz de construir el modelo entidad-relación extendido que establece el diseño conceptual de una base de datos.', 5),
(32, 'Comprendo el propósito del diccionario de datos dentro del diseño conceptual de una base de datos.', 6),
(33, 'Soy capaz de elegir los metadatos necesarios para caracterizar las entidades propias del \"mini-mundo\" de una base de datos.', 6),
(34, 'Soy capaz de elegir los metadatos necesarios para caracterizar los atributos propios del \"mini-mundo\" de una base de datos.', 6),
(35, 'Soy capaz de elegir los metadatos necesarios para caracterizar las relaciones propias del \"mini-mundo\" de una base de datos.', 6),
(36, 'Soy capaz de construir el diccionario de datos que establece el diseño conceptual de una base de datos.', 6),
(37, 'Comprendo el concepto de tabla (relación) y lo que representa en el ámbito del modelo relacional.', 7),
(38, 'Comprendo el concepto de columna (atributo) y lo que representa en el ámbito del modelo relacional.', 7),
(39, 'Comprendo el concepto de fila (tupla) y lo que representa en el ámbito del modelo relacional.', 7),
(40, 'Comprendo el concepto de dominio de una determinada columna.', 7),
(41, 'Comprendo el concepto y las propiedades del esquema de una tabla, en base a los pares (atributo, dominio) que lo definen en el ámbito de una base de datos.', 7),
(42, 'Comprendo qué es una clave primaria, sus propiedades y el rol que desempeña en el ámbito de una tabla.', 7),
(43, 'Comprendo qué es una clave foránea, sus propiedades y el rol que desempeña en el ámbito de una tabla.', 7),
(44, 'Comprendo el concepto de restricción de integridad y conozco las restricciones de uso habitual en una base de datos relacional.', 7),
(45, 'Conozco las reglas utilizadas para transformar el diseño conceptual de una base de datos en una representación relacional normalizada (3FN).', 7),
(46, 'Comprendo la necesidad de utilizar una notación estandarizada para expresar el diseño lógico (y mantener un uso consistente de la misma durante todo el ciclo de vida).', 7),
(47, 'Conozco las diferentes actividades que se realizan durante el diseño lógico y sé cómo llevarlas a cabo durante el desarrollo de una base de datos.', 7),
(48, 'Soy capaz de transformar cualquier entidad existente en un diseño conceptual (con sus atributos correspondientes) en su representación relacional normalizada (3FN).', 8),
(49, 'Soy capaz de transformar cualquier relación existente en un diseño conceptual (con sus atributos correspondientes) en su representación relacional normalizada (3FN).', 8),
(50, 'Soy capaz de establecer el dominio de cualquier columna a partir de la información disponible en el diseño conceptual.', 8),
(51, 'Soy capaz de establecer restricciones de integridad de entidad a partir de la información disponible en el diseño conceptual.', 8),
(52, 'Soy capaz de establecer restricciones de integridad referencial a partir de la información disponible en el diseño conceptual.', 8),
(53, 'Comprendo el concepto de normalización y los beneficios de construir bases de datos normalizadas.', 9),
(54, 'Comprendo el concepto de dependencia funcional y lo que significa que un atributo B dependa funcionalmente de A.', 9),
(55, 'Conozco las características básicas de las formas normales.', 9),
(56, 'Comprendo qué es y el rol que juega el DDL de SQL en la gestión del esquema propio de una base de datos relacional.', 10),
(57, 'Comprendo los operadores del DDL de SQL para crear, gestionar y eliminar objetos de datos en una base de datos.', 10),
(58, 'Conozco las restricciones a las que están sujetos los identificadores utilizados para referir objetos de datos en SQL.', 10),
(59, 'Conozco los tipos de datos escalares utilizados en SQL.', 10),
(60, 'Comprendo los mecanismos que proporciona SQL para establecer el dominio de las columnas de una tabla.', 10),
(61, 'Comprendo los mecanismos que proporciona SQL para gestionar la integridad de entidad de una clave primaria.', 10),
(62, 'Comprendo los mecanismos que proporciona SQL para gestionar la integridad referencial de una clave foránea.', 10),
(63, 'Comprendo los mecanismos que proporciona SQL para construir cualquier tipo de restricción de integridad.', 11),
(64, 'Conozco el concepto de trigger y el modelo evento-condición-acción en el que está basado.', 11),
(65, 'Conozco los mecanismos utilizados habitualmente para gestionar la seguridad de una base de de datos.', 12),
(66, 'Comprendo qué es un privilegio en una base de datos y sus niveles de asignación.', 12),
(67, 'Comprendo las diferencias entre usuarios y roles de una base de datos.', 12),
(68, 'Comprendo el propósito de la matriz de privilegios para la gestión de la seguridad de una base de datos.', 12),
(69, 'Comprendo los mecanismos que proporciona SQL para gestionar usuarios y privilegios.', 12),
(70, 'Comprendo el concepto de vista relacional y sus las ventajas y desventajas de utilizarlas en una base de datos.', 12),
(71, 'Comprendo el mecanismo de resolución de una vista relacional y las restricciones que impone.', 12),
(72, 'Comprendo los mecanismos que proporciona SQL para construir vistas relacionales.', 12),
(73, 'Soy capaz de construir cualquier tabla (existente en el diseño de una base de datos) utilizando SQL.', 13),
(74, 'Soy capaz de declarar la clave primaria de cualquier tabla (existente en el diseño de una base de datos) utilizando SQL.', 13),
(75, 'Soy capaz de declarar las claves foráneas de cualquier tabla (existente en el diseño de una base de datos) utilizando SQL.', 13),
(76, 'Soy capaz de declarar las acciones que ejecutará el SGBD para garantizar la integridad referencial propia de cada clave foránea (de acuerdo con las restricciones especificadas) utilizando SQL.', 13),
(77, 'Soy capaz de escribir el código SQL que permite registrar cualquier restricción de integridad (CHECK).', 14),
(78, 'Soy capaz de escribir el código SQL de un trigger que garantice cualquier restricción de integridad sobre la base de datos.', 14),
(79, 'Soy capaz de construir la matriz de privilegios que describe la política de seguridad de una base de datos.', 15),
(80, 'Soy capaz de escribir el código SQL que permite crear nuevos usuarios en una base de datos.', 15),
(81, 'Soy capaz de escribir el código SQL que implementa una estrategia de acceso a la base de datos basada en la asignación de privilegios.', 15),
(82, 'Soy capaz de escribir el código SQL que permite construir cualquier vista relacional.', 16),
(83, 'Comprendo qué es y que rol juega el DML de SQL en la manipulación de los datos existentes en una base de datos.', 17),
(84, 'Conozco las reglas de estilo planteadas en la asignatura y comprendo cómo utilizarlas para asegurar la legibilidad y el mantenimiento de las sentencias SQL que escriba en las diferentes actividades.', 17),
(85, 'Conozco los operadores de DML de SQL para insertar, actualizar, borrar y consultar datos en una base de datos.', 17),
(86, 'Comprendo la lógica de los operadores de álgebra relacional y su relación con los operadores correspondientes en SQL.', 17),
(87, 'Conozco la estructura general de una consulta SQL y comprendo la semántica de cada uno de sus operadores.', 17),
(88, 'Comprendo cómo se utiliza el operador SELECT para proyectar columnas y/o otros valores en el ámbito de una consulta SQL.', 17),
(89, 'Comprendo cómo se utiliza el operador WHERE para filtrar filas en el ámbito de una consulta SQL.', 17),
(90, 'Comprendo cómo se utiliza el operador ORDER BY para ordenar los resultados obtenidos en el ámbito de una consulta SQL.', 17),
(91, 'Conozco los operadores de agregación y comprendo cómo utilizarlos en el ámbito de una consulta SQL.', 17),
(92, 'Comprendo cómo se utiliza el operador GROUP BY para realizar agrupaciones en el ámbito de una consulta SQL.', 17),
(93, 'Comprendo cómo se utilizan las subconsultas y en qué condiciones usarlas en el ámbito de una consulta SQL.', 18),
(94, 'Conozco el concepto de CTE (common table expression) y comprendo cómo utilizarlo en el ámbito de una consulta SQL.', 18),
(95, 'Comprendo cómo se utilizan los operadores de JOIN y en qué condiciones usarlos para obtener resultados que combinen datos procedentes de más de una tabla.', 18),
(96, 'Conozco los operadores de conjuntos y comprendo cómo usarlos en el ámbito de una consulta SQL.', 18),
(97, 'Soy capaz de escribir el código SQL que permite insertar cualquier información en una tabla (mediante creación o copia de datos).', 19),
(98, 'Soy capaz de escribir el código SQL que permite actualizar cualquier información existente en una tabla.', 19),
(99, 'Soy capaz de escribir el código SQL que permite borrar cualquier información existente en una tabla.', 19),
(100, 'Soy capaz de escribir el código SQL que permite resolver cualquier consulta que implique proyección de datos.', 20),
(101, 'Soy capaz de escribir el código SQL que permite resolver cualquier consulta que implique selección de datos.', 20),
(102, 'Soy capaz de escribir el código SQL que permite resolver cualquier consulta que implique ordenación de datos.', 20),
(103, 'Soy capaz de escribir el código SQL que permite resolver cualquier consulta que implique agrupación de datos.', 20),
(104, 'Soy capaz de escribir el código SQL que permite resolver cualquier consulta que implique agregación de datos.', 20),
(105, 'Soy capaz de escribir el código SQL que permite resolver cualquier consulta que implique el uso de subconsultas.', 21),
(106, 'Soy capaz de escribir el código SQL que permite resolver cualquier consulta que implique la realización de joins.', 21),
(107, 'Soy capaz de escribir el código SQL que permite resolver cualquier consulta que implique el uso de operaciones de conjuntos.', 21);

-- --------------------------------------------------------

--
-- Estructura de tabla para la tabla `historia`
--

CREATE TABLE `historia` (
  `Id` int(11) NOT NULL,
  `Descripcion` varchar(255) DEFAULT NULL,
  `ObjetivoId` int(11) DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_general_ci;

--
-- Volcado de datos para la tabla `historia`
--

INSERT INTO `historia` (`Id`, `Descripcion`, `ObjetivoId`) VALUES
(1, 'Fundamentos de Bases de Datos', 1),
(2, 'Fundamentos de Diseño Conceptual (I)', 2),
(3, 'Fundamentos de Diseño Conceptual (II)', 2),
(4, 'Modelo Entidad-Relación', 2),
(5, 'Modelo Entidad-Relación Extendido', 2),
(6, 'Diccionario de Datos', 2),
(7, 'Fundamentos de Diseño Lógico', 3),
(8, 'Modelo Relacional', 3),
(9, 'Normalización', 3),
(10, 'Fundamentos de Gestión de Datos (I)', 4),
(11, 'Fundamentos de Gestión de Datos (II)', 4),
(12, 'Fundamentos de Gestión de Datos (III)', 4),
(13, 'Construcción de Bases de Datos', 4),
(14, 'Integridad', 4),
(15, 'Privilegios', 4),
(16, 'Vistas Relacionales', 4),
(17, 'Fundamentos de Manipulación de Datos (I)', 5),
(18, 'Fundamentos de Manipulación de Datos (II)', 5),
(19, 'Modificación de Datos', 5),
(20, 'Consulta (Básica) de Datos', 5),
(21, 'Consulta (Avanzada) de Datos', 5);

-- --------------------------------------------------------

--
-- Estructura de tabla para la tabla `intento`
--

CREATE TABLE `intento` (
  `Fecha` timestamp NOT NULL DEFAULT current_timestamp(),
  `UsuarioCorreo` varchar(255) DEFAULT NULL,
  `Calificacion` decimal(5,2) DEFAULT 0.00
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_general_ci;

--
-- Volcado de datos para la tabla `intento`
--

INSERT INTO `intento` (`Fecha`, `UsuarioCorreo`, `Calificacion`) VALUES
('2025-06-28 17:59:50', 'usuario@ejemplo.com', 0.00),
('2025-06-28 18:33:06', 'usuario@ejemplo.com', 1.27),
('2025-06-28 18:50:00', 'usuario@ejemplo.com', 0.00),
('2025-06-28 19:08:44', 'usuario@ejemplo.com', 1.27),
('2025-06-28 19:13:52', 'usuario@ejemplo.com', 1.27),
('2025-06-28 19:14:44', 'usuario@ejemplo.com', 1.27),
('2025-06-28 19:16:58', 'usuario@ejemplo.com', 1.27),
('2025-06-28 23:01:57', 'usuario@ejemplo.com', 1.27),
('2025-06-28 23:03:42', 'usuario@ejemplo.com', 16.67),
('2025-06-28 23:04:11', 'usuario@ejemplo.com', 50.00),
('2025-06-28 23:05:36', 'usuario@ejemplo.com', 0.00),
('2025-06-28 23:05:53', 'usuario@ejemplo.com', 0.00),
('2025-06-28 23:08:23', 'usuario@ejemplo.com', 0.00),
('2025-06-28 23:08:37', 'usuario@ejemplo.com', 0.00),
('2025-06-28 23:09:13', 'usuario@ejemplo.com', 0.00),
('2025-06-28 23:10:09', 'usuario@ejemplo.com', 16.67),
('2025-06-28 23:14:01', 'usuario@ejemplo.com', 0.00),
('2025-06-28 23:19:14', 'usuario@ejemplo.com', 0.00),
('2025-06-28 23:29:43', 'usuario@ejemplo.com', 10.53),
('2025-06-28 23:30:59', 'usuario@ejemplo.com', 3.80),
('2025-06-29 14:45:37', 'usuario@ejemplo.com', 100.00),
('2025-06-29 14:48:22', 'usuario@ejemplo.com', 87.50),
('2025-06-29 23:42:49', 'usuario@ejemplo.com', 0.00),
('2025-06-29 23:51:04', 'usuario@ejemplo.com', 0.00),
('2025-06-29 23:55:50', 'usuario@ejemplo.com', 100.00),
('2025-06-29 23:57:51', 'usuario@ejemplo.com', 62.50),
('2025-06-29 23:58:20', 'usuario@ejemplo.com', 33.33),
('2025-06-29 23:58:44', 'usuario@ejemplo.com', 0.00),
('2025-06-30 01:21:32', 'usuario@ejemplo.com', 0.00),
('2025-06-30 01:22:16', 'usuario@ejemplo.com', 33.33),
('2025-06-30 04:14:54', 'usuario@ejemplo.com', 100.00),
('2025-06-30 14:09:20', 'usuario@ejemplo.com', 33.33),
('2025-06-30 14:09:36', 'usuario@ejemplo.com', 0.00),
('2025-07-01 00:01:13', 'usuario@ejemplo.com', 50.00),
('2025-07-01 00:07:34', 'usuario@ejemplo.com', 0.00),
('2025-07-01 00:10:38', 'usuario@ejemplo.com', 75.00),
('2025-07-01 00:11:43', 'usuario@ejemplo.com', 50.00),
('2025-07-03 02:32:54', 'usuario@ejemplo.com', 50.00),
('2025-07-03 02:33:52', 'usuario@ejemplo.com', 100.00),
('2025-07-04 23:09:48', 'usuario@ejemplo.com', 66.67),
('2025-07-04 23:35:04', 'usuario@ejemplo.com', 50.00),
('2025-07-05 01:28:09', 'usuario@ejemplo.com', 66.67),
('2025-07-05 01:43:41', 'usuario@ejemplo.com', 33.33),
('2025-07-05 01:44:13', 'usuario@ejemplo.com', 100.00),
('2025-07-05 02:02:51', 'usuario@ejemplo.com', 33.33),
('2025-07-05 02:03:27', 'usuario@ejemplo.com', 50.00),
('2025-07-05 02:06:07', 'usuario@ejemplo.com', 50.00),
('2025-07-05 02:06:42', 'usuario@ejemplo.com', 66.67),
('2025-07-12 01:31:12', 'usuario@ejemplo.com', 80.00),
('2025-07-12 01:49:38', 'usuario@ejemplo.com', 0.00),
('2025-07-12 01:56:16', 'usuario@ejemplo.com', 50.00),
('2025-07-13 17:41:14', 'usuario@ejemplo.com', 73.08),
('2025-07-13 17:41:59', 'usuario@ejemplo.com', 60.00),
('2025-07-13 17:53:32', 'usuario@ejemplo.com', 55.56),
('2025-07-13 17:54:18', 'usuario@ejemplo.com', 50.00),
('2025-07-13 17:56:03', 'usuario@ejemplo.com', 75.00),
('2025-07-13 17:56:12', 'usuario@ejemplo.com', 0.00),
('2025-07-13 17:56:18', 'usuario@ejemplo.com', 100.00),
('2025-07-13 18:01:51', 'usuario@ejemplo.com', 0.00),
('2025-07-13 18:22:16', 'usuario@ejemplo.com', 100.00),
('2025-07-13 18:22:24', 'usuario@ejemplo.com', 0.00),
('2025-07-13 19:16:08', 'usuario@ejemplo.com', 66.67),
('2025-07-13 19:17:21', 'usuario@ejemplo.com', 100.00),
('2025-07-13 19:21:15', 'usuario@ejemplo.com', 50.00),
('2025-07-13 19:22:26', 'usuario@ejemplo.com', 100.00),
('2025-07-13 19:22:46', 'usuario@ejemplo.com', 50.00),
('2025-07-13 19:34:13', 'usuario@ejemplo.com', 25.00),
('2025-07-13 20:46:46', 'usuario@ejemplo.com', 50.00),
('2025-07-13 20:47:01', 'usuario@ejemplo.com', 100.00);

-- --------------------------------------------------------

--
-- Estructura de tabla para la tabla `objetivo`
--

CREATE TABLE `objetivo` (
  `Id` int(11) NOT NULL,
  `Descripcion` varchar(255) DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_general_ci;

--
-- Volcado de datos para la tabla `objetivo`
--

INSERT INTO `objetivo` (`Id`, `Descripcion`) VALUES
(1, 'Fundamentos de Bases de Datos'),
(2, 'Diseño Conceptual'),
(3, 'Diseño Lógico'),
(4, 'DDL'),
(5, 'DML');

-- --------------------------------------------------------

--
-- Estructura de tabla para la tabla `opcion`
--

CREATE TABLE `opcion` (
  `PreguntaId` int(11) NOT NULL,
  `Texto` varchar(510) NOT NULL,
  `Correcta` tinyint(1) DEFAULT NULL,
  `Calificacion` decimal(3,2) DEFAULT 0.00
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_general_ci;

--
-- Volcado de datos para la tabla `opcion`
--

INSERT INTO `opcion` (`PreguntaId`, `Texto`, `Correcta`, `Calificacion`) VALUES
(300, 'Almacenar y recuperar grandes cantidades de datos', 1, 1.00),
(300, 'Generar informes y gráficas para la toma de decisiones', 0, 0.00),
(300, 'Procesar información y realizar operaciones matemáticas', 0, 0.00),
(300, 'Realizar cálculos estadísticos y visualizar resultados', 0, 0.00),
(301, 'El no poder realizar actualizaciones concurrentes en la información.', 0, 0.00),
(301, 'La capacidad para manejar un gran volumen de usuarios simultáneamente.', 0, 0.00),
(301, 'La necesidad de administrar los permisos de acceso a los archivos.', 1, 1.00),
(301, 'La posibilidad de realizar consultas complejas y rápidas.', 0, 0.00),
(302, 'Un lenguaje de programación utilizado para interactuar con bases de datos.', 0, 0.00),
(302, 'Un sistema que gestiona la creación, acceso y modificación de bases de datos.', 1, 1.00),
(302, 'Un software que se encarga de almacenar información en la memoria RAM.', 0, 0.00),
(302, 'Una tecnología que permite acceder a la red desde cualquier dispositivo.', 0, 0.00),
(304, 'Flexibilidad y escalabilidad para manejar grandes cantidades de datos', 0, 0.00),
(304, 'Mayor complejidad en la implementación', 0, 0.00),
(304, 'Mayor seguridad y control sobre la información', 1, 1.00),
(304, 'Posibilidad de acceso a datos en tiempo real', 0, 0.00),
(305, 'Nivel de Control de Acceso a Datos', 0, 0.00),
(305, 'Nivel de Dirección de la Base de Datos', 0, 0.00),
(305, 'Nivel de Manejo de Archivos y Directorios', 1, 1.00),
(305, 'Nivel de Programación', 0, 0.00),
(306, 'La independencia lógica es más importante para una aplicación que la independencia física.', 0, 0.00),
(306, 'La independencia lógica se refiere a la organización de los datos en una base de datos, mientras que la independencia física se refiere al almacenamiento de los mismos.', 1, 1.00),
(306, 'La independencia lógica se refiere a la seguridad y autenticidad de los datos, mientras que la independencia física se refiere a su acceso y modificación.', 0, 0.00),
(306, 'La independencia lógica se refiere al controlador de bases de datos y la independencia física se refiere al hardware del sistema.', 0, 0.00),
(307, 'Crear consultas para extraer informaciones específicas de la base de datos', 0, 0.00),
(307, 'Definir las restricciones de seguridad para la base de datos', 0, 0.00),
(307, 'Proveer un medio para almacenar y organizar grandes cantidades de información', 0, 0.00),
(307, 'Representar la estructura de la información y relaciones entre ella en la base de datos', 1, 1.00),
(308, 'Java', 0, 0.00),
(308, 'MySQL', 0, 0.00),
(308, 'Python', 0, 0.00),
(308, 'T-SQL', 1, 1.00),
(309, 'El servidor', 0, 0.00),
(309, 'El usuario', 1, 1.00),
(309, 'La aplicación', 0, 0.00),
(309, 'La empresa', 0, 0.00),
(310, 'Creación de la base de datos', 0, 0.00),
(310, 'Definición del esquema', 1, 1.00),
(310, 'Diseño físico', 0, 0.00),
(310, 'Implementación de la aplicación', 0, 0.00),
(311, 'Almacena, organiza y gestiona los datos que se requieren para una aplicación.', 1, 1.00),
(311, 'Realiza tareas gráficas y visuales para presentar la información.', 0, 0.00),
(311, 'Se comunica con otros sistemas informáticos a través de redes.', 0, 0.00),
(311, 'Se encarga de realizar cálculos matemáticos y estadísticos.', 0, 0.00),
(312, 'El riesgo de perder información debido al fallo del hardware', 0, 0.00),
(312, 'La capacidad para realizar consultas complejas y rápidas', 0, 0.00),
(312, 'La inexistencia de posibles problemas de concurrencia', 0, 0.00),
(312, 'La necesidad de utilizar un software específico para acceder a los datos', 1, 1.00),
(313, 'Almacena y gestiona la información en la BD.', 1, 1.00),
(313, 'Es el software que se utiliza para conectarse a una BD desde un aplicativo.', 0, 0.00),
(313, 'Gestiona la seguridad y acceso a la BD.', 0, 0.00),
(313, 'Se encarga de crear y administrar los índices en la BD.', 0, 0.00),
(314, 'Gestor de transacciones', 0, 0.00),
(314, 'Indexación', 0, 0.00),
(314, 'Interfaz de usuario', 1, 1.00),
(314, 'Optimización de consultas', 0, 0.00),
(316, 'Para aumentar la escalabilidad y rendimiento de las aplicaciones', 0, 0.00),
(316, 'Para mejorar la seguridad y integridad de los datos', 1, 1.00),
(316, 'Para proporcionar una interfaz más fácil para acceder a los datos', 0, 0.00),
(316, 'Para reducir el costo del hardware y la complejidad del software', 0, 0.00),
(317, 'Nivel de almacenamiento', 0, 0.00),
(317, 'Nivel de red', 0, 0.00),
(317, 'Nivel físico', 1, 1.00),
(317, 'Nivel lógico', 0, 0.00),
(318, 'El almacenamiento de todos los datos en un solo lugar, facilitando su acceso y manipulación.', 0, 0.00),
(318, 'El uso de un lenguaje específico para definir la estructura de los datos y sus relaciones.', 0, 0.00),
(318, 'La capacidad para cambiar la estructura y el contenido de los datos sin afectar a la aplicación que se comunica con ellos.', 1, 1.00),
(318, 'La posibilidad de compartir los mismos datos entre diferentes aplicaciones.', 0, 0.00),
(319, 'Definir la estructura y las relaciones entre los datos almacenados en la base de datos', 1, 1.00),
(319, 'Generar informes y análisis a partir de los datos almacenados', 0, 0.00),
(319, 'Proporcionar la capacidad de replicar la base de datos', 0, 0.00),
(319, 'Servir como una base para la creación de consultas y vistas', 0, 0.00),
(320, 'MongoDB', 0, 0.00),
(320, 'MySQL', 0, 0.00),
(320, 'PHP', 0, 0.00),
(320, 'PL/SQL', 1, 1.00),
(322, 'Administrar permisos y seguridad', 0, 0.00),
(322, 'Crear y gestionar tablas', 0, 0.00),
(322, 'Definir relaciones entre tablas', 0, 0.00),
(322, 'Realizar consultas y filtrados a datos', 1, 1.00),
(323, 'Es utilizado para ejecutar consultas.', 0, 0.00),
(323, 'Maneja el almacenamiento y recuperación de datos.', 0, 0.00),
(323, 'Permite la creación y modificación de tablas.', 1, 1.00),
(323, 'Se encarga de la seguridad de la base de datos.', 0, 0.00),
(324, 'Es la capa más baja del SGBD, se encarga de administrar la memoria y los recursos del sistema.', 1, 1.00),
(324, 'Es la interfaz gráfica que permite interactuar con la base de datos.', 0, 0.00),
(324, 'Es la responsable de recuperar y mantener la integridad de la base de datos.', 0, 0.00),
(324, 'Se encarga de recibir las instrucciones del lenguaje de programación y transformarlas en comandos que se ejecutan en el disco duro.', 0, 0.00),
(325, 'Controlador de acceso', 0, 0.00),
(325, 'Gestor de archivos', 0, 0.00),
(325, 'Motor de consultas', 0, 0.00),
(325, 'Sistema de gestión de bases de datos (SGBD)', 1, 1.00),
(326, 'Es el nivel más alto de abstracción para interactuar con la BD.', 0, 0.00),
(326, 'Es el responsable de mantener la integridad de los datos en la BD.', 0, 0.00),
(326, 'Es responsable de almacenar y recuperar datos de la base de datos.', 0, 0.00),
(326, 'Se encarga de recibir solicitudes de acceso a la BD y gestionarlas adecuadamente.', 1, 1.00),
(327, 'Análisis, Diseno, Implementación y Mantenimiento', 1, 1.00),
(327, 'Diseñada, Implementación, Uso y Retirado', 0, 0.00),
(327, 'Inicialización, Consolidación, Estabilidad y Eliminación', 0, 0.00),
(327, 'Planificación, Creación, Operativa y Desmantelamiento', 0, 0.00),
(328, 'Almacena los datos de la base de datos', 0, 0.00),
(328, 'Define la estructura de la tabla y las restricciones de integridad', 0, 0.00),
(328, 'Maneja la comunicación entre el usuario y el motor de consultas', 1, 1.00),
(328, 'Realiza la optimización y recuperación de la información', 0, 0.00),
(329, 'El concepto fundamental que se utiliza para modelar la estructura y contenido de los datos en una base de datos', 1, 1.00),
(329, 'Un grupo de tablas relacionadas entre sí', 0, 0.00),
(329, 'Un tipo de dato numérico', 0, 0.00),
(329, 'Una fila en una tabla de una base de datos', 0, 0.00),
(330, 'Una entidad es un conjunto de relaciones entre varias tablas.', 0, 0.00),
(330, 'Una entidad es un objeto que se describe mediante uno o más atributos.', 1, 1.00),
(330, 'Una entidad es un tipo de relación entre tablas.', 0, 0.00),
(330, 'Una entidad es una categoría o clasificación de objetos.', 0, 0.00),
(332, 'El nombre con el que se identifica una tabla en una base de datos.', 0, 0.00),
(332, 'La relación entre dos o más entidades en una base de datos.', 0, 0.00),
(332, 'Un tipo de dato numérico.', 0, 0.00),
(332, 'Una característica o propiedad que describe a un registro o entidad en la base de datos.', 1, 1.00),
(334, 'Un nombre identificativo que se asigne a cada fila en una tabla', 0, 0.00),
(334, 'Un tipo de dato que define el rango posible de valores que puede tomar', 0, 0.00),
(334, 'Un valor que se almacena en un campo específico en la tabla', 1, 1.00),
(334, 'Una descripción breve que explica el significado de la relación entre dos filas', 0, 0.00),
(336, 'Relación cardinalidad 1:N.', 0, 0.00),
(336, 'Relación cardinalidad M:M.', 1, 1.00),
(336, 'Relación de composición.', 0, 0.00),
(336, 'Relación de jerarquía.', 0, 0.00),
(337, 'Relación cardinalidad muchos a muchos', 0, 0.00),
(337, 'Relación cardinalidad uno a muchos', 1, 1.00),
(337, 'Relación jerárquica', 0, 0.00),
(337, 'Relación secundaria', 0, 0.00),
(338, 'Es el nombre que se le da a cada campo o registro de una tabla.', 0, 0.00),
(338, 'Es información adicional que describe la estructura y contenido de una base de datos.', 1, 1.00),
(338, 'Es la cantidad total de espacio disponible en un disco duro.', 0, 0.00),
(338, 'Es una variable que se utiliza para almacenar los datos.', 0, 0.00),
(339, 'Un conjunto de reglas que definen cómo se almacenan y recuperan los datos en una base de datos', 0, 0.00),
(339, 'Un lenguaje utilizado para describir la estructura y el contenido de una base de datos', 0, 0.00),
(339, 'Un tipo de dato que describe propiedades o características adicionales de un atributo o tabla en una base de datos', 1, 1.00),
(339, 'Un tipo de dato que se utiliza para almacenar la información relevante sobre los usuarios', 0, 0.00),
(341, 'Para almacenar grandes cantidades de datos.', 0, 0.00),
(341, 'Para definir la relación entre tablas y entidades en un esquema de base de datos.', 1, 1.00),
(341, 'Para describir los campos y los índices de una tabla.', 0, 0.00),
(341, 'Para optimizar las consultas y mejorar la velocidad de ejecución.', 0, 0.00),
(342, 'Un tipo de clave primaria en una tabla', 0, 0.00),
(342, 'Una forma de relacionar dos tablas', 0, 0.00),
(342, 'Una jerarquía de entidades y sus subtipos', 1, 1.00),
(342, 'Una restricción que se aplica a un atributo', 0, 0.00),
(343, 'Define la jerarquía entre entidades en un modelo conceptual', 1, 1.00),
(343, 'Describe la relación entre dos tablas que tienen una conexión n-a-n', 0, 0.00),
(343, 'Es un tipo de sentencia SQL para realizar consultas', 0, 0.00),
(343, 'Es una técnica para optimizar el rendimiento de una base de datos', 0, 0.00),
(344, 'Define un tipo de dato.', 0, 0.00),
(344, 'Describe la jerarquía de las entidades.', 1, 1.00),
(344, 'Es la relación entre un atributo y su valor.', 0, 0.00),
(344, 'Es una restricción en el diseño de bases de datos.', 0, 0.00),
(345, 'Analizar y diseñar la arquitectura de la base de datos', 0, 0.00),
(345, 'Definir la estructura y los requisitos de la base de datos', 1, 1.00),
(345, 'Probar la integridad y la seguridad de la base de datos', 0, 0.00),
(345, 'Realizar la implementación física de la base de datos', 0, 0.00),
(346, 'Crear diagramas de entidad-relationship', 0, 0.00),
(346, 'Definir la estructura física de la base de datos', 0, 0.00),
(346, 'Determinar la necesidad y los requisitos funcionales de la base de datos', 1, 1.00),
(346, 'Implementar la lógica de negocio en el diseño', 0, 0.00),
(347, 'El diseño de la arquitectura de la aplicación.', 0, 0.00),
(347, 'La definición de la estructura de la tabla.', 0, 0.00),
(347, 'La identificación y análisis de los requisitos funcionales del sistema.', 1, 1.00),
(347, 'La implementación del almacenamiento persistente de los datos.', 0, 0.00),
(348, 'Definir la lógica de negocio para procesos empresariales', 0, 0.00),
(348, 'Describir el flujo de trabajo de un sistema', 0, 0.00),
(348, 'Identificar las relaciones entre tablas y campos en una base de datos', 1, 1.00),
(348, 'Representar la estructura física de los dispositivos de almacenamiento', 0, 0.00),
(349, 'Definir la lógica de negocio que se implementa en un sistema informático', 0, 0.00),
(349, 'Determinar la estructura y tamaño de la base de datos', 0, 0.00),
(349, 'Identificar las relaciones entre diferentes tablas o conjuntos de datos', 1, 1.00),
(349, 'Representar la organización y jerarquía de los datos en una base de datos', 0, 0.00),
(350, 'Crear índices para mejorar el rendimiento del sistema.', 0, 0.00),
(350, 'Definir las operaciones que se pueden realizar sobre la información almacenada.', 0, 0.00),
(350, 'Describir la organización y relación entre entidades y sus atributos dentro de una base de datos.', 1, 1.00),
(350, 'Representar la estructura física de los archivos y directorios.', 0, 0.00),
(351, 'El conjunto de reglas y políticas para acceder a la información', 0, 0.00),
(351, 'La estructura física del almacenamiento de datos', 0, 0.00),
(351, 'La representación lógica de la información, incluyendo los tipos de datos y relaciones entre ellos', 1, 1.00),
(351, 'Un software específico para realizar consultas y reportes', 0, 0.00),
(354, 'El resultado de una consulta en una base de datos.', 0, 0.00),
(354, 'Un grupo de filas y columnas que se utilizan para mostrar la distribución de los valores.', 0, 0.00),
(354, 'Un tipo de dato que se utiliza para almacenar números enteros.', 0, 0.00),
(354, 'Una estructura lógica para organizar y almacenar información.', 1, 1.00),
(355, 'La elección de si una entidad debe ser débil o no depende únicamente del tipo de relación que tenga con otras entidades.', 0, 0.00),
(355, 'Solo se puede modelar una entidad débil cuando tiene una relación Uno a Uno con una entidad fuerte.', 0, 0.00),
(355, 'Una entidad debe ser modelada como débil siempre que tenga una relación N a Uno (One-to-Many) con otra entidad fuerte.', 0, 0.00),
(355, 'Una entidad debe ser modelada como débil siempre y cuando su existencia dependa directamente de la existencia de otra entidad.', 1, 1.00),
(356, 'Si la entidad débil puede existir de forma independiente y no depende de la entidad fuerte.', 1, 1.00),
(356, 'Si la entidad débil se encuentra siempre presente en conjunción con la entidad fuerte.', 0, 0.00),
(356, 'Si la entidad débil tiene un atributo que no puede cambiar sin afectar a la entidad fuerte.', 0, 0.00),
(356, 'Si la entidad débil tiene una clave primaria que se basa en la entidad fuerte.', 0, 0.00),
(357, 'Si la relación es obligatoria y se aplica a todas las instancias de al menos una entidad, es débil.', 0, 0.00),
(357, 'Si la relación no puede existir sin que se produzca un cambio significativo en la integridad lógica del sistema, es débil.', 1, 1.00),
(357, 'Si la relación no tiene un impacto directo en la integridad lógica del sistema, es débil.', 0, 0.00),
(357, 'Si la relación puede existir sin que se produzca un cambio significativo en la integridad lógica del sistema, es débil.', 0, 0.00),
(359, 'Atributo', 1, 1.00),
(359, 'Filtro', 0, 0.00),
(359, 'Propiedad', 0, 0.00),
(359, 'Tipo de dato', 0, 0.00),
(361, 'Código de barras', 1, 1.00),
(361, 'Descripción del producto', 0, 0.00),
(361, 'Fecha de lanzamiento', 0, 0.00),
(361, 'Precio del producto', 0, 0.00),
(362, 'Relación Many-To-Many (N:M)', 0, 0.00),
(362, 'Relación None-To-None (0:0)', 0, 0.00),
(362, 'Relación One-To-Many (1:N)', 1, 1.00),
(362, 'Relación One-To-One (1:1)', 0, 0.00),
(365, 'Una relación 1:1 (many-to-one)', 0, 0.00),
(365, 'Una relación 1:M (one-to-one)', 0, 0.00),
(365, 'Una relación M:1 (many-to-many)', 1, 1.00),
(365, 'Una relación N:N (one-to-many)', 0, 0.00),
(366, 'Relación 1-1', 0, 0.00),
(366, 'Relación 1-n', 0, 0.00),
(366, 'Relación m-m', 1, 1.00),
(366, 'Relación n-1', 0, 0.00),
(369, 'Crear un modelo para la optimización del rendimiento de la base de datos.', 0, 0.00),
(369, 'Definir el diseño conceptual de la base de datos.', 1, 1.00),
(369, 'Identificar las restricciones y dependencias entre las tablas.', 0, 0.00),
(369, 'Representar la estructura física de la base de datos.', 0, 0.00),
(371, 'Relación de composición', 0, 0.00),
(371, 'Relación de dependencia', 0, 0.00),
(371, 'Relación de generalización-especialización (IS-A)', 1, 1.00),
(371, 'Relación de ordenamiento', 0, 0.00),
(372, 'Un Avión es un tipo de Barco', 0, 0.00),
(372, 'Un Coche es un tipo de Vehículo', 0, 0.00),
(372, 'Un Lanzadera es un tipo de Vehículo', 0, 0.00),
(372, 'Un Vehículo es un tipo de Automóvil', 1, 1.00),
(373, 'La conjunción', 0, 0.00),
(373, 'La disyunción', 1, 1.00),
(373, 'La obligatoriedad', 0, 0.00),
(373, 'La restricción cardinalidad', 0, 0.00),
(376, 'Crear tablas y campos en el diseño lógico.', 0, 0.00),
(376, 'Identificar las entidades y atributos en el diagrama entidad-relación.', 1, 1.00),
(376, 'Implementar una clave primaria y secundaria.', 0, 0.00),
(376, 'Realizar una normalización de la base de datos para evitar redundancia.', 0, 0.00),
(377, 'El análisis lógico', 0, 0.00),
(377, 'El diagramado conceptual', 1, 1.00),
(377, 'El modelo físico', 0, 0.00),
(377, 'La optimización de consultas', 0, 0.00),
(378, 'Definir la relación entre las entidades y las tablas de la base de datos', 1, 1.00),
(378, 'Determinar el esquema físico del almacenamiento en disco', 0, 0.00),
(378, 'Establecer la conexión entre las entidades y las relaciones en un modelo conceptual', 0, 0.00),
(378, 'Representar la estructura lógica de los archivos de almacenamiento', 0, 0.00),
(380, 'Definir y relacionar los términos y conceptos que se utilizarán dentro del modelo de datos', 1, 1.00),
(380, 'Establecer el esquema lógico y físico para almacenar y organizar los datos', 0, 0.00),
(380, 'Generar un diagrama de clases y objetos para visualizar la estructura de la base de datos', 0, 0.00),
(380, 'Proporcionar una descripción detallada sobre la estructura interna de la base de datos', 0, 0.00),
(381, 'Es un conjunto de normas para escribir consultas SQL.', 0, 0.00),
(381, 'Es un inventario de todas las entidades y atributos del sistema de información.', 1, 1.00),
(381, 'Es un registro de todos los campos utilizados en la base de datos.', 0, 0.00),
(381, 'Es una herramienta para crear tablas y relaciones entre ellas.', 0, 0.00),
(382, 'La fecha y hora de creación de un registro.', 1, 1.00),
(382, 'Un conjunto de operaciones para actualizar la información.', 0, 0.00),
(382, 'Un valor numérico que identifica a una persona.', 0, 0.00),
(382, 'Una descripción breve de un lugar geográfico.', 0, 0.00),
(383, 'Algoritmos', 0, 0.00),
(383, 'Atributos', 1, 1.00),
(383, 'Esquemas', 0, 0.00),
(383, 'Parámetros', 0, 0.00),
(384, 'La suma total de todos los registros almacenados en una base de datos', 0, 0.00),
(384, 'Un conjunto de reglas que determinan la estructura y organización de los datos en una base de datos', 1, 1.00),
(384, 'Un tipo especial de índice para mejorar la velocidad de búsqueda', 0, 0.00),
(384, 'Una colección de archivos que almacenan información', 0, 0.00),
(385, 'Cantidad de páginas', 0, 0.00),
(385, 'Clave primaria', 1, 1.00),
(385, 'Código de barras', 0, 0.00),
(385, 'Fecha de creación', 0, 0.00),
(387, 'Relación de composición.', 0, 0.00),
(387, 'Relación de especialización generalización.', 1, 1.00),
(387, 'Relación de inherencia.', 0, 0.00),
(387, 'Relación de ordenamiento.', 0, 0.00),
(388, 'Relación de igualdad', 0, 0.00),
(388, 'Relación de muchos a muchos', 0, 0.00),
(388, 'Relación de ordenamiento', 0, 0.00),
(388, 'Relación de uno a muchos (uno a varios)', 1, 1.00),
(389, 'Definir la arquitectura de la base de datos', 0, 0.00),
(389, 'Establecer el diseño conceptual de la base de datos', 1, 1.00),
(389, 'Realizar la implementación física de la base de datos', 0, 0.00),
(389, 'Visualizar los resultados de consultas y reportes', 0, 0.00),
(390, 'Describir las reglas de negocio que se aplican a la base de datos', 0, 0.00),
(390, 'Determinar las relaciones entre las tablas y entidades', 1, 1.00),
(390, 'Diseñar la estructura de almacenamiento de los archivos', 0, 0.00),
(390, 'Identificar la cantidad de espacio necesario para el almacenamiento de la información', 0, 0.00),
(391, 'Definir las restricciones y limitaciones de almacenamiento', 0, 0.00),
(391, 'Describir el diseño conceptual de la base de datos', 1, 1.00),
(391, 'Establecer los requisitos de seguridad para la base de datos', 0, 0.00),
(391, 'Implementar la lógica de negocio en la base de datos', 0, 0.00),
(392, 'Es la unión de varias tablas para mostrar relaciones entre ellas', 0, 0.00),
(392, 'Es un lenguaje de programación utilizado para acceder a bases de datos', 0, 0.00),
(392, 'Es un tipo de archivo que contiene información estructurada', 0, 0.00),
(392, 'Es una forma organizada de almacenar datos en una base de datos', 1, 1.00),
(393, 'Un conjunto de filas en una tabla', 1, 1.00),
(393, 'Un grupo de columnas en un diagrama entidad-relación', 0, 0.00),
(393, 'Un tipo de dato en un lenguaje de programación', 0, 0.00),
(393, 'Una colección de campos no relacionados', 0, 0.00),
(394, 'Es la agrupación de filas en una tabla', 0, 0.00),
(394, 'Es un grupo de registros con información similar', 0, 0.00),
(394, 'Es una característica o atributo que describe a un registro', 1, 1.00),
(394, 'Es una categoría para clasificar los datos', 0, 0.00),
(395, 'Almacena los registros de un conjunto de tuplas', 0, 0.00),
(395, 'Define la estructura y diseño de una tabla', 0, 0.00),
(395, 'Es el término utilizado para describir un atributo o característica de un registro', 1, 1.00),
(395, 'Representa una relación entre tablas', 0, 0.00),
(396, 'Un atributo o característica de un registro, utilizado para organizar y almacenar información.', 1, 1.00),
(396, 'Un conjunto de filas que almacenan información en la base de datos.', 0, 0.00),
(396, 'Un tipo de dato que se utiliza para clasificar los registros en una base de datos.', 0, 0.00),
(396, 'Una tabla que contiene varias columnas y filas que representan una relación entre las entidades.', 0, 0.00),
(397, 'Columna', 0, 0.00),
(397, 'Fila', 0, 0.00),
(397, 'Registro', 0, 0.00),
(397, 'Tabla', 1, 1.00),
(398, 'Un conjunto de columnas en una tabla', 0, 0.00),
(398, 'Un conjunto de filas que comparten el mismo identificador', 0, 0.00),
(398, 'Un tipo de dato numérico en una base de datos', 0, 0.00),
(398, 'Una colección de registros de una base de datos', 1, 1.00),
(399, 'Es el rango de valores permitidos que puede tomar una columna en una base de datos.', 1, 1.00),
(399, 'Es la forma en la que se almacenan los datos en un disco duro.', 0, 0.00),
(399, 'Es la restricción que se aplica a la entrada de datos en un formulario.', 0, 0.00),
(399, 'Es un tipo de clave primaria en una tabla.', 0, 0.00),
(400, 'El conjunto de reglas o restricciones para garantizar la integridad de los datos.', 1, 1.00),
(400, 'El rango de valores que puede adoptar cada fila.', 0, 0.00),
(400, 'La relación entre las tablas dentro de la base de datos.', 0, 0.00),
(400, 'Un grupo de filas relacionadas por una condición específica.', 0, 0.00),
(401, 'Atributo', 0, 0.00),
(401, 'Dominio', 1, 1.00),
(401, 'Entidad', 0, 0.00),
(401, 'Tabla', 0, 0.00),
(402, 'El tipo de dato que almacena cada columna.', 0, 0.00),
(402, 'La cantidad de filas y columnas que contiene.', 0, 0.00),
(402, 'La relación entre tablas en un diagrama entidad-relación.', 0, 0.00),
(402, 'Los pares (atributo, dominio) que definen cada columna.', 1, 1.00),
(403, 'Define la estructura y las propiedades de cada campo o columna en una tabla.', 1, 1.00),
(403, 'Define la relación entre diferentes tablas en una base de datos.', 0, 0.00),
(403, 'Describe los procedimientos para crear, actualizar y eliminar registros en una tabla.', 0, 0.00),
(403, 'Es utilizado para almacenar y recuperar información en la tabla.', 0, 0.00),
(404, 'Es un campo que contiene información personal y sensible.', 0, 0.00),
(404, 'Es una combinación de campos que identifican a un registro único.', 1, 1.00),
(404, 'Es una restricción para evitar duplicaciones en los registros.', 0, 0.00),
(404, 'Es una técnica para mejorar el rendimiento en consultas complejas.', 0, 0.00),
(406, 'La relación entre las tablas es llamada llave compuesta.', 0, 0.00),
(406, 'La relación entre las tablas se llama clave foránea.', 1, 1.00),
(406, 'La relación entre las tablas se llama claves primarias.', 0, 0.00),
(406, 'La relación entre las tablas se llama índice secundario.', 0, 0.00),
(407, 'Es el campo primario que se utiliza para identificar y relacionar registros.', 0, 0.00),
(407, 'Es el proceso mediante el cual se crean copias de seguridad de un sistema de gestión de bases de datos.', 0, 0.00),
(407, 'Es la combinación de campos que se utilizan para crear un índice único en una tabla.', 0, 0.00),
(407, 'Es la relación entre dos tablas que se establece a través de un campo.', 1, 1.00),
(408, 'La llave principal de una tabla, utilizada para identificar un registro único.', 0, 0.00),
(408, 'Un índice que se utiliza para mejorar el rendimiento al momento de realizar consultas.', 0, 0.00),
(408, 'Un tipo de relación entre dos o más tablas en un esquema de bases de datos, que permite relacionar filas entre ellas.', 1, 1.00),
(408, 'Una columna adicional en una tabla que contiene la información del usuario que ha realizado la inserción.', 0, 0.00),
(409, 'El uso de sentencias SQL para eliminar filas que no se ajusten a cierto criterio.', 0, 0.00),
(409, 'La creación de una tabla auxiliar para almacenar datos secundarios.', 0, 0.00),
(409, 'La existencia de un índice para mejorar la eficiencia al acceder a los registros.', 0, 0.00),
(409, 'Una cláusula que garantiza la unicidad de un valor en una columna o grupo de columnas.', 1, 1.00),
(410, 'Garantizar la consistencia y coherencia de los datos', 1, 1.00),
(410, 'Incrementar la eficiencia del rendimiento', 0, 0.00),
(410, 'Limitar el acceso a los datos', 0, 0.00),
(410, 'Reducir la cantidad de espacio utilizado por la base de datos', 0, 0.00),
(411, 'Convertir las entidades en tablas', 1, 1.00),
(411, 'Eliminar los atributos dependientes y no atómicos', 0, 0.00),
(411, 'Identificar las claves primarias y foráneas', 0, 0.00),
(411, 'Normalizar las relaciones entre las entidades', 0, 0.00),
(412, 'El ajuste de tamaño de la base de datos para que sea más eficiente', 0, 0.00),
(412, 'La creación de índices en las tablas', 0, 0.00),
(412, 'La eliminación de la duplicidad en los datos', 0, 0.00),
(412, 'La transformación del diseño conceptual en una representación relacional normalizada (3FN)', 1, 1.00),
(416, 'El diseño de la estructura de datos y la relación entre ellos', 0, 0.00),
(416, 'La creación de índices para mejorar la velocidad de búsqueda', 0, 0.00),
(416, 'La eliminación de redundancia y consistencia en los datos', 1, 1.00),
(416, 'La optimización del tamaño de la base de datos', 0, 0.00),
(417, 'Creación de la lógica de negocio', 0, 0.00),
(417, 'Definición de requisitos', 1, 1.00),
(417, 'Diseño físico de la base de datos', 0, 0.00),
(417, 'Implementación de la base de datos', 0, 0.00),
(418, 'Desnormalización', 0, 0.00),
(418, 'Normalización', 1, 1.00),
(418, 'Procedimiento de diseño', 0, 0.00),
(418, 'Transformación', 0, 0.00),
(420, 'Crear dos tablas, cada una con su respectiva llave primaria', 0, 0.00),
(420, 'Crear un atributo común entre las dos entidades', 0, 0.00),
(420, 'Crear una llave externa en la segunda entidad y crear una clave única en la primera entidad', 0, 0.00),
(420, 'Crear una nueva tabla que contenga la llave primaria de ambas entidades', 1, 1.00),
(421, 'Agregar claves primarias', 0, 0.00),
(421, 'Crear índices para mejorar la velocidad', 0, 0.00),
(421, 'Eliminar duplicados', 0, 0.00),
(421, 'Identificar la entidad y sus atributos', 1, 1.00),
(423, 'La conversión no es necesaria y puede hacerse directamente.', 0, 0.00),
(423, 'Primero, crea la tabla de relacion y luego normalizas las tablas.', 0, 0.00),
(423, 'Primero, identifica los atributos clave y luego transforma la relación en una representación relacional.', 1, 1.00),
(423, 'Primero, normaliza las relaciones y luego crea la tabla de relacion.', 0, 0.00),
(425, 'Cadena', 0, 0.00),
(425, 'Entero', 0, 0.00),
(425, 'Fecha', 1, 1.00),
(425, 'Numérico', 0, 0.00),
(427, 'Asignando permisos de acceso específicos a los usuarios.', 0, 0.00),
(427, 'Creando copias de seguridad regularmente.', 0, 0.00),
(427, 'Estableciendo restricciones de integridad de entidad a partir del diseño conceptual.', 1, 1.00),
(427, 'Utilizando índices en las columnas clave.', 0, 0.00),
(428, 'Asignando a cada tabla un álgebra relacional específica.', 0, 0.00),
(428, 'Creando un índice en ambas tablas para facilitar las consultas.', 0, 0.00),
(428, 'Definiendo una llave primaria común entre las dos tablas.', 1, 1.00),
(428, 'Estableciendo restricciones de integridad de entidad en la tabla secundaria.', 0, 0.00),
(429, 'No es necesario establecer restricciones de integridad referencial entre ambas entidades.', 0, 0.00),
(429, 'Se debe definir una llave principal en la tabla \"Departamento\" y una llave candidata en la tabla \"Persona\".', 0, 0.00),
(429, 'Un departamento puede tener varias personas.', 0, 0.00),
(429, 'Una persona debe estar asignada a un solo departamento.', 1, 1.00),
(431, 'Incrementar la velocidad de acceso a los datos.', 0, 0.00),
(431, 'Mejorar la integridad referencial y reducir el riesgo de anomalías.', 1, 1.00),
(431, 'Reducir la cantidad de espacio requerido para almacenar la información.', 0, 0.00),
(431, 'Simplificar la implementación y mantenimiento de la base de datos.', 0, 0.00),
(432, 'Aumentar la complejidad del diseño de la base de datos', 0, 0.00),
(432, 'Eliminar duplicidades y reducir la inconsistencia', 1, 1.00),
(432, 'Mejorar la velocidad de acceso a la información', 0, 0.00),
(432, 'Reducir la cantidad de datos almacenados', 0, 0.00),
(433, 'Aumentar la cantidad de filas y columnas en una base de datos.', 0, 0.00),
(433, 'Eliminar redundancia y mejorar la integridad de los datos, facilitando el mantenimiento y escalabilidad del sistema.', 1, 1.00),
(433, 'Incrementar la seguridad de los datos.', 0, 0.00),
(433, 'Reducir la cantidad de campos en una tabla.', 0, 0.00),
(436, 'Es la forma más común de organización de la información', 0, 0.00),
(436, 'Es la forma normal más básica y ampliamente utilizada', 0, 0.00),
(436, 'Es un conjunto de reglas para mantener la integridad en una base de datos', 1, 1.00),
(436, 'Es un lenguaje utilizado para crear bases de datos', 0, 0.00),
(437, 'El proceso para crear una base de datos.', 0, 0.00),
(437, 'La estructura fundamental para almacenar la data.', 1, 1.00),
(437, 'Un conjunto de reglas para organizar la información.', 0, 0.00),
(437, 'Un patrón que se utiliza para clasificar los datos.', 0, 0.00),
(438, 'Agrupar los campos en un grupo lógico.', 0, 0.00),
(438, 'Dividir la información en diferentes tablas relacionadas.', 0, 0.00),
(438, 'Eliminar las repeticiones y duplicaciones en la tabla.', 1, 1.00),
(438, 'Reducir el tamaño del archivo de la base de datos.', 0, 0.00),
(439, 'Es un lenguaje para administrar las consultas a una base de datos.', 0, 0.00),
(439, 'Es un lenguaje para definir y crear tablas, índices y otros elementos de la estructura de una base de datos relacional.', 1, 1.00),
(439, 'Es un lenguaje para insertar, actualizar o eliminar registros en una base de datos.', 0, 0.00),
(439, 'Es un lenguaje para mostrar los datos almacenados en una base de datos.', 0, 0.00),
(440, 'Crear consultas para recuperar información de una base de datos.', 0, 0.00),
(440, 'Definir y crear estructuras y relaciones en la base de datos.', 1, 1.00),
(440, 'Eliminar registros repetidos en una tabla.', 0, 0.00),
(440, 'Realizar análisis estadísticos sobre los datos almacenados en la base de datos.', 0, 0.00),
(441, 'Para administrar permisos y autorizaciones para usuarios en la base de datos', 0, 0.00),
(441, 'Para crear, modificar o eliminar estructuras de la base de datos', 1, 1.00),
(441, 'Para ejecutar consultas y recuperar información de una base de datos', 0, 0.00),
(441, 'Para indexar y optimizar la velocidad de búsqueda', 0, 0.00),
(442, 'Crear un almacenamiento de datos en disco duro', 0, 0.00),
(442, 'Crear un índice en una tabla', 0, 0.00),
(442, 'Crear una nueva tabla en una base de datos', 1, 1.00),
(442, 'Modificar la estructura de una tabla existente', 0, 0.00),
(443, 'ALTER TABLE', 1, 1.00),
(443, 'CREATE TABLE', 0, 0.00),
(443, 'DROP TABLE', 0, 0.00),
(443, 'INDEX', 0, 0.00),
(444, 'CREATE', 0, 0.00),
(444, 'DROP', 1, 1.00),
(444, 'SELECT', 0, 0.00),
(444, 'UPDATE', 0, 0.00),
(445, 'Que esté relacionado con el tipo de dato del objeto.', 0, 0.00),
(445, 'Que sea autoincremental y se actualice automáticamente cada vez que se ingresa nuevo registro.', 0, 0.00),
(445, 'Que sea único y no pueda ser eliminado.', 1, 1.00),
(445, 'Que tenga una longitud variable según la cantidad de información a almacenar.', 0, 0.00),
(446, 'La restricción de integridad referencial, que relaciona los datos entre diferentes tablas.', 0, 0.00),
(446, 'La restricción de no vacío, que impone que nunca se pueda dejar en blanco un campo obligatorio.', 0, 0.00),
(446, 'La restricción de tamaño, que establece un límite en el número de caracteres que puede tener un campo.', 0, 0.00),
(446, 'La restricción de unicidad, que impone que no existan duplicados.', 1, 1.00),
(447, 'Que el identificador debe estar relacionado con una clave primaria.', 0, 0.00),
(447, 'Que el identificador debe ser único.', 1, 1.00),
(447, 'Que el identificador no puede ser utilizado por dos o más objetos al mismo tiempo.', 0, 0.00),
(447, 'Que el identificador puede ser modificado después de haber sido asignado.', 0, 0.00),
(448, 'Carácter variable', 0, 0.00),
(448, 'Entrada de texto', 0, 0.00),
(448, 'Fecha y hora', 1, 1.00),
(448, 'Número entero', 0, 0.00),
(449, '', 1, 1.00),
(449, ' Explicación:', 0, 0.00),
(449, ' Opción correcta: B)', 0, 0.00),
(449, 'tipo de dato CHAR en SQL se utiliza para almacenar cadenas de caracteres (texto), y no es un tipo numérico, lógico o temporal.', 0, 0.00),
(449, 'Tipo numérico B) Tipo texto C) Tipo logico D) Tipo temporal', 0, 0.00),
(450, 'Arreglo', 0, 0.00),
(450, 'Cadena', 0, 0.00),
(450, 'Entero', 1, 1.00),
(450, 'Fecha', 0, 0.00),
(451, 'ALTER TABLE', 0, 0.00),
(451, 'CONSTRAINT', 0, 0.00),
(451, 'PRIMARY KEY', 1, 1.00),
(451, 'UNIQUE', 0, 0.00),
(452, 'CHECK', 0, 0.00),
(452, 'NOT NULL', 1, 1.00),
(452, 'PRIMARY KEY', 0, 0.00),
(452, 'UNIQUE', 0, 0.00),
(453, 'FOREIGN KEY', 0, 0.00),
(453, 'NOT NULL', 0, 0.00),
(453, 'PRIMARY KEY', 1, 1.00),
(453, 'UNIQUE', 0, 0.00),
(454, 'FOREIGN KEY', 0, 0.00),
(454, 'NOT NULL', 0, 0.00),
(454, 'PRIMARY KEY', 0, 0.00),
(454, 'UNIQUE', 1, 1.00),
(455, 'Es el mecanismo para recuperar y almacenar los datos de manera eficiente en una base de datos.', 0, 0.00),
(455, 'Es el proceso de crear y gestionar las claves primarias y secundarias en una base de datos.', 0, 0.00),
(455, 'Es un conjunto de reglas que garantiza la consistencia y coherencia en la relación entre dos tablas.', 1, 1.00),
(455, 'Es un método para mejorar la performance de una aplicación que se comunica con una base de datos.', 0, 0.00),
(456, 'Check Constraint', 0, 0.00),
(456, 'Foreign Key', 1, 1.00),
(456, 'Primary Key', 0, 0.00),
(456, 'Unique Index', 0, 0.00),
(457, 'FOREIGN KEY', 1, 1.00),
(457, 'NOT NULL', 0, 0.00),
(457, 'PRIMARY KEY', 0, 0.00),
(457, 'UNIQUE', 0, 0.00),
(459, 'CREATE TABLE', 0, 0.00),
(459, 'INDEX', 1, 1.00),
(459, 'PRIMARY KEY', 0, 0.00),
(459, 'UNIQUE', 0, 0.00),
(460, 'Foreign Key', 0, 0.00),
(460, 'Index', 0, 0.00),
(460, 'Primary Key', 1, 1.00),
(460, 'Unique', 0, 0.00),
(461, 'Modelo de abstracción', 0, 0.00),
(461, 'Modelo de programación procedimental', 0, 0.00),
(461, 'Modelo evento-condición-acción', 1, 1.00),
(461, 'Modelo relacional', 0, 0.00),
(462, 'Modelo de almacenamiento de datos', 0, 0.00),
(462, 'Modelo de consultas condicionales', 0, 0.00),
(462, 'Modelo de diseño de datos', 0, 0.00),
(462, 'Modelo de eventos-condición-acción (ECA)', 1, 1.00),
(464, 'Controlar el acceso a los datos almacenados en la base de datos.', 1, 1.00),
(464, 'Crear un sistema de autenticación y autorización robusto.', 0, 0.00),
(464, 'Implementar procedimientos de recuperación de datos.', 0, 0.00),
(464, 'Realizar análisis estadísticos sobre el rendimiento del servidor.', 0, 0.00),
(465, 'Autenticación y autorización', 1, 1.00),
(465, 'Cifrado y hashing', 0, 0.00),
(465, 'Indexado y clustering', 0, 0.00),
(465, 'Transacción y backup', 0, 0.00),
(466, 'Son derechos especiales que se otorgan a usuarios en una base de datos', 1, 1.00),
(466, 'Son la estructura interna de una base de datos', 0, 0.00),
(466, 'Son permisos para conectarse a la base de datos', 0, 0.00),
(466, 'Son restricciones impuestas por la seguridad para acceder a la base de datos', 0, 0.00),
(467, 'Asignar derechos para crear, actualizar o eliminar objetos en una base de datos.', 0, 0.00),
(467, 'Controlar la cantidad de usuarios que pueden acceder a la base de datos.', 0, 0.00),
(467, 'Establecer los permisos para que un usuario pueda realizar operaciones como leer, escribir y eliminar registros.', 1, 1.00),
(467, 'Registar y controlar el historial de cambios en la base de datos.', 0, 0.00),
(468, 'Es el derecho de acceso a una base de datos.', 0, 0.00),
(468, 'Es el proceso de creación y diseño de un esquema de base de datos.', 0, 0.00),
(468, 'Es la autorización para realizar operaciones específicas en un sistema de gestión de bases de datos.', 1, 1.00),
(468, 'Es una forma de organizar los permisos y roles dentro de una base de datos.', 0, 0.00),
(469, 'Los roles no tienen acceso a la base de datos, solo los usuarios pueden acceder.', 0, 0.00),
(469, 'Los usuarios tienen permisos más amplios que los roles en una base de datos.', 0, 0.00),
(469, 'Un usuario es un individuo que tiene acceso a la base de datos, mientras que un rol es el nivel de privilegios que se le asigna.', 1, 1.00),
(469, 'Un usuario y un rol son sinónimos y se utilizan indistintamente para referirse al mismo concepto.', 0, 0.00),
(470, 'Campos', 0, 0.00),
(470, 'Clave de acceso', 0, 0.00),
(470, 'Roles', 1, 1.00),
(470, 'Tipos de datos', 0, 0.00),
(471, 'Consultas', 0, 0.00),
(471, 'Roles', 1, 1.00),
(471, 'Tablas', 0, 0.00),
(471, 'Usuarios', 0, 0.00),
(472, 'Asignar roles y permisos para diferentes tareas', 1, 1.00),
(472, 'Controlar los usuarios que pueden acceder a la base de datos', 0, 0.00),
(472, 'Implementar la autenticación en el sistema', 0, 0.00),
(472, 'Monitorear las transacciones de la base de datos', 0, 0.00),
(473, 'Es un instrumento para definir las políticas de autenticación y autorización en una base de datos', 0, 0.00),
(473, 'Es un método para asignar permisos y roles a los usuarios en una Base de Datos', 1, 1.00),
(473, 'Es un proceso para crear copias de respaldo de la base de datos', 0, 0.00),
(473, 'Es una herramienta para administrar la seguridad de acceso a los archivos y carpetas en la base de datos', 0, 0.00),
(474, 'Para autorizar y restringir accésos a los usuarios.', 1, 1.00),
(474, 'Para crear un backup regular de la base de datos.', 0, 0.00),
(474, 'Para indexar las tablas más importantes.', 0, 0.00),
(474, 'Para optimizar el rendimiento de consultas.', 0, 0.00),
(475, 'ALTER DATABASE', 0, 0.00),
(475, 'CREATE ROLE', 0, 0.00),
(475, 'DROP TABLE', 0, 0.00),
(475, 'GRANT', 1, 1.00),
(476, 'COMMIT', 0, 0.00),
(476, 'GRANT', 1, 1.00),
(476, 'ROLLBACK', 0, 0.00),
(476, 'TRUNCATE', 0, 0.00),
(477, 'COMMIT', 0, 0.00),
(477, 'CREATE', 1, 1.00),
(477, 'DROP', 0, 0.00),
(477, 'GRANT', 0, 0.00),
(478, 'Para aumentar el rendimiento de las consultas.', 0, 0.00),
(478, 'Para mejorar la seguridad de la información.', 0, 0.00),
(478, 'Para reducir el tamaño del disco duro y almacenar más datos.', 0, 0.00),
(478, 'Para simplificar la consulta y presentación de datos.', 1, 1.00),
(479, 'Para crear un backup de la información almacenada', 0, 0.00),
(479, 'Para presentar datos de manera jerárquica', 0, 0.00),
(479, 'Para realizar consultas complejas', 1, 1.00),
(479, 'Para reducir la cantidad de espacio ocupado por la base de datos', 0, 0.00),
(480, 'Es un esquema completo y autónomo en una base de datos.', 0, 0.00),
(480, 'Es un tipo de tabla que se utiliza para almacenar datos.', 0, 0.00),
(480, 'Es una consulta SQL guardada temporalmente, que no modifica los datos subyacentes.', 1, 1.00),
(480, 'Es una tabla que puede ser modificada directamente por el usuario.', 0, 0.00),
(481, 'Agregar información adicional a la base de datos', 0, 0.00),
(481, 'Crear un nuevo espacio de trabajo', 0, 0.00),
(481, 'Resaltar los valores más repetidos en una tabla', 0, 0.00),
(481, 'Transformar la estructura de los datos para facilitar consultas', 1, 1.00),
(483, 'Utilizando la sentencia \"ALTER TABLE\"', 0, 0.00),
(483, 'Utilizando la sentencia \"CREATE VIEW\"', 1, 1.00),
(483, 'Utilizando la sentencia \"INSERT INTO\"', 0, 0.00),
(483, 'Utilizando la sentencia \"SELECT INTO\"', 0, 0.00),
(484, 'Agregar restricciones a una tabla existente para evitar errores de entrada', 0, 0.00),
(484, 'Crear una nueva tabla con la estructura y los datos de una base de datos', 0, 0.00),
(484, 'Eliminar filas o columnas de una tabla existente', 0, 0.00),
(484, 'Proporcionar un alias temporal para una consulta compleja en lugar de crear una tabla física', 1, 1.00),
(485, 'CREATE TABLE', 1, 1.00),
(485, 'DROP VIEW', 0, 0.00),
(485, 'INDEX', 0, 0.00),
(485, 'SELECT', 0, 0.00),
(486, 'NOT NULL id', 0, 0.00),
(486, 'PRIMARY KEY (id), AUTO_INCREMENT', 0, 0.00),
(486, 'PRIMARY KEY(id)', 1, 1.00),
(486, 'UNIQUE id', 0, 0.00),
(487, 'DESCRIBE TABLE_NAME; SHOW KEYS;', 1, 1.00),
(487, 'KEY TABLE_NAME;', 0, 0.00),
(487, 'PRIMARIES TABLE_NAME;', 0, 0.00),
(487, 'SELECT * FROM TABLE_NAME WHERE COLUMN_NAME = PRIMARY_KEY', 0, 0.00),
(488, 'Utilizando la consulta SELECT * FROM tabla.', 0, 0.00),
(488, 'Utilizando la sentencia DESCRIBE tabla.', 0, 0.00),
(488, 'Utilizando la sentencia FOREIGN KEY.', 1, 1.00),
(488, 'Utilizando la sentencia SHOW TABLES.', 0, 0.00),
(489, 'Consultando el catálogo de la base de datos', 1, 1.00),
(489, 'Ejecutando una sentencia SELECT que utilice el operador LIKE', 0, 0.00),
(489, 'Mediante un comando SHOW TABLES', 0, 0.00),
(489, 'Utilizando la función LIMIT y ORDER BY', 0, 0.00),
(490, 'ALTER TABLE table_name ADD FOREIGN KEY', 0, 0.00),
(490, 'DESCRIBE TABLE table_name', 0, 0.00),
(490, 'SELECT * FROM table_name', 0, 0.00),
(490, 'SHOW TABLES WITH FOREIGN KEYS', 1, 1.00),
(491, 'CHECK', 0, 0.00),
(491, 'FOREIGN KEY', 1, 1.00),
(491, 'PRIMARY KEY', 0, 0.00),
(491, 'UNIQUE', 0, 0.00),
(492, 'A través de un índice único en la tabla que contiene la clave primaria.', 0, 0.00),
(492, 'Con el comando \"CREATE INDEX\" y la cláusula \"UNIQUE\".', 0, 0.00),
(492, 'Creando una relación entre dos tablas utilizando la cláusula JOIN.', 0, 0.00),
(492, 'Utilizando la cláusula \"FOREIGN KEY\" en la sentencia CREATE TABLE.', 1, 1.00),
(494, 'Añadir la clave primaria con UNIQUE.', 0, 0.00),
(494, 'Especificar un valor predefinido para el campo.', 0, 0.00),
(494, 'Utilizar la clausula CHECK para especificar una condición de restricción.', 1, 1.00),
(494, 'Utilizar la clausula WHERE para filtrar datos.', 0, 0.00),
(495, 'ALTER TABLE table_name ADD PRIMARY KEY', 0, 0.00),
(495, 'CHECK (column1 + column2 <= 10)', 1, 1.00),
(495, 'CREATE INDEX index_name ON table_name', 0, 0.00),
(495, 'NOT NULL (column_name)', 0, 0.00),
(496, 'La restricción CHECK define la relación entre dos o más campos de una tabla.', 0, 0.00),
(496, 'La restricción CHECK es utilizada para garantizar la unicidad de los registros.', 0, 0.00),
(496, 'La restricción CHECK permite registrar cualquier restricción de integridad.', 0, 0.00),
(496, 'La restricción CHECK se utiliza para limitar el tipo de dato que puede ser ingresado en un campo.', 1, 1.00),
(497, 'Un método para conectarse a una base de datos.', 0, 0.00),
(497, 'Un tipo de dato para almacenar información.', 0, 0.00),
(497, 'Un tipo de relación entre tablas.', 0, 0.00),
(497, 'Una sentencia SQL que se ejecuta automáticamente cuando se produce una acción determinada en la base de datos.', 1, 1.00),
(498, 'Creando un diagrama de flujo que describe el flujo de información.', 0, 0.00),
(498, 'Definiendo las reglas de autorización para cada columna y fila de la tabla.', 0, 0.00),
(498, 'Estableciendo la asignación de derechos y responsabilidades.', 0, 0.00),
(498, 'Identificando los permisos de acceso y roles del usuario.', 1, 1.00),
(499, 'Diagrama de acceso', 0, 0.00),
(499, 'Mapa de seguridad', 0, 0.00),
(499, 'Matriz de privilegios', 1, 1.00),
(499, 'Tabla de usuarios', 0, 0.00),
(500, 'Definir las políticas de seguridad para el acceso a los datos.', 1, 1.00),
(500, 'Desarrollar un plan de recuperación ante incidentes de seguridad en una base de datos.', 0, 0.00),
(500, 'Identificar los usuarios y permisos necesarios para la implementación de un sistema de gestión de bases de datos.', 0, 0.00),
(500, 'Realizar un análisis de rendimiento y optimización en la estructura de una base de datos.', 0, 0.00),
(501, 'Usando el comando \"CREATE USER\".', 1, 1.00),
(501, 'Usando el comando \"DROP TABLE\".', 0, 0.00),
(501, 'Usando el comando \"INSERT INTO\".', 0, 0.00),
(501, 'Usando el comando \"SELECT\".', 0, 0.00),
(502, 'ALTER TABLE users ADD COLUMN newuser;', 0, 0.00),
(502, 'CREATE TABLE usuario (name, passowrd);', 0, 0.00),
(502, 'CREATE USER username;', 1, 1.00),
(502, 'INSERT INTO usuario (name, password);', 0, 0.00),
(503, 'Crear un nuevo usuario y asignarle permisos de lectura, escritura y ejecución para todas las tablas y campos.', 0, 0.00),
(503, 'Crear un nuevo usuario y definir los permisos individuales para cada tabla y campo utilizando GRANT y REVOKE.', 1, 1.00),
(503, 'Utilizar la clausula SELECT para permitir o denegar el acceso a una tabla o campo.', 0, 0.00),
(503, 'Utilizar la clausula SHOW para ver los permisos existentes en la base de datos.', 0, 0.00),
(504, 'Foreign Keys', 0, 0.00),
(504, 'Indexes', 0, 0.00),
(504, 'Privilegios Rol-Based Access Control (RBAC)', 1, 1.00),
(504, 'Stored Procedures', 0, 0.00),
(505, 'Clave primaria', 0, 0.00),
(505, 'Índice', 0, 0.00),
(505, 'Tabla', 0, 0.00),
(505, 'Vista', 1, 1.00),
(506, 'ALTER', 0, 0.00),
(506, 'CREATE INDEX', 0, 0.00),
(506, 'JOIN', 0, 0.00),
(506, 'SELECT', 1, 1.00),
(507, 'CREATE TABLE', 0, 0.00),
(507, 'INDEX', 0, 0.00),
(507, 'SELECT', 0, 0.00),
(507, 'VIEW', 1, 1.00),
(508, 'Es un lenguaje de análisis estadístico y reporting.', 0, 0.00),
(508, 'Es un lenguaje de creación y gestión de bases de datos.', 0, 0.00),
(508, 'Es un lenguaje de descripción de estructura de bases de datos.', 0, 0.00),
(508, 'Es un lenguaje de manipulación de los datos existentes en una base de datos.', 1, 1.00),
(509, 'Crear estructura y diseño de la base de datos', 0, 0.00),
(509, 'Eliminar la estructura y diseño de la base de datos', 0, 0.00),
(509, 'Modificar o actualizar la información ya existente en una base de datos', 1, 1.00),
(509, 'Visualizar la información almacenada en una base de datos', 0, 0.00),
(510, 'Define las restricciones y políticas de seguridad para un sistema de bases de datos.', 0, 0.00),
(510, 'Diseña un esquema de almacenamiento para una base de datos.', 0, 0.00),
(510, 'Inserta, modifica o elimina datos en una base de datos.', 0, 0.00),
(510, 'Manipula la estructura de los datos.', 1, 1.00),
(511, 'Diseñar la base de datos según las necesidades del negocio.', 0, 0.00),
(511, 'Normalizar los datos para evitar redundancia.', 1, 1.00),
(511, 'Utilizar claves primarias y secundarias para relacionar tablas.', 0, 0.00),
(511, 'Utilizar índices para mejorar el rendimiento.', 0, 0.00),
(513, 'DELETE', 1, 1.00),
(513, 'INSERT', 0, 0.00),
(513, 'SELECT', 0, 0.00),
(513, 'UPDATE', 0, 0.00),
(514, 'DELETE', 0, 0.00),
(514, 'INSERT', 1, 1.00),
(514, 'SELECT', 0, 0.00),
(514, 'UPDATE', 0, 0.00),
(515, '-', 0, 0.00),
(515, 'Σ', 0, 0.00),
(515, '∩', 0, 0.00),
(515, '∪', 1, 1.00),
(516, 'CROSS PRODUCT', 0, 0.00),
(516, 'DIVIDE', 0, 0.00),
(516, 'JOIN', 1, 1.00),
(516, 'UNION', 0, 0.00),
(517, 'AND', 0, 0.00),
(517, 'FROM', 0, 0.00),
(517, 'LIKE', 0, 0.00),
(517, 'SELECT', 1, 1.00),
(518, 'Se utiliza para actualizar los valores de una columna', 0, 0.00),
(518, 'Se utiliza para crear un índice en una tabla', 0, 0.00),
(518, 'Se utiliza para filtrar datos en una base de datos', 0, 0.00),
(518, 'Se utiliza para ordenar los resultados de una consulta', 1, 1.00),
(519, 'Es utilizado para definir la condición de selección.', 0, 0.00),
(519, 'Se utiliza para especificar la cantidad de filas a devolver.', 0, 0.00),
(519, 'Se utiliza para ordenar los resultados.', 0, 0.00),
(519, 'Se utiliza para seleccionar las columnas que se desean mostrar.', 1, 1.00),
(520, 'Para actualizar los registros de una tabla', 0, 0.00),
(520, 'Para crear una nueva base de datos', 0, 0.00),
(520, 'Para eliminar una tabla completa', 0, 0.00),
(520, 'Para proyectar columnas y otros valores en un resultado', 1, 1.00),
(521, 'Asigna valor a las filas de la tabla.', 0, 0.00),
(521, 'Crea una nueva columna con datos concatenados.', 0, 0.00),
(521, 'Elimina filas de la tabla.', 0, 0.00),
(521, 'Proyecta columnas y/o otros valores en el ámbito de la consulta.', 1, 1.00),
(522, 'Agrupar resultados', 0, 0.00),
(522, 'Crear índices en una tabla', 0, 0.00),
(522, 'Filtrar filas', 1, 1.00),
(522, 'Mostrar solo un campo específico', 0, 0.00),
(523, 'Para crear una relación entre dos tablas.', 0, 0.00),
(523, 'Para eliminar filas de una tabla.', 0, 0.00),
(523, 'Para filtrar las filas de una consulta y devolver solo aquellas que cumplen con ciertas condiciones.', 1, 1.00),
(523, 'Para ordenar las filas de una tabla por una columna especificada.', 0, 0.00),
(524, 'Agrega nuevas columnas a una tabla.', 0, 0.00),
(524, 'Elimina registros de una tabla.', 0, 0.00),
(524, 'Filtra las filas de una tabla según los datos solicitados.', 1, 1.00),
(524, 'Reordena las filas de una tabla.', 0, 0.00),
(525, 'Es un tipo especial de clave primaria', 0, 0.00),
(525, 'Permite ordenar los resultados de una consulta en sentido ascendente o descendente', 1, 1.00),
(525, 'Se utiliza para buscar registros en una base de datos', 0, 0.00),
(525, 'Sirve para crear índices en una tabla', 0, 0.00),
(526, 'Crear un índice en la base de datos', 0, 0.00),
(526, 'Eliminar duplicados en la tabla', 0, 0.00),
(526, 'Ordernar los registros según un campo específico', 1, 1.00),
(526, 'Reducir la cantidad de filas en la tabla', 0, 0.00),
(527, 'Se utiliza para crear índices en una tabla', 0, 0.00),
(527, 'Se utiliza para eliminar duplicados en un conjunto de datos', 0, 0.00),
(527, 'Se utiliza para limitar el número de filas que se devuelven en un resultado', 0, 0.00),
(527, 'Se utiliza para ordenar los resultados de acuerdo a una columna específica', 1, 1.00),
(528, 'Agrupa filas y devuelve el valor más pequeño de un campo.', 0, 0.00),
(528, 'Agrupa filas y devuelve la media aritmética de un campo.', 0, 0.00),
(528, 'Agrupa filas y devuelve la moda de un campo.', 0, 0.00),
(528, 'Agrupa filas y devuelve la suma total de un campo.', 1, 1.00),
(529, 'AVG', 0, 0.00),
(529, 'COUNT', 0, 0.00),
(529, 'MAX', 0, 0.00),
(529, 'SUM', 1, 1.00),
(530, 'Permite agregar valores', 1, 1.00),
(530, 'Permite cancelar una sentencia SQL', 0, 0.00),
(530, 'Permite eliminar filas', 0, 0.00),
(530, 'Permite reorganizar la estructura de la tabla', 0, 0.00);
INSERT INTO `opcion` (`PreguntaId`, `Texto`, `Correcta`, `Calificacion`) VALUES
(531, 'Agrupa filas que tienen valores iguales en una o varias columnas.', 1, 1.00),
(531, 'Genera informes y vistas de datos.', 0, 0.00),
(531, 'Permite la creación y manipulación de tablas.', 0, 0.00),
(531, 'Realiza consultas condicionales para filtrar datos.', 0, 0.00),
(532, 'Para agrupar filas que comparten valores en uno o más columnas', 1, 1.00),
(532, 'Para eliminar duplicados en una base de datos', 0, 0.00),
(532, 'Para filtrar los registros que cumplen con cierta condición', 0, 0.00),
(532, 'Para ordenar los resultados de una consulta', 0, 0.00),
(533, 'Consulta y manipulación de los resultados', 1, 1.00),
(533, 'Solo inserción de nuevos registros', 0, 0.00),
(533, 'Solo lectura de información', 0, 0.00),
(533, 'Subconsulta para utilizar la respuesta en un cálculo', 0, 0.00),
(534, 'Crear tablas derivadas y consultarlas como si fueran originales', 1, 1.00),
(534, 'Evaluar operaciones matemáticas complejas', 0, 0.00),
(534, 'Realizar una búsqueda recursiva en un conjunto de datos', 0, 0.00),
(534, 'Reemplazar consultas complejas por consultas más simples', 0, 0.00),
(535, 'Un subconsultar dentro de una consulta principal', 0, 0.00),
(535, 'Un tipo de índice que se utiliza para optimizar la velocidad de búsqueda', 0, 0.00),
(535, 'Una forma de crear un nuevo alias para una tabla', 0, 0.00),
(535, 'Una técnica para mejorar el rendimiento de consultas complejas', 1, 1.00),
(536, 'Un subconsulta reutilizable multiple veces en una consulta SQL', 1, 1.00),
(536, 'Un tipo de índice que optimiza la búsqueda en una tabla', 0, 0.00),
(536, 'Un tipo de vista temporal en una base de datos', 0, 0.00),
(536, 'Una cláusula para actualizar múltiples filas al mismo tiempo', 0, 0.00),
(537, 'Un método para relacionar tablas en un esquema de bases de datos.', 0, 0.00),
(537, 'Un tipo especial de índice para mejorar la velocidad de búsqueda.', 0, 0.00),
(537, 'Una forma de agrupar resultados utilizando la cláusula GROUP BY.', 0, 0.00),
(537, 'Una sentencia SQL que permite crear una vista temporal en memoria.', 1, 1.00),
(539, 'Consulta select', 0, 0.00),
(539, 'Indice secundario', 0, 0.00),
(539, 'JOIN', 1, 1.00),
(539, 'Subconsulta', 0, 0.00),
(540, 'Agrega nuevos campos a las tablas originales', 0, 0.00),
(540, 'Combina los registros de ambas tablas si las columnas que se comparan son diferentes', 0, 0.00),
(540, 'Compara los valores de una columna en una tabla con los valores de otra columna en la otra tabla y devuelve solo los registros que coinciden', 1, 1.00),
(540, 'Elimina registros duplicados entre ambas tablas', 0, 0.00),
(541, 'Except', 1, 1.00),
(541, 'Inner Join', 0, 0.00),
(541, 'Intersect', 0, 0.00),
(541, 'Union', 0, 0.00),
(544, 'DELETE', 0, 0.00),
(544, 'INSERT INTO', 1, 1.00),
(544, 'SELECT', 0, 0.00),
(544, 'UPDATE', 0, 0.00),
(545, 'DELETE', 0, 0.00),
(545, 'INSERT', 1, 1.00),
(545, 'SELECT', 0, 0.00),
(545, 'UPDATE', 0, 0.00),
(546, 'DELETE', 0, 0.00),
(546, 'INSERT', 1, 1.00),
(546, 'SELECT', 0, 0.00),
(546, 'UPDATE', 0, 0.00),
(547, 'DELETE FROM tabla', 0, 0.00),
(547, 'INSERT INTO tabla (columna1, columna2)', 0, 0.00),
(547, 'SELECT * FROM tabla', 0, 0.00),
(547, 'UPDATE tabla SET columna1 = valor, columna2 = valor', 1, 1.00),
(548, 'DELETE', 0, 0.00),
(548, 'INSERT', 0, 0.00),
(548, 'SELECT', 0, 0.00),
(548, 'UPDATE', 1, 1.00),
(549, 'Utilizando el comando \"ALTER\"', 0, 0.00),
(549, 'Utilizando el comando \"DELETE FROM\"', 1, 1.00),
(549, 'Utilizando el comando \"DROP TABLE\"', 0, 0.00),
(549, 'Utilizando el comando \"TRUNCATE\"', 0, 0.00),
(550, 'ALTER TABLE empleados DROP COLUMN ALL;', 0, 0.00),
(550, 'DELETE FROM empleados;', 1, 1.00),
(550, 'SELECT * FROM empleados FOR DELETE;', 0, 0.00),
(550, 'UPDATE empleados SET deleted = 1;', 0, 0.00),
(551, 'DELETE', 1, 1.00),
(551, 'INSERT', 0, 0.00),
(551, 'SELECT', 0, 0.00),
(551, 'UPDATE', 0, 0.00),
(552, 'SELECT * FROM ventas', 0, 0.00),
(552, 'SELECT AVG(ventas)', 0, 0.00),
(552, 'SELECT COUNT(ventas)', 0, 0.00),
(552, 'SELECT SUM(ventas)', 1, 1.00),
(553, 'INSERT INTO', 0, 0.00),
(553, 'SELECT *', 1, 1.00),
(553, 'SELECT nombre', 0, 0.00),
(553, 'UPDATE', 0, 0.00),
(554, 'FROM', 0, 0.00),
(554, 'JOIN', 0, 0.00),
(554, 'ORDER BY', 1, 1.00),
(554, 'SELECT', 0, 0.00),
(555, 'FROM', 0, 0.00),
(555, 'GROUP BY', 0, 0.00),
(555, 'JOIN', 0, 0.00),
(555, 'WHERE', 1, 1.00),
(556, 'FROM', 0, 0.00),
(556, 'ORDER BY', 1, 1.00),
(556, 'SELECT', 0, 0.00),
(556, 'WHERE', 0, 0.00),
(557, 'FROM', 0, 0.00),
(557, 'GROUP BY', 1, 1.00),
(557, 'JOIN', 0, 0.00),
(557, 'SELECT', 0, 0.00),
(558, 'FROM', 0, 0.00),
(558, 'GROUP BY', 1, 1.00),
(558, 'SELECT', 0, 0.00),
(558, 'WHERE', 0, 0.00),
(559, 'GROUP BY', 1, 1.00),
(559, 'JOIN', 0, 0.00),
(559, 'SELECT', 0, 0.00),
(559, 'UNION', 0, 0.00),
(560, 'FROM', 0, 0.00),
(560, 'GROUP BY', 1, 1.00),
(560, 'SELECT', 0, 0.00),
(560, 'WHERE', 0, 0.00),
(561, 'Es un alias para la palabra clave SELECT', 0, 0.00),
(561, 'Es un tipo especializado de subconsulta', 0, 0.00),
(561, 'Es una forma de crear una vista temporal para utilizar en una consulta', 1, 1.00),
(561, 'Permite ejecutar un comando SQL que devuelva resultados en formato CSV', 0, 0.00),
(562, 'JOIN', 0, 0.00),
(562, 'SELECT', 0, 0.00),
(562, 'UNION', 0, 0.00),
(562, 'WITH', 1, 1.00),
(563, 'Es un método para evitar la sobrecarga del servidor al realizar consultas complejas.', 0, 0.00),
(563, 'No es una técnica común en SQL.', 0, 0.00),
(563, 'Permite ejecutar consultas dentro de otra consulta para obtener resultados más detallados.', 1, 1.00),
(563, 'Se utiliza para ordenar los datos según una columna específica.', 0, 0.00),
(564, 'El intersección de dos o más tablas.', 0, 0.00),
(564, 'La creación de una tabla nueva que contenga todos los campos de las tablas unidas.', 0, 0.00),
(564, 'La eliminación de filas repetidas entre dos o más tablas.', 0, 0.00),
(564, 'La unión de dos o más tablas.', 1, 1.00),
(565, 'Full outer join', 0, 0.00),
(565, 'Inner join', 1, 1.00),
(565, 'Left outer join', 0, 0.00),
(565, 'Right inner join', 0, 0.00),
(572, 'Utilizando la sentencia \"INSERT\".', 0, 0.00),
(572, 'Utilizando la sentencia \"SELECT\".', 0, 0.00),
(572, 'Utilizando la sentencia \"UNION\".', 1, 1.00),
(572, 'Utilizando la sentencia \"UPDATE\".', 0, 0.00),
(573, 'DELETE', 0, 0.00),
(573, 'INSERT', 0, 0.00),
(573, 'SELECT', 0, 0.00),
(573, 'UPDATE', 1, 1.00),
(574, 'Crear nuevos campos y tablas.', 0, 0.00),
(574, 'Indexar columnas y optimizar consultas.', 0, 0.00),
(574, 'Modificar, eliminar o agregar registros en las bases de datos existentes.', 1, 1.00),
(574, 'Realizar la segmentación de los datos.', 0, 0.00),
(576, 'Se utiliza para agregar nuevos campos a la tabla resultado.', 0, 0.00),
(576, 'Se utiliza para combinar conjuntos de registros.', 0, 0.00),
(576, 'Se utiliza para filtrar registros según varios condicionales.', 1, 1.00),
(576, 'Se utiliza para ordenar los resultados de una consulta.', 0, 0.00),
(577, 'Asigna un valor a una variable', 0, 0.00),
(577, 'Define restricciones en la consulta', 0, 0.00),
(577, 'Proyecta columnas y/o valores en la consulta', 1, 1.00),
(577, 'Se utiliza para crear tablas en la base de datos', 0, 0.00),
(578, 'Al incluir la palabra clave \"ASC\" o \"DESC\" después de la clausula FROM.', 1, 1.00),
(578, 'Con el uso del parámetro DESC, que indica el sentido de ordenamiento inverso.', 0, 0.00),
(578, 'Sin especificar el tipo de ordenamiento.', 0, 0.00),
(578, 'Utilizando el parámetro LIMIT en la clausula WHERE.', 0, 0.00),
(579, 'AVG', 0, 0.00),
(579, 'COUNT', 0, 0.00),
(579, 'MAX', 0, 0.00),
(579, 'SUM', 1, 1.00),
(580, 'Agrupa filas según un valor especificado.', 1, 1.00),
(580, 'Filtra registros en función de una condición específica.', 0, 0.00),
(580, 'Organiza los resultados por rangos.', 0, 0.00),
(580, 'Realiza una selección de datos.', 0, 0.00),
(581, 'DELETE FROM tabla', 1, 1.00),
(581, 'INSERT', 0, 0.00),
(581, 'SELECT', 0, 0.00),
(581, 'UPDATE', 0, 0.00),
(582, 'DELETE', 1, 1.00),
(582, 'INSERT', 0, 0.00),
(582, 'SELECT', 0, 0.00),
(582, 'UPDATE', 0, 0.00),
(583, 'Utilizando la sentencia \"DELETE\"', 0, 0.00),
(583, 'Utilizando la sentencia \"INSERT INTO\"', 0, 0.00),
(583, 'Utilizando la sentencia \"SELECT FROM\"', 0, 0.00),
(583, 'Utilizando la sentencia \"UPDATE\"', 1, 1.00),
(584, 'DELETE', 0, 0.00),
(584, 'INSERT', 1, 1.00),
(584, 'SELECT', 0, 0.00),
(584, 'UPDATE', 0, 0.00),
(585, 'DELETE', 0, 0.00),
(585, 'INSERT INTO', 0, 0.00),
(585, 'SELECT', 0, 0.00),
(585, 'UPDATE', 1, 1.00),
(586, 'DELETE FROM empleados', 1, 1.00),
(586, 'DROP TABLE empleados', 0, 0.00),
(586, 'INSERT INTO empleados (SELECT * FROM empleados)', 0, 0.00),
(586, 'UPDATE empleados SET active = 0 WHERE active = 1', 0, 0.00),
(587, 'DELETE', 0, 0.00),
(587, 'INSERT', 1, 1.00),
(587, 'SELECT', 0, 0.00),
(587, 'UPDATE', 0, 0.00),
(588, 'DELETE', 0, 0.00),
(588, 'INSERT', 1, 1.00),
(588, 'SELECT', 0, 0.00),
(588, 'UPDATE', 0, 0.00),
(589, 'DELETE', 0, 0.00),
(589, 'INSERT INTO', 1, 1.00),
(589, 'SELECT', 0, 0.00),
(589, 'UPDATE', 0, 0.00),
(590, 'DELETE', 1, 1.00),
(590, 'INSERT', 0, 0.00),
(590, 'SELECT', 0, 0.00),
(590, 'UPDATE', 0, 0.00),
(591, 'Delete', 0, 0.00),
(591, 'Insert', 0, 0.00),
(591, 'Select', 0, 0.00),
(591, 'Update', 1, 1.00),
(592, 'To determine how data is stored on disk', 0, 0.00),
(592, 'To establish relationships between tables', 0, 0.00),
(592, 'To provide additional context to the database schema', 1, 1.00),
(592, 'To store and organize data', 0, 0.00),
(593, 'Department', 0, 0.00),
(593, 'Employee', 1, 1.00),
(593, 'Grade', 0, 0.00),
(593, 'Student', 0, 0.00),
(594, 'La asociación entre dos filas que se relacionan por un campo común.', 1, 1.00),
(594, 'La forma en la que se almacenan los datos en una tabla.', 0, 0.00),
(594, 'Un tipo de clave primaria.', 0, 0.00),
(594, 'Una relación de cardinalidad 1:N.', 0, 0.00),
(595, 'El nombre del proyecto y la fecha de finalización.', 0, 0.00),
(595, 'Información sobre la estructura y los datos almacenados en la base de datos.', 1, 1.00),
(595, 'La relación entre dos entidades.', 0, 0.00),
(595, 'Un atributo de la entidad.', 0, 0.00),
(596, 'A set of related data structures', 0, 0.00),
(596, 'A single row in a database', 0, 0.00),
(596, 'A table or a collection of tables', 0, 0.00),
(596, 'An attribute that describes an object', 1, 1.00),
(597, 'Es la llave primaria de una tabla.', 0, 0.00),
(597, 'Es un valor numérico que se utiliza para realizar operaciones matemáticas.', 0, 0.00),
(597, 'Es una característica o propiedad que describe una entidad o objeto.', 1, 1.00),
(597, 'Es una relación entre dos o más tablas.', 0, 0.00),
(598, 'Agregación', 0, 0.00),
(598, 'Asociación', 1, 1.00),
(598, 'Generalización', 0, 0.00),
(598, 'Inversión', 0, 0.00),
(599, 'Almacenar información sobre los usuarios que acceden a la base de datos', 0, 0.00),
(599, 'Controlar las transacciones y asegurar la integridad de la base de datos', 0, 0.00),
(599, 'Describir la estructura y contenido de los datos almacenados en la base de datos', 1, 1.00),
(599, 'Recopilar estadísticas y tendencias en el uso de la base de datos', 0, 0.00),
(600, 'Crear una visión general y conceptual del sistema.', 1, 1.00),
(600, 'Evaluar el rendimiento del sistema.', 0, 0.00),
(600, 'Implementar la lógica de negocio en un lenguaje de programación.', 0, 0.00),
(600, 'Representar los detalles físicos de la base de datos.', 0, 0.00),
(601, 'CHECK (edad > 18)', 1, 1.00),
(601, 'CREATE TABLE personas (apellido VARCHAR(20), edad INT, PRIMARY KEY(apellido))', 0, 0.00),
(601, 'NOT NULL (apellido)', 0, 0.00),
(601, 'UNIQUE (apellido)', 0, 0.00),
(602, 'Eliminar automatizadamente registros duplicados.', 0, 0.00),
(602, 'Modificar automáticamente los registros en una tabla.', 0, 0.00),
(602, 'Realizar consultas para obtener datos específicos.', 0, 0.00),
(602, 'Restringir la integridad y garantizar que se cumplan las reglas de negocio.', 1, 1.00),
(603, 'La relación entre dos o más tablas para almacenar datos.', 0, 0.00),
(603, 'Un tipo de jerarquía que describe una parte-whole relationship.', 1, 1.00),
(603, 'Un tipo de relacionamiento entre atributos y valores en una tabla.', 0, 0.00),
(603, 'Una restricción adicional para garantizar la integridad de los datos.', 0, 0.00),
(604, 'Análisis de requisitos', 1, 1.00),
(604, 'Definición de la arquitectura', 0, 0.00),
(604, 'Diseño lógico', 0, 0.00),
(604, 'Implementación física', 0, 0.00),
(605, 'Es utilizado para buscar valores dentro de una lista o rango', 1, 1.00),
(605, 'Permite ejecutar consultas anidadas', 0, 0.00),
(605, 'Se utiliza para eliminar filas duplicadas', 0, 0.00),
(605, 'Se utiliza para ordenar los resultados de una consulta', 0, 0.00),
(606, 'Crear un diagrama entidad-relación (DER)', 0, 0.00),
(606, 'Definir las restricciones de integridad', 0, 0.00),
(606, 'Establecer la capacidad de almacenamiento del servidor', 0, 0.00),
(606, 'Identificar y normalizar los atributos y entidades', 1, 1.00),
(607, 'Un tipo de campo en una tabla.', 0, 0.00),
(607, 'Un tipo de índice.', 0, 0.00),
(607, 'Una jerarquía de entidades.', 1, 1.00),
(607, 'Una relación entre dos tablas.', 0, 0.00),
(613, 'Relación de cohesión', 0, 0.00),
(613, 'Relación de contigüidad', 0, 0.00),
(613, 'Relación de generalización-especialización (IS-A)', 1, 1.00),
(613, 'Relación de inclusión', 0, 0.00),
(614, 'Definir las restricciones y limitaciones para evitar violaciones de integridad', 0, 0.00),
(614, 'Determinar la estructura lógica de la base de datos', 0, 0.00),
(614, 'Establecer la relación entre entidades y atributos en una base de datos', 1, 1.00),
(614, 'Representar los procesos y operaciones que se realizan sobre el sistema', 0, 0.00),
(615, 'Combinar dos tablas, incluyendo todas las filas de la segunda tabla', 0, 0.00),
(615, 'Opciones:', 0, 0.00),
(615, 'Pregunta:', 1, 1.00),
(615, '¿Qué función tiene el operador RIGHT JOIN al ser utilizado en un consulta SQL?', 0, 0.00),
(616, 'EXCEPT', 0, 0.00),
(616, 'INTERSECT', 1, 1.00),
(616, 'Pregunta: ¿Cuál es el operador utilizado para obtener todos los elementos que no se encuentran en un conjunto en un lenguaje de consulta SQL?', 0, 0.00),
(616, 'UNION', 0, 0.00),
(617, 'Para crear índices temporales en la base de datos', 1, 1.00),
(617, 'Para realizar operaciones complejas sobre grandes cantidades de datos', 0, 0.00),
(617, 'Para simplificar los cálculos y mejorar el rendimiento', 0, 0.00),
(617, '¿Qué es la razón principal para utilizar consultas anidadas en SQL?', 0, 0.00),
(618, 'GROUP BY', 0, 0.00),
(618, 'Opciones:', 0, 0.00),
(618, 'Pregunta:', 1, 1.00),
(618, '¿Qué es lo que se utiliza para especificar la agrupación y sumatoria en un SELECT SQL?', 0, 0.00),
(619, 'Se coloca al final del comando de selección, después de la cláusula FROM.', 0, 0.00),
(619, 'Se debe utilizar en la cláusula WHERE y especificar un rango de valores.', 1, 1.00),
(619, 'Se utiliza directamente como parámetro en la clausura SELECT.', 0, 0.00),
(619, '¿Cómo se puede utilizar la cláusula LIMIT en SQL para limitar el número de filas devueltas en una consulta?', 0, 0.00),
(620, 'SELECT * FROM ventas WHERE SUM(ventas) GROUP BY pais', 1, 1.00),
(620, 'SELECT pais, SUM(ventas) AS suma_ventas, AVG(ventas) AS promedio_ventas FROM ventas GROUP BY pais', 0, 0.00),
(620, 'SELECT SUM(pais), AVG(ventas) FROM ventas GROUP BY pais', 0, 0.00),
(620, '¿Cómo se puede agrupar los registros de una tabla en un reporte para mostrar la suma y promedio del campo \"ventas\" según el país, utilizando el lenguaje SQL?', 0, 0.00),
(621, 'Aumentar el rendimiento y reducir la complejidad de consultas.', 0, 0.00),
(621, 'Facilitar la creación de aplicaciones web.', 0, 0.00),
(621, 'Mejorar la integridad de los datos y reducir redundancias.', 1, 1.00),
(621, 'Reducir la cantidad de espacio necesario para almacenar la información.', 0, 0.00),
(622, 'Consisten en eliminar duplicaciones y ordenar los atributos en un rango.', 1, 1.00),
(622, 'Están diseñadas para maximizar el número de tuplas que se pueden almacenar.', 0, 0.00),
(622, 'Involucran la eliminación de los valores no significativos.', 0, 0.00),
(622, 'Son utilizadas para reducir la dimensionalidad.', 0, 0.00),
(623, 'Es cuando las claves primarias y secundarias de dos tablas están relacionadas.', 0, 0.00),
(623, 'Es cuando los valores de un atributo no son únicos en una tabla.', 0, 0.00),
(623, 'Es cuando un atributo B depende funcionalmente de A.', 1, 1.00),
(623, 'Es cuando uno o más atributos no se repiten en la relación entre tablas.', 0, 0.00);

-- --------------------------------------------------------

--
-- Estructura de tabla para la tabla `pregunta`
--

CREATE TABLE `pregunta` (
  `Id` int(11) NOT NULL,
  `Enunciado` varchar(700) DEFAULT NULL,
  `CriterioId` int(11) DEFAULT NULL,
  `Explicacion` varchar(1500) DEFAULT NULL,
  `Timestamp` timestamp NOT NULL DEFAULT current_timestamp()
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_general_ci;

--
-- Volcado de datos para la tabla `pregunta`
--

INSERT INTO `pregunta` (`Id`, `Enunciado`, `CriterioId`, `Explicacion`, `Timestamp`) VALUES
(300, '¿Cuál es el objetivo principal de utilizar una base de datos en un sistema informático?', 1, 'Las bases de datos tienen como objetivo principal el almacenamiento y recuperación de grandes cantidades de información. Esto permite a los desarrolladores y usuarios acceder y manipular datos de manera eficiente, lo que es fundamental para la creación de sistemas informáticos que requieren la gestión y procesamiento de grandes cantidad de datos, como bancos de datos, aplicaciones web, etc.', '2024-05-13 08:41:20'),
(301, 'Una de las limitaciones de las soluciones de datos basadas en archivos es:', 2, 'Las soluciones de datos basadas en archivos tienen una limitada capacidad para manejar el acceso concurrente y la seguridad, ya que cada archivo debe ser accesado individualmente y se requiere un mayor esfuerzo para implementar mecanismos de autenticación y autorización.', '2024-05-13 08:44:05'),
(302, '¿Qué es un Sistema de Gestión de Bases de Datos (SGBD)?', 3, 'Un Sistema de Gestión de Bases de Datos (SGBD) es un software que se encarga de crear, gestionar y administrar bases de datos. El SGBD proporciona una interfaz para crear y modificar tablas, insertar y actualizar registros, realizar consultas y generar informes, entre otras funciones.', '2024-05-13 08:47:19'),
(304, '¿Cuál es uno de los beneficios más importantes de utilizar un Sistema Gestor de Base de Datos (SGBD)?', 6, 'Los SGBDs permiten establecer restricciones y políticas de seguridad que controlan el acceso a los datos, lo que reduce la posibilidad de errores o pérdida accidental de información. Además, muchos SGBDs incluyen herramientas para auditoría y seguimiento, lo que facilita la identificación y resolución de problemas de seguridad.', '2024-05-13 08:52:21'),
(305, '¿Cuál es el nivel más bajo en la arquitectura de un SGBD (Sistema Gerenciador de Bases de Datos)?', 7, 'El nivel más bajo en la arquitectura de un SGBD es el nivel de Manejo de Archivos y Directorios, que se encarga de gestionar los archivos físicos donde se almacenan las bases de datos.', '2024-05-13 08:55:11'),
(306, '¿Cuál es la principal diferencia entre la independencia lógica y la independencia física en un sistema de bases de datos?', 8, 'La independencia lógica se refiere a la organización de los datos en una base de datos, y permite que se cambien las estructuras de tabla sin afectar a la funcionalidad del resto de la aplicación. Por otro lado, la independencia física se refiere al almacenamiento de los mismos y permite que se cambien los medios de almacenamiento sin afectar a la funcionalidad del sistema.', '2024-05-13 08:59:43'),
(307, '¿Cuál es el objetivo principal del proceso de diseño de un modelo de datos?', 9, 'El objetivo principal del proceso de diseño de un modelo de datos es crear una representación lógica y conceptual de la estructura de la información y las relaciones entre ella, lo que permite definir correctamente la organización de la información y los datos en la base de datos.', '2024-05-13 09:02:56'),
(308, '¿Qué lenguaje SQL es utilizado para interactuar con una base de datos relacionales?', 10, 'T-SQL (Transact-SQL) es el lenguaje SQL de Microsoft, se utiliza para interactuar con las bases de datos SQL Server y tiene características como la capacidad de ejecutar consultas complejas y manipular los resultados.', '2024-05-13 09:04:57'),
(309, '¿Cuál es el actor principal en la creación de una base de datos?', 11, 'El usuario es el actor principal en la creación de una base de datos, ya que es quien decide qué tipo de datos almacenar y cómo serán utilizados.', '2024-05-13 09:06:58'),
(310, '¿Qué es el primer paso en la creación de una base de datos?', 12, 'La definición del esquema es el primer paso en la creación de una base de datos. En este paso se define el diseño lógico y conceptual de la base de datos, incluyendo la identificación de los entidades, las relaciones entre ellas y el tipo de información que se almacena.', '2024-05-13 09:09:18'),
(311, '¿Qué función cumple la base de datos en el desarrollo de un sistema informático?', 1, 'La base de datos es el corazón de cualquier sistema informático, ya que almacena, organiza y gestiona los datos necesarios para una aplicación. Sin una base de datos efectiva, no sería posible almacenar y recuperar la información de manera rápida y eficiente.\n\nNota: La correcta opción B se centra en la función principal de una base de datos, que es la de almacenar y manejar la información para el uso de un sistema informático.', '2024-05-13 09:12:30'),
(312, '¿Cuál es una limitación fundamental de las bases de datos que se almacenan en archivos?', 2, 'Las bases de datos que se almacenan en archivos necesitan utilizar un software específico y configurado para poder acceder y manipular los datos almacenados. Esto puede limitar la capacidad de las aplicaciones para interactuar con la base de datos de manera efectiva, y hacer que sea más complicado realizar consultas complejas y rápidas.\n\nNota: La capacidad para realizar consultas complejas y rápidas es una característica fundamental de las bases de datos relacionales y no se relaciona directamente con la forma en que se almacenen los datos.', '2024-05-13 09:16:01'),
(313, '¿Qué función tiene un Sistema de Gestión de Bases de Datos (SGBD)?', 3, 'El Sistema de Gestión de Bases de Datos (SGBD) es el software que permite crear, manipular y gestionar bases de datos. Es responsabilidad del SGBD almacenar y gestionar la información en la BD, así como también realizar tareas adicionales como recuperación de información, optimización de consultas y gestión de concurrentes.', '2024-05-13 09:18:57'),
(314, 'Qué función del Sistema Gerente de Base de Datos (SGBD) se encarga de recuperar y mostrar los datos solicitados por el usuario?', 4, 'La interfaz de usuario es la parte del SGBD que se encarga de recuperar y mostrar los datos solicitados por el usuario. Es una función fundamental en el sistema, ya que permite al usuario interactuar con la base de datos y obtener la información deseada.\n\nLas otras opciones son incorrectas porque:\n\n* Indexación se refiere a la creación y gestión de índices para mejorar el rendimiento de las consultas.\n* Optimización de consultas es un proceso mediante el cual el SGBD planifica y ejecuta las consultas de manera eficiente.\n* Gestor de transacciones es una función que controla y administra las operaciones de inserción, actualización y eliminación en la base de datos para garantizar su coherencia lógica.', '2024-05-13 09:23:01'),
(316, '¿Cuál es la principal razón por la que se utilizan los Sistemas Gestores de Bases de Datos (SGBD) en lugar de almacenar datos directamente en el disco?', 6, 'Los SGBD son programas que se encargan de almacenar, manipular y recuperar grandes cantidades de datos en un formato organizado. Uno de los principales beneficios de utilizar un SGBD en lugar de almacenar datos directamente en el disco es que este sistema gestiona automáticamente la seguridad y la integridad de los datos. Esto incluye la creación de copias de respaldo, control de acceso y autorización para asegurar que solo aquellos usuarios autenticados puedan acceder a los datos. Además, un SGBD también puede garantizar la consistencia y coherencia de los datos, lo que es especialmente importante en aplicaciones críticas donde se requiere una exactitud absoluta.', '2024-05-13 09:28:23'),
(317, '¿Cuál es el nivel más bajo en la estructura jerárquica de un Sistema Gerente de Bases de Datos (SGBD)?', 7, 'El nivel físico es el más bajo en la estructura jerárquica de un SGBD, se encarga del diseño y gestión de los archivos y dispositivos de almacenamiento, como por ejemplo, discos duros o unidades flash.', '2024-05-13 09:29:49'),
(318, '¿Cuál es la principal característica que diferencia la independencia lógica de los datos en una base de datos del concepto de independencia física?', 8, 'La independencia lógica se refiere a la capacidad de cambiar la estructura y el contenido de los datos sin afectar a la aplicación que se comunica con ellos, es decir, no hay relación directa entre la aplicación y los datos en cuanto a su estructura y contenido. En cambio, la independencia física se refiere al almacenamiento y gestión de los datos en un medio específico (como un servidor o una base de datos relacional), es decir, cómo se almacenan y gestionan los datos en sí mismos, no en relación con la aplicación que los utiliza.', '2024-05-13 09:33:02'),
(319, '¿Cuál es el propósito principal del modelo de datos en un sistema de gestión de bases de datos?', 9, 'El modelo de datos es fundamental para definir la estructura y las relaciones entre los datos que se van a almacenar en una base de datos. Esto permite organizar, describir y visualizar los diferentes elementos que componen el universo de datos del sistema, incluyendo entidades, atributos, relaciones y restricciones. Al tener un modelo claro y bien definido, se pueden crear consultas y vistas eficientemente, generar informes y análisis precisos, y garantizar la integridad y consistencia de los datos almacenados.\n\nNota: El concepto del modelo de datos es fundamental en el ciclo de vida de una base de datos ya que permite describir el universo de datos, identificar las necesidades del sistema y definir la estructura de la base de datos.', '2024-05-13 09:37:05'),
(320, '¿Cuál es el lenguaje SQL utilizado en la mayoría de las bases de datos relacionales para crear consultas y realizar operaciones?', 10, 'PL/SQL (Procedural Language/Structured Query Language) es un lenguaje de programación desarrollado específicamente para interactuar con bases de datos relacionales. Es el lenguaje estándar utilizado en la mayoría de las bases de datos relacionales, incluyendo Oracle y Microsoft SQL Server, para crear consultas, realizar operaciones y desarrollar aplicaciones.\n\nNota: El lenguaje SQL se utiliza para definir la estructura de una base de datos y realizar consultas en ella. Sin embargo, PL/SQL es un lenguaje más completo que permite a los programadores crear procedimientos almacenados, funciones, triggers y otros objetos complejos dentro de una base de datos relacional.', '2024-05-13 09:39:57'),
(322, '¿Cuál es la función principal del lenguaje SQL en un Sistema de Gestión de Base de Datos?', 4, 'La función principal del lenguaje SQL en un Sistema de Gestión de Base de Datos es permitir la creación, lectura, actualización y eliminación (CRUD) de los datos almacenados en la base de datos. Además, permite realizar consultas y filtrados a datos para obtener información relevante y útil. El lenguaje SQL se utiliza también para definir relaciones entre tablas y crear índices y claves primarias y secundarias, pero su función principal es permitir el acceso y manipulación de los datos en la base de datos.', '2024-05-13 10:52:42'),
(323, '¿Qué es el papel del lenguaje DDL en un Sistema Gerente de Bases de Datos (SGBD)?', 5, 'El lenguaje DDL (Data Definition Language) es responsable de definir la estructura y características de una base de datos. Esto incluye la creación, modificación y borrado de tablas, índices, vistas y otros objetos de la base de datos.', '2024-05-13 10:55:05'),
(324, '¿Qué es la capa física en un Sistema de Gestión de Bases de Datos (SGBD)?', 5, 'La capa física es el nivel más bajo en la arquitectura de un Sistema de Gestión de Bases de Datos (SGBD), es responsable de interactuar con los dispositivos de almacenamiento y gestiona la asignación y liberación de espacio en memoria y discos, además de manejar las operaciones de entrada/salida y la comunicación entre el SGBD y los dispositivos hardware.', '2024-05-13 10:58:04'),
(325, '¿Cuál es el nombre del componente encargado de almacenar y administrar los datos en un sistema de gestión de bases de datos?', 5, 'El SGBD es el componente encargado de almacenar y administrar los datos en un sistema de gestión de bases de datos.', '2024-05-13 10:59:34'),
(326, '¿Qué es el papel del Controlador en la arquitectura de bases de datos?', 11, 'El Controlador es un actor fundamental en la arquitectura de bases de datos, ya que se encarga de recibir solicitudes de acceso a la BD y gestionarlas adecuadamente, antes de enviarlas al Modelo de Negocio o la Vista para ser procesadas.', '2024-05-13 11:01:52'),
(327, '¿Cuáles son las fases que componen el ciclo de vida de una base de datos?', 12, 'El ciclo de vida de una base de datos se compone por varias etapas importantes que garantizan su creación, implementación y funcionamiento efectivo. Las fases del ciclo de vida son: \n- Análisis: Identificar las necesidades de la organización y definir los requisitos para crear la base de datos.\n- Diseño: Crear un plan detallado para diseñar la estructura y la arquitectura de la base de datos, incluyendo la selección del motor y la configuración inicial.\n- Implementación: Crear y configurar la base de datos según el plan establecido en el diseño y darle vida a través de una aplicación o sistema que la utilice.\n- Mantenimiento: Garantizar el buen funcionamiento de la base de datos y realizar cambios o actualizaciones necesarias para adaptarse a los cambios de la organización o las necesidades cambiantes.', '2024-05-13 11:06:13'),
(328, '¿Cuál es la función principal del Controlador en un Sistema Gestor de Bases de Datos (SGBD)?', 5, 'El Controlador es el componente del SGBD que se encarga de manejar la comunicación entre el usuario y el motor de consultas, recibiendo las consultas del usuario y traducirlas en lenguaje que pueda entender el motor.', '2025-06-23 00:36:52'),
(329, '¿Qué es un tipo de entidad en el diseño conceptual de una base de datos?', 13, 'En el diseño conceptual de una base de datos, una entidad es un concepto abstracto que representa algo que tiene propiedades o características definidas. Puede ser una persona, objeto, lugar, evento o cualquier otro tipo de sustantivo. El tipo de entidad se refiere a la categorización de las entidades en diferentes clases como realistas (son reales), ficticias (no son reales), conceptuales (abstractas) y derivadas (se obtienen de otras entidades).', '2025-06-23 21:32:51'),
(330, '¿Cuál es la definición de la entidad en el diseño conceptual de una base de datos?', 13, 'En el diseño conceptual de una base de datos, una entidad se refiere a un objeto o concepto que se puede describir utilizando uno o varios atributos. Estos objetos pueden ser personas, lugares, productos, eventos o cualquier otro tipo de objeto que pueda ser descrito y organizado.', '2025-06-23 21:34:19'),
(332, '¿Qué es un atributo en el diseño conceptual de una base de datos?', 14, 'Un atributo es una característica o propiedad que describe a un registro o entidad en la base de datos. Es una parte fundamental del diseño conceptual de una base de datos, ya que ayuda a definir las características y propiedades de los elementos que se almacenan en la base de datos.', '2025-06-23 21:37:14'),
(334, '¿Qué representa un atributo en la teoría del diseño conceptual de una base de datos?', 14, 'Un atributo es un característica o propiedad que se asocia a una entidad en la teoría del diseño conceptual de una base de datos. Representa el valor almacenado en un campo específico de una tabla, y puede ser de diferentes tipos, como numérico, alfanumérico, fecha, etc.', '2025-06-23 21:40:39'),
(336, '¿Qué tipo de relación entre dos entidades se puede considerar en un modelo conceptual de una base de datos?', 15, 'Una relación cardinalidad M:M es aquella en la que una entidad puede tener múltiples valores o instancias de otra entidad y viceversa, es decir, hay más de una instancia de una entidad relacionada con más de una instancia de otra entidad.', '2025-06-23 21:43:11'),
(337, '¿Cuál es el tipo de relación entre dos tablas en un modelo de bases de datos relacional?', 15, 'Una relación cardinalidad uno a muchos se produce cuando una tabla puede tener varios registros en otra tabla, mientras que cada registro en la segunda tabla está relacionado con solo un registro en la primera. Por otro lado, la relación cardinalidad muchos a muchos permite que cada registro de ambas tablas esté relacionado con varios registros en la otra. Ambos tipos de relaciones son comunes en el diseño conceptual de una base de datos relacional y se utilizan para describir las dependencias entre los elementos de diferentes tablas.', '2025-06-23 21:44:47'),
(338, '¿Qué es un metadato en relación con la creación de una base de datos?', 16, 'Un metadato es una descripción adicional que proporciona información sobre la estructura y contenido de una base de datos, lo que ayuda al diseñador a entender cómo se organizará la información y cómo se puede consultar.', '2025-06-23 21:46:20'),
(339, '¿Qué es un metadato en el contexto de bases de datos?', 16, 'Los metadatos son información que se utiliza para describir las características y propiedades de los datos en una base de datos, tales como el tipo de dato, la longitud del campo, la restricción de clave única o la relación entre diferentes tablas. Los metadatos ayudan a definir la estructura y organización de la información en la base de datos y son fundamentales para su diseño conceptual y posterior implementación.', '2025-06-23 21:48:25'),
(341, '¿Cuál es la razón por la que se utiliza la notación Entity-Relationship en el diseño de bases de datos?', 17, 'La notación Entity-Relationship (ER) se utiliza para describir el diseño conceptual de una base de datos, definiendo entidades, atributos y relaciones entre ellas. Esto ayuda a mantener un uso consistente del lenguaje y evita confusiones y errores durante el ciclo de vida de la base de datos.', '2025-06-23 21:53:13'),
(342, '¿Qué es la relación IS-A en el lenguaje de bases de datos?', 18, 'La relación IS-A describe la jerarquía entre las entidades, donde una entidad es un tipo de otra. Por ejemplo, una bicicleta es un tipo de vehículo y un perro es un tipo de animal.', '2025-06-23 21:54:38'),
(343, 'Qué es el concepto \"IS-A\" en el contexto de la teoría de bases de datos?', 18, 'La relación IS-A se utiliza en el contexto de la teoría de bases de datos para describir una jerarquía entre entidades, es decir, describe cómo un tipo de entidad (la parte superior) es una subclase o especialización de otra entidad (la parte inferior). Por ejemplo, \"perro\" es un tipo de \"mammalio\", o \"automóvil\" es un tipo de \"vehículo\".', '2025-06-23 21:56:14'),
(344, '¿Cuál es el significado del concepto de relación IS-A en bases de datos?', 18, 'La relación IS-A describe una jerarquía de entidades, es decir, permite establecer que una entidad es una subclase o instancia de otra, lo que expresa la idea de que las propiedades y comportamientos se pueden aplicar a ambas.', '2025-06-23 21:57:19'),
(345, '¿Cuál es el objetivo principal del diseño conceptual en la creación de una base de datos?', 19, 'El diseño conceptual es el primer paso en la creación de una base de datos, donde se definen las características y necesidades del sistema de información que va a almacenar. Se enfoca en la definición de la estructura y los requisitos de la base de datos, incluyendo la identificación de entidades, atributos y relaciones entre ellas.', '2025-06-23 21:59:06'),
(346, '¿Qué es lo primero que se hace en la etapa del diseño conceptual de una base de datos?', 19, 'En la etapa del diseño conceptual se determina la necesidad y los requisitos funcionales de la base de datos, es decir, se describe qué es lo que se va a almacenar, quiénes van a acceder a la información y cómo se va a interactuar con la base de datos.', '2025-06-23 22:00:26'),
(347, '¿Cuál es el primer paso del proceso de diseño conceptual en la creación de una base de datos?', 19, 'El proceso de diseño conceptual comienza con el análisis de los requisitos funcionales del sistema, es decir, se analiza qué tipo de información se va a almacenar en la base de datos y cómo se va a interactuar el usuario con ella. Luego se puede definir la estructura de las tablas (segundo paso) y por último, se implementa la base de datos según sea necesario.', '2025-06-23 22:01:54'),
(348, '¿Cuál es el principal objetivo del modelo entidad-relación en un diseño conceptual de base de datos?', 20, 'El modelo entidad-relación es utilizado para describir las relaciones entre diferentes entidades (también llamadas tablas o conjuntos de registros) en un diseño conceptual de base de datos, lo que ayuda a definir la estructura y organización de los datos.', '2025-06-23 22:03:22'),
(349, '¿Cuál es el objetivo principal del modelo entidad-relación en un diseño conceptual de una base de datos?', 20, 'El modelo entidad-relación es un diagrama que muestra cómo diferentes entidades (conjuntos de datos) se relacionan entre sí, y su propósito principal es identificar estas relaciones, lo que permite entender la estructura y organización de los datos en una base de datos y diseñar una solución efectiva para almacenar y procesar la información.', '2025-06-23 22:04:48'),
(350, '¿Qué es el objetivo principal del modelo entidad-relación en un diseño conceptual de una base de datos?', 20, 'El modelo entidad-relación es un diagrama que describe las entidades (personas, lugares, objetos, etc.) y las relaciones entre ellas en la base de datos, permitiendo así una visualización clara de cómo se organiza y relacionan los diferentes elementos de información.', '2025-06-23 22:06:07'),
(351, '¿Qué es fundamentalmente un esquema de bases de datos en un sistema de información?', 21, 'El esquema de bases de datos se refiere a la representación lógica de la información que contiene el sistema de información, incluyendo los tipos de datos y relaciones entre ellos. Es fundamentalmente importante porque describe cómo se almacena y organiza la información dentro del sistema y cómo se relaciona con otros elementos del mismo.', '2025-06-23 22:07:48'),
(354, '¿Cuál es la definición general de entidad en un modelo de bases de datos?', 22, 'En el modelo de bases de datos, las entidades son estructuras lógicas que se utilizan para organizar y almacenar información. Son conceptos abstractos que se utilizan para describir objetos o cosas que tienen una existencia independiente en el mundo real o en un contexto específico.', '2025-06-23 22:13:05'),
(355, '¿Cuál es la regla general para determinar si una entidad debe ser modelada como débil o no en un diseño relacional?', 23, 'La elección de si una entidad debe ser débil o no en un diseño relacional se basa en la dependencia existencial que tiene con otras entidades. Si la existencia de la entidad débil depende directamente de la existencia de otra entidad fuerte, entonces se considera que la relación es débil y debe modelarse como una entidad débil.', '2025-06-23 22:15:15'),
(356, '¿Cuál es la regla general para determinar si una entidad debe ser modelada como débil en relación con otra?', 23, 'La regla general para determinar si una entidad debe ser modelada como débil es verificar si la entidad débil puede existir por sí sola, sin depender de la entidad fuerte. Si esto es cierto, entonces se considera que la relación entre ambas entidades es una relación independiente y no hay necesidad de hacer una modelación débil.', '2025-06-23 22:16:54'),
(357, '¿Cuando se decide si una relación entre entidades debe ser débil o fuerte?', 23, 'La relación entre entidades debe ser débil si la entidad débil puede existir y tener sentido sin que se produzca un cambio significativo en la integridad lógica del sistema.', '2025-06-23 22:18:51'),
(359, '¿Qué tipo de característica o atributo se refiere a la calidad o estado en que se encuentra un valor en un campo o columna de una base de datos?', 24, 'Los atributos son los rasgos o características que describen a cualquier entidad (o relación) en la base de datos, es decir, se refieren a las propiedades o calidades que definen una parte del universo de datos.', '2025-06-23 22:22:10'),
(361, '¿Cuál es el identificador de la entidad \"Producto\" en una base de datos?', 25, 'En una base de datos, el código de barras es un atributo descriptivo que se utiliza como identificador único para cada producto.', '2025-06-23 22:25:35'),
(362, '¿Qué tipo de relación se establece entre dos entidades en una base de datos cuando un valor de la segunda entidad es siempre asociado con exactamente uno de los valores de la primera entidad?', 26, 'En una relación One-To-Many, se establece entre dos entidades cuando un valor de la segunda entidad es siempre asociado con exactamente uno o varios valores de la primera entidad. Por ejemplo, en una base de datos que contiene información sobre estudiantes y cursos, cada estudiante puede estar matriculado en varios cursos (One-To-Many), pero un curso solo tiene un grupo de estudiantes (1).', '2025-06-23 22:27:46'),
(365, '¿Cuál es la relación entre tablas en un modelo de base de datos relacional cuando una tabla A puede tener varios registros y una tabla B tiene uno solo?', 27, 'En un modelo de base de datos relacional, una relación many-to-one (M:1) se define cuando una tabla puede tener varios registros y otra tabla solo uno. Por ejemplo, en la relación entre empleados y departamentos, un empleado puede pertenecer a varios departamentos, pero cada departamento tiene solo uno o ningún empleado asignado.', '2025-06-23 22:34:11'),
(366, '¿Cuál es el tipo de relación entre tablas en un diagrama de entidad-relación (ER) cuando dos o más entidades comparten una restricción universal, lo que implica que toda instancia de una entidad pertenece a al menos una instancia de la otra(s)?', 27, 'Cuando dos o más entidades comparten una restricción universal, se consideran relaciones de cardinalidad múltiple (m-m), es decir que una instancia de una entidad puede pertenecer a varias instancias de la otra(s).\n\nEscribir tu respuesta', '2025-06-23 22:35:43'),
(369, '¿Cuál es el propósito principal del diagrama ER?', 28, 'El diagrama ER, también conocido como Diagrama Entidad-Relación, es una representación gráfica del diseño conceptual de una base de datos. Es utilizado para definir el esquema de la estructura de los elementos que componen la base de datos (entidades y relaciones entre ellas), lo que permite entender cómo se relacionan las diferentes tablas y campos, y como se organizan los datos en la base de datos.', '2025-06-23 22:39:56'),
(371, '¿Cuál es el tipo de relación entre la categoría \"animales\" y \"perros\"?', 29, 'La relación entre \"animales\" y \"perros\" es una relación de generalización-especialización (IS-A), ya que \"perro\" se considera un tipo de \"animal\".', '2025-06-23 22:42:32'),
(372, '¿Qué es un ejemplo de relación de generalización-especialización en la base de datos que describe diferentes tipos de vehículos?', 29, 'En la base de datos, \"Automóvil\" es una generalización que incluye a \"Coche\" como una subclase o especialización.', '2025-06-23 22:45:20'),
(373, '¿Qué propiedad se aplica en un relación \"IS-A\" entre dos entidades en un modelo de datos?', 30, 'En una relación \"IS-A\", se aplica la propiedad de disyunción, es decir, la existencia de una entidad puede ser descrita mediante dos o más posibles categorías.', '2025-06-23 22:46:47'),
(376, '¿Cuál es el proceso fundamental para definir la relación entre las entidades en un modelo de base de datos?', 31, 'El proceso fundamental para definir la relación entre las entidades en un modelo de base de datos es el de identificar las entidades y atributos en el diagrama entidad-relación. El diagrama entidad-relación es un diagrama que muestra las entidades, relaciones y restricciones en una base de datos, lo que permite visualizar cómo las diferentes partes interactúan entre sí.', '2025-06-23 22:52:32'),
(377, '¿Qué es el proceso de crear un diagrama de entidades y relaciones en la teoría de bases de datos?', 31, 'El proceso de crear un diagrama de entidades y relaciones es parte del diseño conceptual en la teoría de bases de datos, y se llama diagramado conceptual. Es el primer paso en el desarrollo de una base de datos y consiste en identificar los conceptos clave (entidades), sus atributos y las relaciones entre ellas.', '2025-06-23 22:53:41'),
(378, '¿Qué es el objetivo principal del diagrama de entidades y relaciones en la etapa de diseño conceptual de una base de datos?', 31, 'El diagrama de entidades y relaciones es un tipo de diagrama que se utiliza para describir la estructura de la información y las relaciones entre ella, en el diseño conceptual de una base de datos. Su objetivo principal es definir la relación entre las entidades y las tablas de la base de datos, esto es, como las diferentes partes del modelo se relacionan entre sí, y cómo se representan en la estructura lógica de la base de datos.', '2025-06-23 22:55:45'),
(380, '¿Cuál es el objetivo principal del diccionario de datos en un diseño conceptual de una base de datos?', 32, 'El diccionario de datos es una herramienta fundamental en el diseño conceptual de una base de datos, ya que su objetivo principal es definir y relacionar los términos y conceptos clave que se utilizarán para describir la estructura de la base de datos. De esta manera, se asegura la coherencia y consistencia entre las diferentes partes del modelo de datos, y se facilita la comunicación y el entendimiento entre los involucrados en el proyecto.', '2025-06-23 23:00:01'),
(381, '¿Cuál es el propósito principal del diccionario de datos en el diseño conceptual de una base de datos?', 32, 'El diccionario de datos es una parte integral del diseño conceptual de una base de datos, donde se describen y definen las entidades, relaciones y atributos que compondrán la estructura del sistema de información. Es un inventario detallado y completo de todos los elementos que integran el universo del conocimiento y datos que se van a almacenar en la base de datos, permitiendo así una correcta comprensión y diseño eficiente de la base de datos.', '2025-06-23 23:01:41'),
(382, '¿Qué tipo de información se consideraría un atributo en la teoría de bases de datos?', 33, 'Los atributos en la teoría de bases de datos son características o propiedades que se asignan a las entidades, que describen sus características intrínsecas. En este sentido, la fecha y hora de creación de un registro serían considerados como atributos para caracterizar una entidad en una base de datos.', '2025-06-23 23:05:10'),
(383, '¿Qué tipo de información se utiliza para describir las características y relaciones entre las entidades en una base de datos?', 33, 'Los atributos son la descripción de los metadatos que se utilizan para caracterizar las entidades en una base de datos. Los atributos pueden ser de tipo numérico, texto o fecha y permiten definir las características y relaciones entre las diferentes entidades dentro del mini-mundo de la base de datos.', '2025-06-23 23:06:37'),
(384, '¿Qué es un esquema de bases de datos?', 34, 'El esquema de bases de datos se refiere a la definición y estructuración de las relaciones entre los elementos, tales como tablas, campos y tipos de datos en una base de datos. Esto permite organizar y relacionar los datos de manera efectiva para su fácil acceso y manejo.', '2025-06-23 23:09:00'),
(385, '¿Cuál es uno de los metadatos más comunes utilizados en bases de datos para describir la estructura y el contenido de un registro?', 34, 'La clave primaria es un tipo común de metadato que se utiliza para identificar y describir la estructura y el contenido de los registros en una base de datos.', '2025-06-23 23:10:08'),
(387, '¿Cuál es un tipo de relación común entre las tablas en una base de datos?', 35, 'La relación de especialización generalización es una relación común entre las tablas en una base de datos, donde se establece una conexión entre una tabla que describe una clase o categoría y otra tabla que describe un subconjunto específico dentro de esa categoría.', '2025-06-23 23:13:11'),
(388, '¿Qué tipo de relación se establece entre la tabla de productos y la tabla de pedidos en un sistema de gestión de inventario?', 35, 'La relación entre la tabla de productos y la tabla de pedidos es una relación de \"uno a muchos\", ya que cada producto puede tener varios pedidos, pero un pedido solo corresponde a un producto.', '2025-06-23 23:14:11'),
(389, '¿Cuál es el propósito principal del diagrama entorno de entities?', 36, 'El diagrama entorno de entities es un tipo de diagrama que se utiliza para representar los diferentes elementos que componen un modelo de datos, incluyendo las entidades, atributos y relaciones entre ellos. El propósito principal del diagrama entorno de entities es establecer el diseño conceptual de la base de datos, definiendo cómo se organizarán los datos y cómo se relacionan entre sí.\n\nVisto que el enunciado de la pregunta busca evaluar si un individuo puede construir el diccionario de datos que establece el diseño conceptual de una base de datos, la opción correcta es B) Establecer el diseño conceptual de la base de datos.', '2025-06-23 23:18:24'),
(390, '¿Cuál es el propósito principal del diagrama de entidad-relación en la creación de un sistema de bases de datos?', 36, 'El diagrama de entidad-relación es un tipo de representación gráfica utilizada en la creación de bases de datos que ayuda a definir y describir la estructura de la base de datos, mostrando la relación entre las entidades y sus respectivos atributos.', '2025-06-23 23:19:49'),
(391, '¿Qué es el objetivo principal del proceso de creación de un diccionario de datos en la teoría de bases de datos?', 36, 'El proceso de creación del diccionario de datos es un paso importante en el diseño de una base de datos, y tiene como objetivo principal describir el diseño conceptual de la base de datos, es decir, definir qué información se almacenará, cómo se relaciona esta información y qué restricciones y limitaciones existen para garantizar la integridad y coherencia de los datos.', '2025-06-23 23:21:19'),
(392, '¿Qué es una tabla en un modelo relacional?', 37, 'En el modelo relacional, una tabla es una estructura que almacena y organiza los datos de manera relacionada. Una tabla se compone de filas (registros) y columnas (campos), donde cada columna representa un atributo o característica del objeto que describe y las filas representan los valores que se asignan a esos campos.', '2025-06-23 23:22:58'),
(393, '¿Qué es un registro en el contexto del modelo relacional?', 37, 'En el modelo relacional, cada fila (también llamada registro o tupla) es un conjunto de datos que describe una instancia específica de una entidad. La tabla se refiere a la estructura organizativa de estos registros y sus campos, mientras que los campos son los elementos individuales que contienen información en la base de datos.', '2025-06-23 23:25:14'),
(394, '¿Qué es la función de una Columna (Atributo) en un modelo relacional?', 38, 'En el ámbito del modelo relacional, una columna (atributo) es una característica o propiedad que se asocia con cada registro en la base de datos. Por ejemplo, si se tiene una tabla llamada \"empleados\", una columna podría ser \"nombre\" y otra \"apellido\".', '2025-06-23 23:26:39'),
(395, '¿Cuál es la función principal de una columna en un esquema de base de datos relacional?', 38, 'En el ámbito del modelo relacional, una columna se refiere a un atributo o característica que describe un registro. Es decir, es un campo dentro de una tabla que almacena información específica sobre cada fila o tupla de la base de datos.', '2025-06-23 23:27:52'),
(396, '¿Qué es una columna en el ámbito del modelo relacional?', 38, 'En el modelo relacional, la columna (también conocida como atributo o campo) es un conjunto de elementos que almacenan información sobre una característica o propiedad de un registro. Por ejemplo, si se crea una tabla para almacenar datos de personas, las columnas \"nombre\", \"edad\" y \"dirección\" representan los atributos o características de cada persona, y los valores almacenados en cada celda son los datos que describen dichos atributos para cada registro individual.', '2025-06-23 23:29:36'),
(397, '¿Qué es la estructura fundamental básica de almacenamiento en un sistema de gestión de bases de datos relacionales?', 39, 'En el modelo relacional, la estructura fundamental básica de almacenamiento es la tabla o registro, que consta de filas (tuplas) y columnas.', '2025-06-23 23:30:38'),
(398, '¿Qué es una fila en un modelo relacional?', 39, 'En el modelo relacional, una fila (también conocida como tupla o registro) es la representación de un conjunto de datos en una tabla. Estos datos se agrupan y se almacenan en una sola fila y cada columna de esa fila almacena un valor específico correspondiente a ese campo en el modelo relacional.', '2025-06-23 23:32:45'),
(399, '¿Cuál es el propósito del dominio en una columna de una base de datos?', 40, 'El dominio de una columna es el rango de valores permitidos que puede tomar esa columna en una base de datos. Al definir un dominio para una columna, se establece qué valores son válidos y qué no lo son, lo que ayuda a garantizar la integridad y consistencia de los datos almacenados en la base de datos.', '2025-06-23 23:34:29'),
(400, '¿Qué es el dominio de una columna en un sistema de gestión de bases de datos?', 40, 'El dominio de una columna en un sistema de gestión de bases de datos se refiere al conjunto de reglas o restricciones que determinan el tipo y el rango de valores que pueden tomar los datos almacenados en esa columna. Estas restricciones pueden ser utilizadas para garantizar la integridad, consistencia y coherencia de los datos en la base de datos.', '2025-06-23 23:36:09'),
(401, '¿Cuál es el término técnico que se utiliza para describir la restricción que impone un valor a una columna en una base de datos?', 40, 'El dominio es el conjunto de valores permitidos y significativos que se pueden asignar a una columna en una base de datos, lo que impone restricciones sobre los tipos de datos que se pueden almacenar en esa columna.', '2025-06-23 23:37:07'),
(402, '¿Cuál es la principal característica definida por un esquema de tabla en una base de datos?', 41, 'El esquema de una tabla se define por los pares (atributo, dominio) que lo definen. Un atributo se refiere a la característica o propiedad de un objeto y el dominio al espacio de valores que puede tomar ese atributo.', '2025-06-23 23:41:03'),
(403, '¿Qué función tiene el par (Atributo, Dominio) en un esquema de tabla?', 41, 'El par (Atributo, Dominio) define la estructura y las propiedades de cada campo o columna en una tabla. Atributo se refiere a la característica o propiedad que describe la información almacenada en un campo o columna, mientras que el dominio se refiere al conjunto de valores permitidos para ese atributo o campo.', '2025-06-23 23:42:28'),
(404, '¿Qué es la clave primaria en un sistema de gestión de bases de datos?', 42, 'La clave primaria es una restricción en un sistema de gestión de bases de datos que evita la inserción de dos o más registros con los mismos valores en los campos especificados. En otras palabras, una clave primaria es una combinación de campos (o un campo individual) que se utiliza para identificar de manera única a cada registro en una tabla.', '2025-06-23 23:44:06'),
(406, '¿Qué es la relación entre dos tablas en un sistema de gestión de bases de datos, donde se establece la dependencia entre ellas?', 43, 'Las claves foráneas son atributos de una tabla que se utilizan para relacionar esta con otra tabla, permitiendo así la creación de relaciones entre ellas. Son fundamentales para establecer dependencias entre las diferentes tablas y garantizar la integridad en los datos almacenados.', '2025-06-23 23:48:15'),
(407, '¿Qué es la clave foránea en una base de datos?', 43, 'La clave foránea, también conocida como llave externa, es una columna en una tabla que se refiere a la clave primaria (llave principal) de otra tabla. Se utiliza para relacionar las filas de una tabla con las de otra, permitiendo así la creación de relaciones entre tablas y la recuperación de información cruzada.\n\nEs importante destacar que la clave foránea es un campo en una tabla que se relaciona directamente con el campo primario (llave principal) de otra tabla. Esto permite crear relaciones entre tablas y acceder a la información de manera rápida y eficiente, ya que puede recuperarse fácilmente los datos relacionados de ambas tablas.', '2025-06-23 23:50:42'),
(408, '¿Qué se entiende por clave foránea en un sistema de bases de datos?', 43, 'En el ámbito de un sistema de bases de datos, la clave foránea (también llamada llave externa o foreign key en inglés) es una columna que se encuentra en una tabla y que contiene valores que se refieren a la llave primaria de otra tabla. Esto permite establecer relaciones entre las tablas y relacionar filas entre ellas, lo que ayuda a organizar y estructurar los datos de manera eficiente y coherente.\n\nNota: La explicación debe ser breve y concisa para mantener la integridad del ejercicio, pero proporciona suficiente información para que el estudiante pueda responder correctamente.', '2025-06-23 23:52:55'),
(409, '¿Cuál es un ejemplo común de restricción de integridad en una base de datos relacional?', 44, 'Las restricciones de integridad en una base de datos relacional son condiciones que se establecen para garantizar la consistencia y coherencia del contenido de las tablas. Una restricción de integridad común es la unicidad, que asegura que un valor no pueda ser duplicado en una columna o grupo de columnas.', '2025-06-23 23:56:02'),
(410, '¿Cuál es la finalidad principal de una restricción de integridad en una base de datos relacional?', 44, 'Las restricciones de integridad en una base de datos relacional tienen como objetivo principal garantizar la consistencia y coherencia de los datos, asegurando que las relaciones entre los registros sean siempre válidas.', '2025-06-23 23:57:12'),
(411, '¿Cuál es el primer paso en la transformación del diseño conceptual a una representación relacional normalizada?', 45, 'El primer paso en la transformación del diseño conceptual a una representación relacional normalizada es convertir las entidades en tablas.', '2025-06-23 23:58:28'),
(412, '¿Qué es lo que se entiende como \"normalización\" en el proceso de creación de bases de datos?', 45, 'Normalización se refiere al proceso mediante el cual se transforma el diseño conceptual de una base de datos en una representación relacional normalizada, que es una representación más eficiente y escalable para almacenar y recuperar información.', '2025-06-23 23:59:44'),
(416, 'Qué es el proceso de Normalización en la creación de una base de datos?', 47, 'La normalización es un proceso importante en el diseño lógico de una base de datos que implica eliminar la duplicidad y la dependencia mutua entre los campos, lo que reduce la redundancia y mejora la integridad de los datos.', '2025-06-24 00:07:05'),
(417, '¿Cuál es la primera etapa en el diseño lógico de una base de datos?', 47, 'La primera etapa en el diseño lógico de una base de datos es definir los requisitos, lo que implica analizar y comprender las necesidades del negocio y determinar qué información se requiere para satisfacerlas.', '2025-06-24 00:08:15'),
(418, 'Dado un diagrama de entidad-relación (ER), ¿cómo se llama el proceso de transformar las entidades y relaciones en una estructura de bases de datos relacional?', 48, 'La normalización es el proceso de transformar un diagrama de entidad-relación en una estructura de bases de datos relacional, creando tablas y relaciones entre ellas para almacenar la información.', '2025-06-24 00:10:48'),
(420, '¿Cuál es la forma correcta para transformar una relación entre dos entidades en una tabla relacionada en un modelo de base de datos?', 48, 'La transformación de una relación entre dos entidades en una tabla relacionada se logra creando una nueva tabla que contenga la llave primaria de ambas entidades. Esto permite establecer la relación entre las dos entidades y crear un registro en la nueva tabla para cada combinación de valores de las llaves primarias de ambas entidades.', '2025-06-24 00:13:28'),
(421, '¿Cuál es el primer paso para normalizar una base de datos relacional?', 49, 'El primer paso al momento de normalizar una base de datos relacional es identificar las entidades y los atributos que componen la base, ya que esto te permite entender mejor la estructura y relaciones entre ellos.', '2025-06-24 00:15:00'),
(423, '¿Cuál es el proceso recomendado para convertir una relación en una entidad en una representación relacional normalizada?', 49, 'El proceso recomendado para convertir una relación en una representación relacional normalizada es primero identificar los atributos clave (llaves primarias o candidatas a serlo), luego, se debe determinar si hay datos repetidos y extraños y hacer las modificaciones necesarias para obtener la normalización deseada.\n\nNota: La opción A es incorrecta porque no se menciona el proceso de normalización. La opción B es incorrecta porque no se prioriza la creación de la tabla de relación. La opción D es incorrecta porque la conversión en representación relacional normalizada es un proceso que debe realizarse para obtener una base de datos escalable y eficiente.', '2025-06-24 00:19:16'),
(425, '¿Cuál es el dominio de la columna \"fecha_nacimiento\" en un diseño conceptual para una base de datos de pacientes?', 50, 'La columna \"fecha_nacimiento\" contiene información sobre fechas, por lo que su dominio es la fecha.', '2025-06-24 00:24:19'),
(427, '¿Cómo se garantiza la integridad de la información en una base de datos?', 51, 'La integridad de la información en una base de datos se puede garantizar de varias maneras, pero establecer restricciones de integridad de entidad es un método efectivo para asegurarse que los datos sean coherentes y no violen las relaciones definidas entre entidades en el diseño conceptual.', '2025-06-24 00:27:43'),
(428, '¿Cómo se puede implementar la relación entre dos tablas en un sistema de gestión de bases de datos?', 51, 'Para implementar la relación entre dos tablas, se puede definir una llave primaria común entre ellas, lo que permite establecer una dependencia de clave extranjera en la tabla secundaria. Esta relación garantiza que cada registro en la tabla secundaria tenga un valor asociado a la llave primaria en la tabla principal.\n\nOtra forma de implementar esta relación sería crear índices en ambas tablas para facilitar las consultas, pero esto no establecería una restricción de integridad de entidad. La creación de restricciones de integridad de entidad en la tabla secundaria es un proceso que se utiliza para garantizar la consistencia y coherencia de los datos al agregar o eliminar registros en las tablas. Por último, asignar un álgebra relacional específica a cada tabla no es una forma válida de establecer la relación entre ellas.\n\nLa restricción de integridad de entidad se utiliza para garantizar que los valores de los campos que forman parte de la llave primaria en la tabla secundaria tengan un valor válido en la tabla principal.', '2025-06-24 00:31:17'),
(429, 'Se desea crear una base de datos para un sistema de gestión de inventario. A continuación, se muestra un diagrama entidad-relación que describe las relaciones entre las entidades \"Departamento\" y \"Persona\". ¿Cómo se establecería la restricción de integridad referencial entre ambas entidades?', 52, 'La restricción de integridad referencial indica que una persona debe estar asignada a un solo departamento, no puede existir la relación inversa.', '2025-06-24 00:33:26'),
(431, '¿Cuál es el principal objetivo al utilizar la normalización en las bases de datos?', 53, 'La normalización es un proceso que se utiliza para organizar y estructurar una base de datos de manera efectiva, mejorando su calidad y eficiencia. Al normalizar una base de datos, se busca reducir la dependencia entre las diferentes tablas o filas, lo que mejora la integridad referencial y reduce el riesgo de anomalías en la información almacenada.', '2025-06-24 00:39:40'),
(432, '¿Cuál es uno de los principales objetivos al implementar la normalización en una base de datos?', 53, 'La normalización es un proceso que se realiza en las bases de datos para organizar y estructurar los datos de manera eficiente, lo que permite eliminar duplicidades y reducir la inconsistencia. Al hacerlo, se reduce la cantidad de información almacenada en cada tabla y se facilita la manipulación y actualización de los datos.', '2025-06-24 00:41:14'),
(433, '¿Cuál es el objetivo principal de la normalización en las bases de datos?', 53, 'La normalización es un proceso que consiste en estructurar las bases de datos de manera lógica para reducir la redundancia y mejorar la integridad de los datos, lo que facilita el mantenimiento y escalabilidad del sistema.', '2025-06-24 00:42:46'),
(436, '¿Qué es la forma normal Boyce-Codd en la teoría de relaciones?', 55, 'La forma normal Boyce-Codd es un conjunto de reglas que se utilizan para garantizar la coherencia y consistencia en las bases de datos, lo que garantiza que la información sea precisa y fiable. Estas reglas incluyen el uso de claves primarias, no ambigüedad y no redundancia.\n\nNota: La forma normal Boyce-Codd es una de las formas normales más comunes utilizadas en la teoría de relaciones para diseñar bases de datos.', '2025-06-24 00:50:28'),
(437, '¿Qué es la primera forma normal en la teoría de bases de datos?', 55, 'La primera forma normal en la teoría de bases de datos es la 1NF (First Normal Form), que se define como la condición en la que todos los campos o columnas de una tabla deben contener solo valores atómicos, es decir, no pueden haber sublistas ni conjuntos.', '2025-06-24 00:51:53');
INSERT INTO `pregunta` (`Id`, `Enunciado`, `CriterioId`, `Explicacion`, `Timestamp`) VALUES
(438, '¿Cuál es la función principal de la primera normalización en una base de datos?', 55, 'La primera normalización, también conocida como \"primera forma normal\", tiene como objetivo eliminar las repeticiones y duplicaciones en una tabla, por lo que elimina los campos no clave primaria que estén repetidos, reduciendo la cantidad de espacio utilizado en memoria.', '2025-06-24 00:53:25'),
(439, '¿Qué es el DDL (Data Definition Language) en SQL?', 56, 'El DDL es el lenguaje utilizado para definir y crear la estructura de una base de datos, incluyendo tablas, índices, vistas y otros elementos. Es responsable de crear o alterar la estructura de la base de datos, permitiendo que los usuarios definan la relación entre las diferentes columnas y filas en el esquema de la base de datos relacional.', '2025-06-24 00:55:33'),
(440, '¿Cuál es el objetivo principal del lenguaje DDL (Data Definition Language) en SQL?', 56, 'El lenguaje DDL (Data Definition Language) se utiliza para definir, crear y modificar las estructuras y relaciones entre tablas en una base de datos relacional. Esto incluye la creación y modificación de bases de datos, tablas, índices, vistas, triggers y stored procedures.', '2025-06-24 00:57:04'),
(441, '¿Cuál es el propósito principal del lenguaje DDL (Data Definition Language) en SQL?', 56, 'El lenguaje DDL (Data Definition Language) es utilizado en SQL para definir y manipular las estructuras de una base de datos, como crear, alterar o eliminar tablas, índices, vistas y otras estructuras básicas.', '2025-06-24 00:58:35'),
(442, '¿Qué es el propósito del comando \"CREATE TABLE\" en la sintaxis de DDL de SQL?', 57, 'El comando \"CREATE TABLE\" es uno de los comandos DDL más comunes, utilizado para crear una nueva tabla en una base de datos. Permite especificar la estructura y los campos que la comprenderán, lo que se refleja en la creación de un nuevo objeto de datos en la base de datos.', '2025-06-24 01:00:27'),
(443, '¿Qué es lo que se utiliza para crear un índice en una tabla?', 57, 'El operador ALTER TABLE es utilizado para agregar o eliminar filas y columnas, así como también para crear o eliminar índices de una tabla en un sistema de gestión de bases de datos relacional.', '2025-06-24 01:01:18'),
(444, '¿Cuál es el operador utilizado en SQL para eliminar un objeto de la base de datos?', 57, 'El operador \"DROP\" se utiliza en SQL para eliminar objetos en una base de datos, como tablas, vistas o índices.', '2025-06-24 01:02:01'),
(445, '¿Cuál es la regla más importante que se debe cumplir al crear un identificador para referenciar un objeto en una base de datos de SQL?', 58, 'En SQL, los identificadores utilizados para referir objetos de datos deben ser únicos y no pueden ser eliminados. Esto asegura que cada objeto tenga un identificador único y que puedan hacerse consultas y operaciones sobre él sin posibilidad de confusiones o errores.', '2025-06-24 01:03:48'),
(446, '¿Cuál es la restricción más común y fundamental para un campo utilizado como clave primaria (PK) en una base de datos relacional?', 58, 'La restricción de unicidad es la más común y fundamental para un campo utilizado como clave primaria (PK), ya que garantiza que los valores en ese campo sean únicos y no se repitan, lo que ayuda a evitar duplicados en la base de datos.', '2025-06-24 01:05:39'),
(447, '¿Qué es la restricción fundamental que se aplica a los identificadores utilizados para referir objetos de datos en SQL?', 58, 'La restricción fundamental que se aplica a los identificadores utilizados para referir objetos de datos en SQL es que deben ser únicos, esto garantiza que cada objeto tenga un identificador distinto y no haya confusiones al tratar de acceder o manipular los mismos datos.', '2025-06-24 01:07:11'),
(448, '¿Qué tipo de dato es el \"datetime\" en SQL?', 59, 'El tipo de dato \"datetime\" se utiliza en SQL para almacenar fechas y horas en formato específico, permitiendo la comparación y manipulación de datos cronológicos.', '2025-06-24 01:08:22'),
(449, '¿Qué tipo de dato es CHAR en SQL?', 59, 'El tipo de dato CHAR en SQL se utiliza para almacenar cadenas de caracteres (texto), y no es un tipo numérico, lógico o temporal.', '2025-06-24 01:09:11'),
(450, '¿Cuál es un tipo de dato escalar común utilizado en SQL?', 59, 'En SQL, los tipos de datos escalares más comunes son el entero (que almacena números enteros) y la cadena (que almacena cadenas de texto).', '2025-06-24 01:10:01'),
(451, '¿Qué comando se utiliza en SQL para especificar la restricción primaria de un campo en una tabla?', 60, 'La clausula PRIMARY KEY es utilizada en SQL para establecer la clave primaria de una tabla, lo que significa que especifica un campo o conjunto de campos que son únicos y se utiliza como identificador único de cada registro en la tabla.', '2025-06-24 01:11:12'),
(452, '¿Qué comando SQL se utiliza para definir el tipo de datos y restricciones en una columna?', 60, 'El comando NOT NULL es utilizado para establecer que un campo no puede estar vacío o nulo.', '2025-06-24 01:11:52'),
(453, '¿Qué comando SQL se utiliza para especificar la restricción de clave primaria en una tabla?', 60, 'El comando PRIMARY KEY es el que se utiliza para establecer la columna o conjunto de columnas como la clave primaria de una tabla, lo que significa que cada fila debe tener un valor único y no puede ser vacía.', '2025-06-24 01:12:46'),
(454, '¿Qué comando en SQL se utiliza para establecer la restricción de unicidad sobre un campo de tabla, asegurando que no haya dos entradas con el mismo valor?', 61, 'El comando UNIQUE se utiliza para establecer la restricción de unicidad sobre un campo de tabla, asegurando que no haya dos entradas con el mismo valor.', '2025-06-24 01:14:58'),
(455, '¿Cómo se define y gestiona la integridad referencial en una base de datos?', 62, 'La integridad referencial es un mecanismo que garantiza la consistencia y coherencia en la relación entre dos tablas en una base de datos. Se define como el proceso de establecer reglas para asegurar que los valores en una columna se mantengan consistentes con respecto a sus equivalentes en otra tabla.', '2025-06-24 01:18:26'),
(456, '¿Cuál es el mecanismo utilizado en SQL para definir la integridad referencial en una clave foránea?', 62, 'El mecanismo que se utiliza en SQL para definir la integridad referencial en una clave foránea es el uso de la sentencia FOREIGN KEY. Esto permite establecer una restricción que garantiza la consistencia entre dos tablas, obligando a que los valores de la columna foránea sean iguales a los valores existentes en la columna primaria de la tabla correspondiente.', '2025-06-24 01:19:39'),
(457, '¿Cuál es el operador utilizado en SQL para establecer un índice que permita la creación de claves primarias y secundarias?', 62, 'El operador FOREIGN KEY es utilizado en SQL para establecer un índice que permita la creación de claves foráneas, lo que permite establecer una relación entre dos tablas.', '2025-06-24 01:20:33'),
(459, '¿Cuál es el comando SQL utilizado para definir un índice en una base de datos?', 63, 'El comando SQL utilizado para definir un índice en una base de datos es el comando \"INDEX\". Un índice es una estructura de datos que permite mejorar la velocidad de búsqueda y ordenamiento en una tabla, ya que facilita la acceso directo a los registros.\n\nNota: Un índice puede ser utilizado para diferentes propósitos, como por ejemplo: para mejorar la velocidad de búsquedas o para garantizar la integridad de los datos.', '2025-06-24 01:23:12'),
(460, '¿Qué es lo que se utiliza en SQL para crear una restricción de integridad en una columna de un registro?', 63, 'En SQL, se utilizan diferentes mecanismos para construir restricciones de integridad en una base de datos. Uno de ellos es la creación de un Primary Key (PK), que garantiza que los valores en esa columna sean únicos y no nulos. Otro es la creación de un Foreign Key (FK), que se utiliza para establecer dependencias entre tablas. Además, se puede crear una restricción única (unique) en una columna o conjunto de columnas para asegurar que los valores sean únicos. Por otro lado, un índice no es una restricción de integridad, sino más bien un mecanismo para mejorar la performance al consultar datos.', '2025-06-24 01:24:46'),
(461, '¿Cuál es el modelo en el que se basa el funcionamiento de un trigger en bases de datos?', 64, 'Los triggers se basan en el modelo evento-condición-acción. Un trigger es un tipo de instrucción que se ejecuta automáticamente cuando se produce cierto evento en una base de datos, como por ejemplo el insertar o actualizar una fila en una tabla. El modelo evento-condición-acción describe cómo el trigger se comporta: 1) Se produce un evento (insertar, actualizar, eliminar), 2) Se evalúa la condición asociada al trigger y si es verdadera, 3) Se ejecuta la acción asociada.', '2025-06-24 01:26:15'),
(462, '¿Cuál es el modelo que se utiliza para definir un trigger en una base de datos relacional?', 64, 'Un trigger es un mecanismo que permite ejecutar un conjunto de acciones automáticamente en respuesta a una serie de eventos en una base de datos relacional. El modelo ECA, por otro lado, se refiere al diseño y la estructuración de los procesos lógicos que se pueden ser desencadenados por el sistema a partir de ciertos eventos, bajo condiciones determinadas. Esto es justamente lo que sucede en un trigger: se especifica qué evento deseado debe ocurrir (la condición), qué acción realizar (acción) y se activa automáticamente al ocurrir ese evento.', '2025-06-24 01:27:52'),
(464, '¿Cuál es el objetivo principal de la gestión de permisos en una base de datos?', 65, 'La gestión de permisos es un mecanismo fundamental para controlar quién puede acceder, leer, modificar o eliminar información en una base de datos. De esta manera se garantiza que solo las personas autorizadas puedan interactuar con los datos almacenados y reducir al mínimo el riesgo de pérdida o manipulación de la información confidencial.', '2025-06-24 01:31:42'),
(465, '¿Cuál es uno de los mecanismos utilizados comúnmente para gestionar la seguridad de una base de datos?', 65, 'La autenticación y autorización son dos procesos importantes para gestionar la seguridad de una base de datos. La autenticación es el proceso de verificación del usuario o entidad para determinar si puede tener acceso a la base de datos, mientras que la autorización es el proceso de controlar qué acciones se pueden realizar sobre la base de datos por parte de un usuario autenticado.', '2025-06-24 01:32:56'),
(466, '¿Qué son los privilegios en una base de datos?', 66, 'Los privilegios en una base de datos son derechos especiales que se otorgan a los usuarios o roles para realizar operaciones específicas, como crear, leer, escribir o eliminar datos. Estos derechos pueden ser asignados a diferentes niveles, como el nivel de usuario individual o al nivel de rol, y suelen estar relacionados con la seguridad y control de acceso a la base de datos.', '2025-06-24 01:35:24'),
(467, '¿Cuál es el propósito principal del uso de permisos o privilegios en una base de datos?', 66, 'Los permisos o privilegios en una base de datos son configurados para controlar qué acciones pueden realizar los usuarios dentro de la base de datos. Los permisos se utilizan para autorizar o negar el acceso a ciertos recursos o operaciones en la base de datos, como leer, escribir o eliminar registros, crear o actualizar objetos y más.', '2025-06-24 01:36:57'),
(468, '¿Qué se entiende por \"privilegio\" en una base de datos?', 66, 'En el contexto de las bases de datos, se entiende como \"privilegio\" la autorización para realizar operaciones específicas en un sistema de gestión de bases de datos. Los privilegios pueden ser asignados a diferentes niveles, desde el acceso limitado hasta los permisos más amplios, permitiendo controlar quién puede acceder y qué acciones realizar dentro del sistema.\n\nNota: Es importante mencionar que los niveles de asignación de privilegios pueden variar dependiendo del sistema de gestión de bases de datos utilizado.', '2025-06-24 01:38:37'),
(469, '¿Cuál es la diferencia fundamental entre los conceptos de usuario y rol en una base de datos?', 67, 'Un usuario es un individuo o entidad que tiene acceso a la base de datos y puede realizar operaciones como crear, leer, actualizar y eliminar datos. Un rol, por otro lado, se refiere al nivel de permisos o autorización que se le asigna a ese usuario en la base de datos, definiendo qué acciones puede realizar sobre los datos. Por ejemplo, un administrador podría ser un tipo de rol que permite acceder y manipular los datos de manera más amplia que un usuario estándar.', '2025-06-24 01:40:30'),
(470, '¿Qué es lo que se define en un sistema de gestión de bases de datos para controlar quién puede realizar ciertas acciones en la base de datos?', 67, 'Los roles son una forma de definir quiénes tienen permisos para realizar ciertas acciones en una base de datos. Los usuarios pueden ser asignados a diferentes roles, lo que les da acceso a ciertos recursos y limita su capacidad para hacer cambios o acceder a información confidencial.', '2025-06-24 01:41:29'),
(471, '¿Qué es lo más adecuado para definir los permisos de acceso en una base de datos?', 67, 'Los roles son un concepto común en bases de datos que se utiliza para asignar a los usuarios una función específica o conjunto de funciones dentro de la base de datos. Esto puede ser utilizado para controlar el acceso y permisos, permitiendo así que cada usuario tenga acceso solo a ciertas partes del sistema y datos. Los roles pueden ser utilizados para definir quién puede leer, escribir o ejecutar operaciones en la base de datos, lo que ayuda a mantener la integridad y seguridad de los datos.', '2025-06-24 01:42:43'),
(472, '¿Cuál es el propósito principal de la matriz de privilegios en un sistema de gestión de bases de datos?', 68, 'La matriz de privilegios es un mecanismo utilizado en los sistemas de gestión de bases de datos que permite asignar roles y permisos a diferentes usuarios y grupos, controlando quiénes pueden realizar qué acciones dentro del sistema.', '2025-06-24 01:44:03'),
(473, '¿Qué es el propósito principal de la Matriz de Privilegios en una Base de Datos?', 68, 'La Matriz de Privilegios es un elemento fundamental en la gestión de la seguridad de bases de datos, ya que permite establecer quiénes tienen acceso a qué recursos y con qué derechos dentro de la base de datos. Se utiliza para definir roles y permisos para los usuarios, lo que ayuda a controlar el acceso y uso de la información almacenada en la base de datos.', '2025-06-24 01:45:49'),
(474, '¿Por qué se utiliza la Matriz de Privilegios en una base de datos?', 68, 'La Matriz de Privilegios es un mecanismo fundamental para gestionar la seguridad en una base de datos, ya que define quién puede realizar qué acciones y operaciones sobre ella. Esta herramienta permite establecer diferentes niveles de acceso y controlar quiénes pueden leer, escribir, borrar o crear información en la base de datos.', '2025-06-24 01:47:09'),
(475, '¿Qué comando se utiliza en SQL para crear un nuevo usuario?', 69, 'El comando GRANT se utiliza en SQL para dar permisos o privilegios a un usuario o rol en una base de datos.', '2025-06-24 01:47:54'),
(476, '¿Qué función se utiliza en SQL para asignar permisos a un usuario?', 69, 'La sentencia GRANT es utilizada en SQL para asignar permisos o roles a un usuario en una base de datos.', '2025-06-24 01:48:30'),
(477, '¿Cuál es el comando SQL utilizado para crear un usuario en una base de datos?', 69, 'El comando SQL \"CREATE\" se utiliza para crear nuevos objetos, como usuarios, tablas y vistas, en una base de datos.', '2025-06-24 01:49:05'),
(478, '¿Cuál es uno de los objetivos principales al crear vistas en una base de datos?', 70, 'La creación de vistas en una base de datos es un mecanismo para simplificar la consulta y presentación de datos. Las vistas son una capa adicional de abstracción que permite presentar los resultados de una consulta de manera más accesible, lo que facilita la creación de reportes y dashboards.', '2025-06-24 01:50:24'),
(479, '¿Cuál es el propósito principal al crear una vista en una base de datos?', 70, 'Una vista es una representación virtual de los resultados de una consulta SQL que se crea en la base de datos. La creación de vistas tiene como principal objetivo simplificar y mejorar el acceso a los datos, al permitir la realización de consultas complejas sin necesidad de crear nuevos tablas o índices.', '2025-06-24 01:51:33'),
(480, '¿Cuál es la principal característica de una vista relacional en una base de datos?', 70, 'Una vista relacional es una consulta SQL guardada temporalmente, que no modifica los datos subyacentes. No se almacenan nuevos datos, sino que más bien, crea un nuevo conjunto de datos a partir de la combinación y selección de datos ya existentes en una o varias tablas. Algunas ventajas de utilizar vistas relacionales incluyen: reducir la complejidad del esquema de datos, mejorar la seguridad al no permitir modificar los datos subyacentes y facilitar el acceso a los usuarios a ciertos conjuntos de datos específicos.', '2025-06-24 01:53:17'),
(481, '¿Cuál es el objetivo principal del proceso de resolución de vistas en bases de datos relacionales?', 71, 'El objetivo principal del proceso de resolución de vistas es transformar la estructura de los datos para facilitar las consultas y presentar los resultados de manera clara y comprensible.', '2025-06-24 01:55:42'),
(483, '¿Cómo se crean vistas en SQL?', 72, 'La sentencia \"CREATE VIEW\" es utilizada para crear una vista en SQL, lo que permite a los usuarios definir un nombre para una consulta SELECT y utilizarla como si fuera una tabla.', '2025-06-24 01:57:27'),
(484, '¿Qué es lo que se logra al crear una vista en un sistema de gestión de bases de datos relacional utilizando SQL?', 72, 'La creación de vistas en SQL permite a los usuarios crear una vista sobre una selección de datos en una base de datos, que se puede considerar como una table virtual. Esto permite mejorar la organización y la simplicidad al trabajar con grandes cantidades de datos.', '2025-06-24 01:58:55'),
(485, '¿Qué comando SQL se utiliza para crear una vista en una base de datos relacional?', 72, 'El comando `CREATE VIEW` es el método que se utiliza en SQL para crear una vista en una base de datos relacional. A través de una sentencia de `CREATE VIEW`, un usuario puede definir una vista como una selección de filas y columnas de una o varias tablas, permitiendo acceso a los datos sin necesidad de modificar las estructuras de la base de datos subyacente.', '2025-06-24 02:00:01'),
(486, '¿Cómo se declara la clave primaria en una tabla utilizando SQL?', 74, 'En SQL, se utiliza el comando \"PRIMARY KEY\" para declarar la clave primaria de una tabla. La sintaxis es simplemente escribir \"PRIMARY KEY (column_name)\" antes de la creación o modificación de la tabla.\n\nPor ejemplo:\n\nCREATE TABLE clientes(\n    id INT PRIMARY KEY,\n    nombre VARCHAR(50),\n    dirección TEXT\n);\n\nEn este caso, el campo \"id\" será la clave primaria de la tabla \"clientes\".', '2025-06-24 02:05:32'),
(487, '¿Cómo se puede obtener la clave primaria de una tabla en SQL?', 74, 'La sentencia DESCRIBE TABLE_NAME; muestra la estructura de la tabla y SHOW KEYS indica que es la clave primaria, por lo que para obtener la clave primaria de una tabla en SQL se puede utilizar la combinación de las dos opciones B) DESCRIBE TABLE_NAME; SHOW KEYS;', '2025-06-24 02:06:35'),
(488, '¿Cómo se puede obtener la lista de claves foráneas de una tabla en un sistema de bases de datos?', 75, 'La sentencia FOREIGN KEY es una de las herramientas que se utiliza en SQL para declarar las claves foráneas, por lo que es la correcta para obtener la lista de claves foráneas de una tabla.', '2025-06-24 02:08:38'),
(489, '¿Cómo puedo encontrar las claves foráneas de cualquier tabla existente en un sistema de bases de datos?', 75, 'El comando SHOW KEYS, SHOW INDEX o DESCRIPTOR para una tabla nos permite mostrar todas las claves foráneas y primarias (claves principales) de cada tabla en un sistema de bases de datos.', '2025-06-24 02:09:37'),
(490, '¿Cómo puedo declarar las claves foráneas de una tabla utilizando SQL?', 75, 'La opción C, \"SHOW TABLES WITH FOREIGN KEYS\", es la forma correcta de declarar las claves foráneas de una tabla utilizando SQL.', '2025-06-24 02:10:23'),
(491, '¿Cuál es el comando SQL que se utiliza en un sistema de gestión de bases de datos relacionales para crear una constraint de integridad referencial?', 76, 'La cláusula FOREIGN KEY es utilizada para establecer la relación entre tablas en un sistema de gestión de bases de datos relacionales y garantizar la integridad referencial, es decir, que la llave foránea esté presente en la tabla padre.\n\nNota: En el caso de que se desee especificar restricciones adicionales para la integridad referencial, como por ejemplo que no permitir la eliminación de una fila en la tabla padre si aún hay filas en la tabla hija que apunten a ella, se puede utilizar las claves ON DELETE y ON UPDATE.', '2025-06-24 02:12:04'),
(492, '¿Cómo se definen y controlan las claves foráneas en una base de datos relacional?', 76, 'Las claves foráneas se definen y controlan mediante la cláusula \"FOREIGN KEY\" en la sentencia CREATE TABLE, que indica a qué campo o conjunto de campos se refiere y a cuál campo o conjunto de campos en otra tabla. Esto permite establecer una restricción para asegurar que el valor en el campo foráneo sea válido y exista en la tabla correspondiente.', '2025-06-24 02:13:34'),
(494, '¿Cómo se puede definir una restricción CHECK en un campo de una tabla en SQL?', 77, 'La clausula CHECK se utiliza en SQL para definir una restricción que evalúa si los valores insertados en un campo cumplen con una condición. Por ejemplo, se puede utilizar la clausula CHECK para requerir que el valor de un campo sea mayor a cero o menor que un cierto límite.', '2025-06-24 02:16:05'),
(495, '¿Cuál es el comando SQL para registrar una restricción de integridad CHECK en una base de datos?', 77, 'La restricción de integridad CHECK se utiliza para verificar que el valor en una columna o conjunto de columnas cumpla con cierta condición. En este caso, la restricción CHECK verificara que la suma de las valores en las columnas \'column1\' y \'column2\' sea menor o igual a 10.', '2025-06-24 02:17:19'),
(496, '¿Cómo se define la restricción CHECK en una tabla de bases de datos MySQL?', 77, 'La restricción CHECK es utilizada para limitar el tipo de dato que puede ser ingresado en un campo, asegurando que los valores se ajusten a ciertos criterios previamente definidos. Por ejemplo: `CHECK (edad > 18)` garantizaría que cualquier registro en la tabla tenga una edad mayor a 18 años.', '2025-06-24 02:18:45'),
(497, '¿Qué es un trigger en SQL?', 78, 'Un trigger es un tipo de objeto en SQL que se activa automáticamente en respuesta a una acción específica (como una inserción, eliminación o modificación de registro), para ejecutar una secuencia de comandos.', '2025-06-24 02:19:50'),
(498, 'Cómo se estructura la matriz de privilegios para definir la política de seguridad en una base de datos?', 79, 'La matriz de privilegios es una herramienta importante para definir la política de seguridad en una base de datos. El primer paso para crearla es identificar los permisos de acceso y roles del usuario, lo que implica definir quién tiene qué tipo de acceso a qué recursos y qué acciones pueden realizar sobre ellos.', '2025-06-24 02:24:26'),
(499, '¿Cómo se denomina al diagrama que muestra los permisos y autorizaciones que cada usuario tiene en una base de datos?', 79, 'La matriz de privilegios es un diagrama que describe la política de seguridad de una base de datos, mostrando los permisos y autorizaciones que cada usuario tiene en ella.', '2025-06-24 02:25:20'),
(500, '¿Qué es el objetivo principal al crear una matriz de privilegios en una base de datos?', 79, 'La matriz de privilegios es un documento que describe la política de seguridad de una base de datos, definiendo quién puede realizar qué acciones y por qué. Al crear esta matriz se busca definir las restricciones y permisos necesarios para controlar el acceso a los datos y proteger la integridad de la información almacenada en la base de datos.', '2025-06-24 02:26:55'),
(501, '¿Cómo se crea un nuevo usuario en la base de datos utilizando un comando SQL?', 80, 'El comando SQL que se utiliza para crear un nuevo usuario en una base de datos es \"CREATE USER\", no \"INSERT INTO\" (que se utiliza para insertar nuevos registros en una tabla), ni \"SELECT\" (que se utiliza para recuperar información de una base de datos) ni \"DROP TABLE\" (que se utiliza para eliminar una tabla).', '2025-06-24 02:28:19'),
(502, 'Cómo se crea un nuevo usuario en una base de datos utilizando SQL.', 80, 'La sentencia `CREATE USER username;` se utiliza para crear un nuevo usuario en la base de datos.', '2025-06-24 02:29:39'),
(503, 'Cómo se puede crear un usuario con permisos específicos para acceder a ciertas tablas y campos en una base de datos utilizando SQL?', 81, 'Para asignar permisos específicos para acceder a ciertas tablas y campos en una base de datos utilizando SQL, se puede utilizar la clausula GRANT y REVOKE. Esta estrategia permite definir los permisos individuales para cada usuario o grupo de usuarios y controlar el acceso a los recursos de la base de datos.', '2025-06-24 02:31:25'),
(504, '¿Qué es lo que se utiliza para controlar los permisos y autorización en una base de datos MySQL?', 81, 'En MySQL, la estrategia de acceso a la base de datos basada en la asignación de privilegios se logra mediante el uso del Privilegios Rol-Based Access Control (RBAC), que es un conjunto de permisos y restricciones utilizados para controlar el acceso a objetos en una base de datos.', '2025-06-24 02:32:26'),
(505, '¿Qué es lo que se utiliza en un lenguaje de consulta como SQL para crear una tabla que puede ser utilizado para mostrar datos a partir de varias tablas?', 82, 'En SQL, se utiliza la palabra clave \"VISTA\" o \"VIEW\" para crear una tabla que puede ser utilizada para mostrar datos a partir de varias tablas. La vista es un objeto en el lenguaje SQL que permite recuperar y presentar los datos de bases de datos relacionales.', '2025-06-24 02:34:11'),
(506, '¿Qué función se utiliza en SQL para crear una vista sobre una base de datos?', 82, 'El comando SELECT se utiliza en SQL para extraer y presentar información de una base de datos, por lo que es la función adecuada para crear una vista o consulta sobre un conjunto de datos.', '2025-06-24 02:34:53'),
(507, '¿Qué comando SQL se utiliza para crear una vista en un sistema de gestión de bases de datos relacionales?', 82, 'La opción C) VIEW es el comando que se utiliza para crear una vista en un sistema de gestión de bases de datos relacionales.', '2025-06-24 02:35:30'),
(508, '¿Qué función tiene el lenguaje DML (Data Manipulation Language) en SQL?', 83, 'El DML (Data Manipulation Language) es el lenguaje de SQL que se utiliza para insertar, actualizar o eliminar registros en una base de datos existente.', '2025-06-24 02:36:42'),
(509, '¿Cuál es el fin principal del lenguaje DML (Data Manipulation Language) en SQL?', 83, 'El lenguaje DML (Data Manipulation Language) es un subconjunto del lenguaje SQL que se utiliza para manipular y actualizar los datos existentes en una base de datos. Es utilizado para insertar, eliminar y modificar filas en las tablas de una base de datos.', '2025-06-24 02:38:00'),
(510, '¿Qué hace el comando DDL (Data Definition Language) en SQL?', 83, 'El comando DDL (Data Definition Language) en SQL se utiliza para crear, modificar y eliminar la estructura de los objetos de una base de datos como tablas, índices, vistas, procedimientos almacenados, etc. No es utilizado para insertar, modificar o eliminar datos en una base de datos, sino que se encarga de definir cómo esos datos se almacenan y organizan en la base de datos.', '2025-06-24 02:39:23'),
(511, '¿Qué es el primer principio de diseño de bases de datos?', 84, 'El primer principio de diseño de bases de datos es normalizar los datos para evitar redundancia y asegurar la integridad y consistencia en la información, lo que facilita su lectura, actualización y manipulación.', '2025-06-24 02:40:37'),
(513, '¿Cuál es el operador de DML en SQL que se utiliza para eliminar registros de una tabla?', 85, 'El operador DML (Data Manipulation Language) más común para eliminar registros de una tabla es el comando DELETE.', '2025-06-24 02:43:53'),
(514, '¿Cuál es el operador utilizado para insertar nuevos registros en una base de datos?', 85, 'El operador INSERT se utiliza para agregar nuevos registros a una tabla en una base de datos.', '2025-06-24 02:44:26'),
(515, '¿Cuál es el operador en algebra relacional que se corresponde al operador \"DISTINCT\" en SQL?', 86, 'En la algebra relational, el operador ∪ (unión) es equivalente al operador DISTINCT en SQL. El operador ∪ devuelve un conjunto que contiene todos los elementos que están presentes en alguno de los conjuntos operandos. En el contexto de una consulta SQL, el operador DISTINCT se utiliza para eliminar duplicados y devolver solo filas únicas.', '2025-06-24 02:47:13'),
(516, '¿Cuál es el operador relacional que se utiliza para comparar dos conjuntos de filas entre sí?', 86, 'El operador JOIN se utiliza en la algebray de relaciones (relational algebra) y en SQL para combinar conjuntos de filas que tienen una relación entre sí. Es un operador fundamental en bases de datos relacionales, ya que permite crear nuevos conjuntos de filas a partir de la combinación de dos o más conjuntos previamente seleccionados.\n\nEl CROSS PRODUCT, por otro lado, es un operador básico en algebray relacional que produce una tabla con todas las posibles combinaciones entre dos tablas. La DIVIDE no es un operador relacional y el UNION es un operador que se utiliza para combinar conjuntos de filas que tienen la misma estructura, pero no necesariamente una relación entre sí.', '2025-06-24 02:48:52'),
(517, '¿Qué es el operador utilizado para seleccionar todos los registros de una tabla en una consulta SQL?', 87, 'El operador “SELECT” se utiliza en SQL para especificar la parte que se va a recuperar de una base de datos y devuelve todos los registros de la tabla especificada.', '2025-06-24 02:49:42'),
(518, '¿Cuál es el propósito del operador \"ORDER BY\" en una sentencia SQL?', 87, 'El operador \"ORDER BY\" es utilizado para ordenar los resultados de una consulta, ya sea ascendientemente o descendientemente, según la columna que se especifique.', '2025-06-24 02:50:38'),
(519, '¿Cuál es el propósito del operador \"SELECT\" en una sentencia SQL?', 87, 'El operador \"SELECT\" es utilizado en una sentencia SQL para especificar qué columnas o campos de una tabla deseamos que se muestren en el resultado. Por ejemplo, si queremos recuperar la columna \"nombre\" y la columna \"edad\" de un registro, utilizaríamos la siguiente sentencia: SELECT nombre, edad FROM registros.\n\nFuente:\nhttps://www.w3schools.com/sql/sql_select.asp', '2025-06-24 02:51:56'),
(520, '¿Cuál es el uso principal del operador SELECT en SQL?', 88, 'El operador SELECT se utiliza para seleccionar uno o varios campos (columnas) de una o varias tablas, y mostrarlos en el resultado.', '2025-06-24 02:52:54'),
(521, '¿Qué es lo que hace el operador SELECT en un lenguaje de consultas SQL?', 88, 'El operador SELECT es utilizado para proyectar o seleccionar columnas y/o otros valores en el ámbito de una consulta SQL, es decir, para elegir qué campos se van a mostrar en el resultado de la consulta.', '2025-06-24 02:54:56'),
(522, '¿Cuál es la función principal del operador WHERE en una consulta SQL?', 89, 'El operador WHERE es utilizado para filtrar las filas que se devuelven en un resultado de una consulta SQL, permitiendo que se especifiquen condiciones para seleccionar solo aquellas filas que cumplan ciertos criterios.', '2025-06-24 02:55:57'),
(523, '¿Cuál es el objetivo principal del operador WHERE en un lenguaje SQL?', 89, 'El operador WHERE en SQL es utilizado para especificar las condiciones bajo las que se deben filtrar los datos cuando se ejecuta un comando SELECT, UPDATE o DELETE. Se utiliza para obtener solo las filas que satisfacen determinadas condiciones, lo que permite realizar consultas más específicas y eficientes sobre una base de datos.', '2025-06-24 02:57:22'),
(524, '¿Qué es lo que hace el operador WHERE en un lenguaje de consulta SQL?', 89, 'El operador WHERE es utilizado en un lenguaje de consulta SQL para filtrar las filas de una tabla y devolver solo aquellas que satisfacen ciertas condiciones.', '2025-06-24 02:58:16'),
(525, '¿Qué función tiene el operador ORDER BY en el lenguaje SQL?', 90, 'El operador ORDER BY se utiliza en SQL para especificar la forma en que se ordenan los resultados de una consulta. Los registros pueden ser ordenados según uno o varios campos, y se puede elegir entre dos modos: ascendente (por defecto) o descendente.', '2025-06-24 02:59:34'),
(526, '¿Cuál es el objetivo principal del comando SQL \"ORDER BY\"?', 90, 'El comando SQL \"ORDER BY\" se utiliza para ordenar los resultados de una consulta, es decir, para colocar las filas de la tabla en el orden que desee.', '2025-06-24 03:00:26'),
(527, '¿Qué función cumple el operador ORDER BY en la sentencia SQL?', 90, 'El operador ORDER BY se utiliza en SQL para ordenar los resultados de una consulta según una o varias columnas. De esta manera, permite mostrar los registros en el orden deseado, ya sea ascendente (por defecto) o descendente, utilizando la palabra clave DESC.\n\nNota: Los demás opciones son incorrectas porque A se refiere a LIMIT, C se refiere a DISTINCT y D se refiere a INDEX.', '2025-06-24 03:01:48'),
(528, '¿Qué es lo que hace el siguiente operador de agregación en SQL?', 91, 'El operador SUM es uno de los operadores de agregación en SQL, que se utiliza para agrupar filas y devolver la suma total de un campo.', '2025-06-24 03:03:00'),
(529, '¿Cuál es el operador de agregación que se utiliza para obtener la suma de un campo en un conjunto de registros?', 91, 'El operador SUM es el que permite calcular la suma total de los valores de un campo en un conjunto de registros.', '2025-06-24 03:03:36'),
(530, '¿Cuál es el propósito del operador SUM en las consultas SQL?', 91, 'El operador SUM es un operador de agregación que se utiliza en las consultas SQL para sumar los valores de una columna o conjunto de columnas. Es comúnmente utilizado para calcular la suma total de los valores en una columna, como por ejemplo el importe total de una cuenta de cliente.\n\nNota: El uso correcto de este operador depende de la estructura y tipo de datos de la tabla que se está consultando, así como del propósito de la consulta.', '2025-06-24 03:04:58'),
(531, '¿Qué función cumple el operador GROUP BY en una consulta SQL?', 92, 'El operador GROUP BY se utiliza para agrupar filas que tienen valores iguales en una o más columnas, lo que permite realizar análisis estadísticos y cálculos agregados sobre los datos.', '2025-06-24 03:06:06'),
(532, '¿Cuál es el uso principal del operador GROUP BY en un lenguaje SQL?', 92, 'El operador GROUP BY se utiliza en SQL para agrupar los registros que tienen valores similares en una o varias columnas. Esto permite obtener resultados agrupados y realizar cálculos a nivel de grupo, como la suma o el conteo de filas que pertenecen a cada grupo.', '2025-06-24 03:07:23'),
(533, '¿Qué tipo de consultas pueden hacerse a una base de datos utilizando subconsultas?', 93, 'Las subconsultas permiten a una consulta SQL hacer consultas dentro de una consulta, lo que permite recopilar y manipular los resultados de esta sub-consulta.', '2025-06-24 03:10:49'),
(534, '¿Cuál es el objetivo principal al utilizar consultas subsecuentes (subqueries) en SQL?', 93, 'Las consultas subsecuentes (subqueries) se utilizan para crear tablas temporales que pueden ser utilizadas en la consulta principal. Esto permite simplificar la escritura de consultas complejas, mejorar el rendimiento y reducir la cantidad de código necesaria. Por ejemplo, una query puede utilizar una subquery para obtener los IDs de ciertas filas y luego utilizar esos IDs en una segunda query para extraer datos complementarios.', '2025-06-24 03:12:20'),
(535, '¿Qué es un Common Table Expression (CTE) en SQL?', 94, 'Un Common Table Expression (CTE) en SQL es una instrucción que permite definir una expresión temporal, que puede ser utilizada como una tabla en una consulta. Esto permite escribir consultas más legibles y eficientes, ya que se pueden evitar las subconsultas y se facilita la resolución de consultas complejas.', '2025-06-24 03:13:52'),
(536, '¿Qué es un CTE en bases de datos?', 94, 'Un CTE (Common Table Expression) es un nombre dado a una select statement que puede ser referido varias veces dentro de un SELECT, INSERT, UPDATE o DELETE statement. Es como un subconsulta reutilizable multiple veces en una consulta SQL, lo que puede simplificar y optimizar la estructura de nuestras consultas.', '2025-06-24 03:15:02'),
(537, '¿Qué es un Common Table Expression (CTE)?', 94, 'Un Common Table Expression (CTE) es una sentencia SQL que permite crear una vista temporal en memoria, la cual puede ser utilizada en la clausula FROM de una consulta SQL. Esto es muy útil para simplificar consultas complejas y reducir su complejidad.', '2025-06-24 03:16:42'),
(539, '¿Qué es lo que se utiliza para unir filas de varias tablas en una base de datos?', 95, 'El operador de JOIN se utiliza para combinar filas de dos o más tablas en una base de datos, creando una nueva tabla que contiene todas las columnas de las tablas originales. Los operadores de JOIN pueden ser INNER JOIN (unir solo las filas que coinciden), LEFT JOIN (unir todas las filas de la tabla izquierda y los valores nulos de la derecha), RIGHT JOIN (unir todas las filas de la tabla derecha y los valores nulos de la izquierda), FULL JOIN (unir todas las filas de ambas tablas, completando con valores nulos cuando sea necesario).', '2025-06-24 03:20:34'),
(540, '¿Qué es lo que hace el operador INNER JOIN cuando se utiliza entre dos tablas?', 95, 'El operador INNER JOIN es utilizado para combinar registros de dos o más tablas sobre la base de una condición de igualdad entre las columnas correspondientes en las diferentes tablas. Solo devuelve los registros que tienen coincidencias en ambas columnas y elimina los registros que no tienen coincidencia, por lo que solo muestra los resultados que combinan datos procedentes de más de una tabla.', '2025-06-24 03:22:45'),
(541, '¿Cuál es el operador utilizado para seleccionar todos los valores que NO se encuentran en un conjunto de valores especificado en una consulta SQL?', 96, 'El operador \"Except\" (en inglés, \"except\") es utilizado en consultas SQL para seleccionar todos los valores que no se encuentran en un conjunto de valores especificado. Por ejemplo, si deseamos obtener todos los empleados que no son gerentes, podemos utilizar la cláusula \"EXCEPT\" y especificar el conjunto de gerentes como argumento: SELECT * FROM empleados EXCEPT SELECT * FROM gerentes.', '2025-06-24 03:25:55'),
(544, '¿Qué es el comando que se utiliza para insertar nuevos registros en una base de datos?', 97, 'El comando \"INSERT INTO\" es utilizado para insertar nuevos registros o filas en una tabla dentro de una base de datos.', '2025-06-24 03:29:16'),
(545, '¿Cuál es el comando utilizado para insertar un nuevo registro en una base de datos MySQL?', 97, 'El comando \"INSERT\" se utiliza para agregar nuevos registros a una tabla en una base de datos MySQL.', '2025-06-24 03:30:01'),
(546, '¿Qué comando SQL se utiliza para insertar nuevos registros en una base de datos?', 97, 'La instrucción INSERT es la que se utiliza para insertar nuevos registros en una tabla de una base de datos.', '2025-06-24 03:30:44'),
(547, '¿Cuál es la sentencia SQL para actualizar un registro en una base de datos?', 98, 'La sentencia SQL para actualizar un registro en una base de datos es la instrucción UPDATE. Para hacerlo, se especifica el nombre de la tabla y las columnas que se van a actualizar, seguidas del valor nuevo que se desea asignar.', '2025-06-24 03:32:56'),
(548, '¿Qué comando se utiliza para actualizar la información en una base de datos?', 98, 'El comando \"UPDATE\" es el que se utiliza para actualizar la información existente en una tabla.', '2025-06-24 03:33:54'),
(549, '¿Cómo se elimina toda la información contenida en una base de datos utilizando un lenguaje de consulta estructurado (SQL)?', 99, 'El comando \"DELETE FROM\" es una sentencia SQL que elimina todos los registros de una tabla especificada. Sin embargo, si se quiere eliminar toda la información contenida en una base de datos, sería recomendable hacerlo mediante una sentencia SQL que elimine la estructura de la tabla y no solo sus datos. El comando \"DROP TABLE\" es el más adecuado para este fin, ya que elimina tanto la estructura como los registros contenidos en una tabla.', '2025-06-24 03:36:55'),
(550, '¿Cuál es el comando SQL para eliminar todos los registros de la tabla \"empleados\"?', 99, 'El comando SQL para eliminar todos los registros de la tabla \"empleados\" es el comando DELETE, que se utiliza para borrar filas de una tabla. Es importante tener cuidado al utilizar este comando, ya que elimina permanentemente los datos y no hay forma de recuperarlos después del borrado.\n\nEs importante mencionar que el código SQL para borrar información existente en una tabla puede variar dependiendo del sistema de gestión de bases de datos (SGBD) utilizado. El ejemplo proporcionado es un ejemplo básico y se asume que se está utilizando MySQL o PostgreSQL como SGBD, ya que son comandos válidos en estos casos.', '2025-06-24 03:38:50'),
(551, '¿Qué comando SQL se utiliza para eliminar toda la información contenida en una tabla?', 99, 'El comando DELETE es el que se utiliza para eliminar todos los registros de una tabla, mientras que UPDATE se utiliza para modificar datos existentes, INSERT se utiliza para agregar nuevos datos y SELECT se utiliza para obtener información.', '2025-06-24 03:39:42'),
(552, '¿Qué es lo siguiente comando SQL para obtener la suma total de todos los valores en la columna \"ventas\"?', 100, 'El comando \'SELECT SUM(ventas)\' es el que se utiliza para obtener la suma total de todos los valores en la columna \"ventas\".', '2025-06-24 03:42:09'),
(553, '¿Qué es lo que se utiliza en SQL para seleccionar todos los campos de una tabla?', 101, 'La clausula SELECT en SQL se utiliza para seleccionar datos de una base de datos. Al escribir \"SELECT *\" se puede seleccionar todos los campos de la tabla, lo que es comúnmente utilizado cuando se necesita obtener toda la información disponible.\n\nNota: Las opciones B y C son partes importantes del lenguaje SQL pero no están relacionadas directamente con la selección de campos en una tabla. La opción D se refiere a la actualización de datos en lugar de la selección.', '2025-06-24 03:45:02'),
(554, '¿Cuál es la clausula utilizada para ordenar los resultados de una consulta en bases de datos?', 101, 'La clausula \"ORDER BY\" se utiliza en SQL para ordenar los resultados de una consulta, lo que implica seleccionar y organizar los registros de manera ascendente o descendente según un campo determinado.', '2025-06-24 03:45:55'),
(555, '¿Qué es lo que se utiliza para especificar la condición para filtrar filas en un query SELECT?', 101, 'El comando WHERE es utilizado en SQL para especificar la condición para filtrar las filas de una consulta SELECT. Se utiliza para seleccionar solo las filas que cumplan con cierta condición y descartar aquellas que no lo hacen.', '2025-06-24 03:46:51'),
(556, '¿Cuál es la función SQL que se utiliza para ordenar los registros de una tabla en base a un campo específico?', 102, 'La cláusula ORDER BY se utiliza en SQL para ordenar los registros de una tabla en función del valor de uno o más campos.', '2025-06-24 03:47:54'),
(557, '¿Cuál es la función en SQL que se utiliza para agrupar los resultados de una consulta y mostrarlos por un conjunto de columnas especificadas?', 103, 'El comando \"GROUP BY\" es el que permite agrupar los resultados de una consulta en SQL, permitiendo mostrar los datos en un formato estructurado y fácilmente analizable.', '2025-06-24 03:51:20'),
(558, '¿Cuál es el operador utilizado en SQL para realizar la agrupación de los registros en un conjunto de filas?', 103, 'El operador GROUP BY se utiliza en SQL para agrupar los registros de una base de datos según uno o más columnas especificadas, permitiendo obtener resultados agregados y resumen sobre los grupos.\n\nNota: La opción correcta puede variar dependiendo del contexto y de la versión de SQL utilizada.', '2025-06-24 03:53:33'),
(559, '¿Qué es lo que se utiliza en SQL para agrupar filas y calcular operaciones matemáticas sobre ellas?', 104, 'El comando \"GROUP BY\" se utiliza en SQL para agrupar filas que tienen valores similares en ciertas columnas y permitir realizar operaciones matemáticas sobre ellas.', '2025-06-24 03:57:33'),
(560, '¿Qué es lo que se utiliza para agrupar los datos en SQL?', 104, 'El comando GROUP BY es el que permite agrupar los datos en una consulta SQL, según un campo o conjunto de campos específicos.', '2025-06-24 03:58:22'),
(561, '¿Cuál es la función de la sentencia `WITH` en SQL?', 105, 'La sentencia `WITH` es utilizada para crear una vista temporal, a la que se puede hacer referencia posteriormente dentro de una consulta SQL. Esta vista temporal se llama \"subconsulta recursiva\" y permite resolver consultas complejas y optimizar el rendimiento al reducir la cantidad de operaciones necesarias para obtener los resultados.', '2025-06-24 04:00:33'),
(562, '¿Cuál es la clausula SQL utilizada para crear una vista que muestre el resultado de ejecutar una subconsulta sobre otra tabla?', 105, 'La clausula \"WITH\" se utiliza en SQL para definir una vista o un conjunto de consultas que se utilizan como parte de la consulta principal. En particular, se puede utilizar para crear vistas recursivas o para optimizar la ejecución de subconsultas complejas.\n\nNota: Esta pregunta no evalúa el criterio de escritura de código SQL en sí, sino más bien su capacidad para identificar la clausula adecuada para lograr un resultado determinado.', '2025-06-24 04:02:10'),
(563, '¿Qué es el uso de subconsultas en SQL?', 105, 'El uso de subconsultas (también llamadas consultas anidadas o subqueries) en SQL permite la creación de consultas complejas que pueden incluir consultas adicionales y utilizar los resultados de éstas para realizar operaciones lógicas. Esto puede ser útil al momento de obtener resultados más detallados, como por ejemplo: \"¿Cuál es el producto con el precio más alto en una categoría específica?\" (donde se necesita comparar los precios de varios productos dentro de la categoría).\n\nEspero que esto te ayude.', '2025-06-24 04:05:25'),
(564, '¿Qué es el resultado de un JOIN en SQL?', 106, 'Un JOIN es una clausula en SQL que se utiliza para unir dos o más tablas en una sola, creando una nueva tabla temporal que contiene todas las filas de ambas tablas.', '2025-06-24 04:07:17'),
(565, '¿Cuál es el tipo de jointo que se utiliza para combinar dos o más tablas cuando no hay una columna común en ambas?', 106, 'El inner join es el tipo de jointo que se utiliza para combinar dos o más tablas cuando hay una columna común entre ellas.', '2025-06-24 04:08:31'),
(572, '¿Cómo se puede realizar la unión de dos conjuntos en un lenguaje SQL?', 107, 'La sentencia \"UNION\" se utiliza para combinar dos o más consultas SELECT en una sola, devolviendo los resultados sin duplicados.', '2025-06-30 04:12:32'),
(573, '¿Qué es lo que se utiliza en SQL para actualizar un registro existente en una tabla?', 85, 'La instrucción UPDATE se utiliza para modificar los datos de un registro existente en una tabla. Se utiliza para hacer cambios en uno o más campos de un registro, sin eliminar ni agregar nuevos registros.', '2025-06-30 04:21:32'),
(574, '¿Cuál es el objetivo principal del lenguaje DML (Data Manipulation Language) en SQL?', 83, 'El lenguaje DML (Data Manipulation Language), en el contexto de SQL, se utiliza para manipular los datos ya existentes en una base de datos. Estos comandos pueden ser utilizados para modificar, eliminar o agregar registros, realizar inserciones y actualizaciones, así como también para eliminar filas completas. DML es un conjunto de sentencias que permiten interactuar con las tablas y modificar su contenido.', '2025-06-30 04:23:15'),
(576, '¿Qué es el operador \"AND\" en una consulta SQL?', 87, 'El operador \"AND\" es utilizado en SQL para combinar dos o más condiciones lógicas, asegurando que solo se incluyan aquellos registros que cumplan con todas las condiciones.', '2025-06-30 04:28:10'),
(577, '¿Qué función desempeña el operador SELECT en la creación de consultas SQL?', 88, 'El operador SELECT es utilizado en SQL para proyectar o seleccionar ciertos campos o columnas de una tabla, así como también valores calculados a partir de expresiones y funciones.', '2025-06-30 04:29:27'),
(578, 'Cómo utilizaría el operador ORDER BY para ordenar los registros en una consulta SQL?', 90, 'El operador ORDER BY es utilizado para ordenar los registros en una consulta SQL. Para hacerlo, se coloca al final de la consulta y se especifica el campo o campos que desean ser ordenados. Por ejemplo: SELECT * FROM tabla ORDER BY nombre ASC o SELECT * FROM tabla ORDER BY nombre DESC (si se deseamos un ordenamiento inverso).', '2025-06-30 04:31:08');
INSERT INTO `pregunta` (`Id`, `Enunciado`, `CriterioId`, `Explicacion`, `Timestamp`) VALUES
(579, '¿Cuál es el operador de agregación que se utiliza para obtener la suma total de todos los valores en un campo?', 91, 'El operador SUM se utiliza para obtener la suma total de todos los valores en un campo, es decir, agrega los valores individuales y devuelve el resultado.\n\nEjemplo:\nSELECT SUM(salary) FROM employees;', '2025-06-30 04:33:12'),
(580, '¿Qué es lo que hace el operador GROUP BY en un lenguaje SQL?', 92, 'El operador GROUP BY es utilizado para agrupar filas en función de uno o más columnas, permitiendo así la aplicación de funciones agregadas sobre las diferentes subconjuntos resultantes.', '2025-06-30 04:34:22'),
(581, '¿Qué sentencia SQL se utiliza para eliminar todos los registros de una tabla?', 99, 'La instrucción DELETE FROM tabla es la que permite borrar todos los registros (filas) existentes en una tabla.', '2025-07-01 02:48:06'),
(582, '¿Qué comando SQL se utiliza para eliminar todos los registros de una tabla?', 99, 'El comando SQL \"DELETE\" es el que se utiliza para eliminar uno o más registros de una tabla en una base de datos.', '2025-07-01 03:21:23'),
(583, '¿Cómo se actualizan los registros en una tabla utilizando lenguaje SQL?', 98, 'La sentencia \"UPDATE\" se utiliza para actualizar los registros de una tabla en una base de datos. Puedes especificar las columnas y los valores que deseas cambiar, o utilizar un valor específico para hacerlo.', '2025-07-01 03:23:26'),
(584, '¿Qué comando SQL se utiliza para insertar un nuevo registro en una base de datos?', 97, 'El comando SQL \"INSERT\" es el que se utiliza para agregar nuevos registros a una tabla, esto permite crear o copiar datos y insertarlos en la base de datos.', '2025-07-01 03:25:05'),
(585, '¿Qué es el comando que se utiliza para actualizar información en una base de datos utilizando SQL?', 98, 'El comando `UPDATE` es utilizado en SQL para modificar la información existente en una tabla.', '2025-07-01 03:52:51'),
(586, '¿Cómo puedo eliminar todos los registros de la tabla \"empleados\"?', 99, 'El comando SQL para eliminar todos los registros de una tabla es DELETE FROM, el cual elimina la fila seleccionada en la tabla indicada.', '2025-07-01 03:53:56'),
(587, '¿Qué tipo de sentencia se utiliza en SQL para insertar datos en una base de datos?', 97, 'La sentencia de inserción (INSERT INTO) es utilizada para introducir nuevos registros en una tabla. Se utiliza para crear un nuevo registro o agregar un nuevo conjunto de datos a una base de datos.', '2025-07-01 03:54:53'),
(588, '¿Cuál es la instrucción SQL para insertar un nuevo registro en una tabla?', 97, 'La instrucción SQL \"INSERT\" se utiliza para agregar nuevos registros a una tabla. Para insertar información en una tabla, necesitas especificar la tabla y los valores que deseas insertar, utilizando el siguiente formato: INSERT INTO nombre_de_la_tabla (columna1, columna2, ...) VALUES (\'valor1\', \'valor2\', ...).\n\nPor ejemplo: INSERT INTO usuarios (nombre, apellido, correo) VALUES (\'Juan\', \'Pérez\', \'jperez@gmail.com\');', '2025-07-01 04:09:46'),
(589, '¿Cuál es la sentencia SQL para insertar un registro en una tabla?', 97, 'La sentencia SQL \"INSERT INTO\" se utiliza para insertar nuevos registros o filas en una tabla. Es una de las operaciones básicas que se pueden realizar en una base de datos relacional, y es necesaria para agregar información nueva a una tabla.\n\nNota: La sintaxis general para insertar un registro en una tabla es la siguiente:\n```\nINSERT INTO nombre_de_la_tabla (columna1, columna2, ...) VALUES (valor1, valor2, ...)\n```', '2025-07-01 04:14:52'),
(590, '¿Qué comando SQL se utiliza para eliminar toda la información almacenada en una tabla?', 99, 'El comando DELETE es el que se utiliza para eliminar los registros de una tabla, mientras que INSERT y UPDATE son comandos para agregar o actualizar información, respectivamente. El comando SELECT es utilizado para seleccionar información y mostrarla en un conjunto de resultados.', '2025-07-01 04:16:33'),
(591, '¿Cuál es el comando SQL para actualizar cualquier información existente en una tabla?', 98, 'El comando SQL \"UPDATE\" se utiliza para modificar la información existente en una tabla, permitiendo así actualizar cualquier dato en una base de datos.', '2025-07-01 04:17:55'),
(592, 'What is the primary function of an attribute in a database design?', 14, 'An attribute, also known as a field or column, is an element of an entity in the conceptual database design that describes its characteristics. It provides additional context to the schema by defining what information can be stored for each instance of the entity.', '2025-07-05 01:52:01'),
(593, 'Which of the following is an example of a weak entity in the context of database design?', 13, 'A weak entity is one that depends on another entity for its existence, it has no independent existence. In this case, an employee is a student because a student is a person who has gone through education but an employee is not necessarily a student as they can be a person in general.', '2025-07-05 01:52:45'),
(594, '¿Qué es un tipo de relación entre tablas en el diseño conceptual de una base de datos?', 15, 'La opción C es una relación que se refiere a la asociación entre dos filas que se relacionan por un campo común, lo que permite establecer una conexión lógica y estructural entre ellas.', '2025-07-05 01:53:40'),
(595, '¿Cuál es un tipo de información que se considera un metadato en el diseño conceptual de una base de datos?', 16, 'Un metadato es información que describe o describe la estructura, contenido o características de una base de datos. En el contexto del diseño conceptual de una base de datos, los metadatos pueden incluir la descripción de las entidades y sus atributos (C), como por ejemplo, el tipo de dato para cada atributo, su tamaño máximo, etc. Atributos son características que describen a las entidades, por lo tanto no es un metadato. La relación entre dos entidades se refiere al la conexión entre ellas en una base de datos, y es también parte del diseño conceptual, pero no es considerado un metadato. El nombre del proyecto y la fecha de finalización son información sobre el contexto o historial de la creación de la base de datos, por lo que tampoco se considera un metadato.', '2025-07-05 01:55:25'),
(596, 'What is the concept of an entity in the context of database design?', 13, 'In the context of database design, an entity is an object, concept, or thing about which information can be stored and retrieved. It represents a real-world concept, such as a customer, product, order, employee, etc., that can be described by attributes and relationships with other entities.', '2025-07-05 01:56:16'),
(597, '¿Qué es un atributo en el contexto del diseño conceptual de una base de datos?', 14, 'Un atributo es un elemento que se utiliza para describir y caracterizar a una entidade o objeto en el contexto del diseño conceptual de una base de datos. Se define como la relación entre la entidad y su contenido, y puede ser clasificado según diferentes tipos, como numérico, textual, datatime o booleano.', '2025-07-05 01:57:28'),
(598, '¿Cuál es el tipo de relación entre dos entidades en un diagrama de Entity-Relationship?', 15, 'La asociación se refiere a la relación existente entre dos o más entidades que tienen una conexión mutua. Por ejemplo, en un sistema de reservas de habitaciones en un hotel, las reservas y las habitaciones están relacionadas ya que una reserva está asociada a una habitación y vice versa.', '2025-07-05 01:58:35'),
(599, '¿Cuál es el propósito principal de un metadato en el contexto de la creación de una base de datos?', 16, 'Los metadatos son información que describe y define los aspectos esenciales de un objeto, como una base de datos. En el contexto de la creación de una base de datos, los metadatos tienen el propósito principal de describir y definir la estructura y contenido de los datos almacenados en la base de datos, incluyendo información sobre las tablas, campos, relaciones entre ellas y otros aspectos importantes para el diseño conceptual de la base de datos.', '2025-07-05 02:00:17'),
(600, '¿Cuál es el propósito principal de utilizar la notación UML en la modelización de bases de datos?', 17, 'La notación UML (Unified Modeling Language) es una notación estandarizada utilizada para modelizar sistemas, incluyendo bases de datos. El propósito principal de utilizar la notación UML es crear una visión general y conceptual del sistema, lo que permite a los diseñadores y desarrolladores entender mejor el funcionamiento y estructura del sistema, así como comunicarse más efectivamente entre ellos y con otros stakeholders.\n\nNota: La notación UML se utiliza en diferentes etapas del ciclo de vida del sistema, incluyendo la planificación, diseño, implementación y pruebas, por lo que su uso es amplio y no se limita a una etapa específica. Sin embargo, su uso principal es crear una visión general y conceptual del sistema, lo que es fundamental para garantizar la coherencia y consistencia en el diseño y desarrollo de un proyecto.', '2025-07-05 02:02:45'),
(601, '¿Qué es el siguiente código SQL para crear una restricción de integridad en una base de datos?', 77, 'El código SQL para crear una restricción de integridad en una base de datos se puede hacer utilizando la palabra reservada \"CHECK\", seguida del condicional que describe la restricción. En este caso, la restricción CHECK (edad > 18) indica que la edad debe ser mayor a 18 años.', '2025-07-05 02:04:02'),
(602, '¿Cuál es el propósito principal del TRIGGER en bases de datos?', 78, 'El trigger es un bloqueo en una base de datos que se activa automáticamente cuando ocurren ciertos eventos, como la inserción, actualización o eliminación de registros. Uno de los propósitos más importantes del trigger es restringir la integridad y garantizar que se cumplan las reglas de negocio, asegurando la coherencia y consistencia en la base de datos.', '2025-07-05 02:05:39'),
(603, '¿Qué se entiende por relación IS-A en el contexto de bases de datos?', 18, 'La relación IS-A se refiere a una jerarquía de entidades en la que una entidad es un tipo de otra, por ejemplo \"perro\" es un tipo de \"mammal\".', '2025-07-05 02:08:06'),
(604, '¿Qué es la primera etapa en el diseño conceptual de una base de datos?', 19, 'La etapa de análisis de requisitos es la primera etapa en el diseño conceptual de una base de datos, donde se analiza y define los requisitos funcionales y no funcionales del sistema para diseñar un modelo de datos que satisfaga las necesidades del usuario.', '2025-07-05 02:09:07'),
(605, '¿Qué es el operador \"IN\" en lenguaje SQL?', 105, 'El operador \"IN\" en SQL se utiliza para buscar valores dentro de una lista o rango. Puedes utilizarlo para hacer consultas que impliquen la búsqueda de registros que tengan valores específicos en un campo, siempre y cuando estos valores estén presentes en la lista o rango especificado.\n\nEjemplo de consulta:\nSELECT * FROM tabla WHERE campo IN (valor1, valor2, valor3);\n\nAl escribir una consulta con el operador \"IN\", SQL buscará registros que tengan los valores \"valor1\", \"valor2\" o \"valor3\" en el campo \"campo\" y devolverá todos estos resultados.', '2025-07-05 04:08:03'),
(606, 'Cuál es uno de los pasos clave en el diseño conceptual de una base de datos?', 19, 'El diseño conceptual es el proceso de creación de un modelo lógico de la base de datos, que incluye la definición de las entidades, sus relaciones y las restricciones de integridad. Uno de los pasos clave en este proceso es identificar y normalizar los atributos y entidades, lo que implica definir qué información se almacenará en cada entidad, cómo se relacionan entre sí y establecer la estructura y organización lógica de la base de datos.', '2025-07-06 19:18:34'),
(607, '¿Cuál es el significado del término \"IS-A\" en la teoría de bases de datos?', 18, 'El término \"IS-A\" se refiere a una relación de especialización-generalización, que describe una jerarquía de entidades en la teoría de bases de datos.', '2025-07-06 19:19:24'),
(613, 'Cuál es el tipo de relación entre la categoría \"Persona\" y los subconjuntos \"Estudiante\", \"Profesor\" y \"Empresario\" dentro de un sistema de bases de datos?', 29, 'La relación entre la categoría \"Persona\" y los subconjuntos \"Estudiante\", \"Profesor\" y \"Empresario\" es una relación de generalización-especialización, ya que \"Persona\" es un caso particular y \"Estudiante\", \"Profesor\" y \"Empresario\" son casos más específicos dentro del mismo dominio.', '2025-07-12 00:15:35'),
(614, 'Cuál es el propósito principal del modelo entidad-relación en la creación de un diseño conceptual de bases de datos?', 31, 'El modelo entidad-relación es un diagrama que describe las entidades, relaciones y atributos en una base de datos. El propósito principal es establecer la relación entre las entidades y definir qué información se almacena y cómo se relaciona esta información.', '2025-07-12 00:17:11'),
(615, 'Qué función tiene el operador RIGHT JOIN al ser utilizado en un consulta SQL', 95, 'El operador RIGHT JOIN es un tipo de JOIN que combina las filas de la primera tabla con todas las filas de la segunda tabla. Todas las filas de la segunda tabla son incluidas en el resultado, y si no hay coincidencias en la columna de join, se agregan NULLs para completar la fila en la tabla correspondiente.', '2025-07-12 00:21:36'),
(616, 'Cuál es el operador utilizado para obtener todos los elementos que no se encuentran en un conjunto en un lenguaje de consulta SQL', 96, 'El operador EXCEPT (o MINUS en algunas versiones) se utiliza para obtener todos los elementos que no se encuentran en un conjunto. Por ejemplo, si tienes dos conjuntos A y B, puedes obtener los elementos de A que no están en B mediante el siguiente comando: SELECT * FROM A EXCEPT SELECT * FROM B.\n\nNota: El operador INTERSECT se utiliza para obtener los elementos comunes entre dos conjuntos, mientras que UNION es utilizado para obtener un conjunto que contenga todos los elementos de ambos conjuntos.', '2025-07-12 00:23:22'),
(617, 'Qué es la razón principal para utilizar consultas anidadas en SQL', 93, 'Las consultas anidadas o subconsultas son utilizadas para realizar operaciones complejas que involucran la combinación de diferentes consultas y operaciones en una sola consulta. Esto es especialmente útil cuando se necesitan recopilar información a partir de múltiples tablas, realizar cálculos complejos o aplicar condiciones lógicas a los resultados de una consulta.', '2025-07-12 00:25:00'),
(618, 'Qué es lo que se utiliza para especificar la agrupación y sumatoria en un SELECT SQL', 100, 'La instrucción GROUP BY se utiliza para agrupar filas de una tabla en conjuntos (o grupos) según uno o más columnas. \n\nNota: No hay errores tipográficos en la pregunta y las opciones.', '2025-07-12 00:33:21'),
(619, 'Cómo se puede utilizar la cláusula LIMIT en SQL para limitar el número de filas devueltas en una consulta', 102, 'La cláusula LIMIT en SQL se utiliza para limitar el número de filas devueltas por un comando de consulta. Se coloca directamente después de la clausura SELECT y se especifica el límite superior del número de filas que se desean obtener.', '2025-07-12 00:36:10'),
(620, 'Cómo se puede agrupar los registros de una tabla en un reporte para mostrar la suma y promedio del campo \"ventas\" según el país, utilizando el lenguaje SQL', 103, 'La opción B es la correcta porque se utiliza la función de agrupamiento GROUP BY para agrupar los registros por el campo \"pais\", y las funciones SUM y AVG para calcular la suma y promedio del campo \"ventas\" respectivamente.', '2025-07-12 00:38:05'),
(621, 'Cuál es uno de los objetivos principales de la normalización en bases de datos', 53, 'La normalización es un proceso que busca organizar la información en bases de datos de manera lógica y eficiente, reduciendo las repeticiones y mejorando la integridad y coherencia de los datos. Algunos de los beneficios de construir bases de datos normalizadas son: evitar la duplicación de información, mejorar el rendimiento y reducir la complejidad de consultas, facilitar la evolución del esquema y reducir errores y inconsistencias en la data.', '2025-07-12 01:01:37'),
(622, 'Cuál es la característica fundamental de las terceras y cuartas formas normales en una base de datos', 55, 'La tercera forma normal (3FN) y cuarta forma normal (4FN) en una base de datos son dos niveles de normalización para asegurar la integridad y coherencia de los datos. En la 3FN se elimina duplicaciones, no solo entre las columnas, sino también entre las tuplas. La 4FN es un nivel superior de normalización que implica eliminar todos los valores no significativos en las relaciones entre las tablas.', '2025-07-12 01:03:35'),
(623, 'Cuál es el significado de la dependencia funcional entre dos atributos en una base de datos', 54, 'La dependencia funcional se produce cuando el valor de un atributo (B) es determinado por el valor de otro atributo (A). En otras palabras, si se conoce el valor de A, se puede automáticamente inferir el valor de B.', '2025-07-12 01:05:08');

-- --------------------------------------------------------

--
-- Estructura de tabla para la tabla `seleccionar`
--

CREATE TABLE `seleccionar` (
  `IntentoFecha` timestamp NOT NULL DEFAULT current_timestamp() ON UPDATE current_timestamp(),
  `OpcionPreguntaId` int(11) DEFAULT NULL,
  `OpcionTexto` varchar(510) NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_general_ci;

--
-- Volcado de datos para la tabla `seleccionar`
--

INSERT INTO `seleccionar` (`IntentoFecha`, `OpcionPreguntaId`, `OpcionTexto`) VALUES
('2025-06-28 17:59:50', 243, 'Información sobre la estructura y diseño de un sistema'),
('2025-06-28 18:33:06', 243, 'Información sobre la estructura y diseño de un sistema'),
('2025-06-28 18:33:06', 244, 'Realizar cálculos matemáticos complejos en tiempo real.'),
('2025-06-28 18:33:06', 245, 'Es más costoso que otras opciones.'),
('2025-06-28 18:33:06', 246, 'Flexibilidad y escalabilidad.'),
('2025-06-28 18:33:06', 247, 'Crear, actualizar y eliminar estructuras de la BD.'),
('2025-06-28 18:50:00', 243, 'Información sobre la estructura y diseño de un sistema'),
('2025-06-28 19:08:44', 243, 'Registros y datos que se utilizan para realizar operaciones y análisis'),
('2025-06-28 19:13:52', 243, 'Registros y datos que se utilizan para realizar operaciones y análisis'),
('2025-06-28 19:14:44', 243, 'Registros y datos que se utilizan para realizar operaciones y análisis'),
('2025-06-28 19:16:58', 243, 'Registros y datos que se utilizan para realizar operaciones y análisis'),
('2025-06-28 23:01:57', 243, 'Registros y datos que se utilizan para realizar operaciones y análisis'),
('2025-06-28 23:03:42', 561, 'Es un tipo especializado de subconsulta'),
('2025-06-28 23:03:42', 562, 'JOIN'),
('2025-06-28 23:03:42', 563, 'Es un método para evitar la sobrecarga del servidor al realizar consultas complejas.'),
('2025-06-28 23:03:42', 564, 'La eliminación de filas repetidas entre dos o más tablas.'),
('2025-06-28 23:03:42', 565, 'Inner join'),
('2025-06-28 23:03:42', 566, 'SELECT * FROM tabla1 INTERSECT SELECT * FROM tabla2;'),
('2025-06-28 23:04:11', 561, 'Permite ejecutar un comando SQL que devuelva resultados en formato CSV'),
('2025-06-28 23:04:11', 562, 'UNION'),
('2025-06-28 23:04:11', 563, 'Permite ejecutar consultas dentro de otra consulta para obtener resultados más detallados.'),
('2025-06-28 23:04:11', 564, 'El intersección de dos o más tablas.'),
('2025-06-28 23:04:11', 565, 'Inner join'),
('2025-06-28 23:04:11', 566, 'SELECT * FROM tabla1 EXCEPT SELECT * FROM tabla2;'),
('2025-06-28 23:05:36', 561, 'Es un alias para la palabra clave SELECT'),
('2025-06-28 23:05:53', 561, 'Permite ejecutar un comando SQL que devuelva resultados en formato CSV'),
('2025-06-28 23:08:23', 561, 'Es un alias para la palabra clave SELECT'),
('2025-06-28 23:08:23', 562, 'JOIN'),
('2025-06-28 23:08:37', 561, 'Es un alias para la palabra clave SELECT'),
('2025-06-28 23:09:13', 561, 'Permite ejecutar un comando SQL que devuelva resultados en formato CSV'),
('2025-06-28 23:10:09', 561, 'Es una forma de crear una vista temporal para utilizar en una consulta'),
('2025-06-28 23:14:01', 561, 'Es un tipo especializado de subconsulta'),
('2025-06-28 23:19:14', 561, 'Es un alias para la palabra clave SELECT'),
('2025-06-28 23:19:14', 562, 'JOIN'),
('2025-06-28 23:19:14', 563, 'Es un método para evitar la sobrecarga del servidor al realizar consultas complejas.'),
('2025-06-28 23:19:14', 564, 'La creación de una tabla nueva que contenga todos los campos de las tablas unidas.'),
('2025-06-28 23:19:14', 565, 'Full outer join'),
('2025-06-28 23:19:14', 566, 'SELECT * FROM tabla1 MINUS SELECT * FROM tabla2;'),
('2025-06-28 23:29:43', 439, 'Es un lenguaje para administrar las consultas a una base de datos.'),
('2025-06-28 23:29:43', 440, 'Realizar análisis estadísticos sobre los datos almacenados en la base de datos.'),
('2025-06-28 23:29:43', 441, 'Para crear, modificar o eliminar estructuras de la base de datos'),
('2025-06-28 23:29:43', 442, 'Crear un índice en una tabla'),
('2025-06-28 23:29:43', 443, 'DROP TABLE'),
('2025-06-28 23:29:43', 444, 'DROP'),
('2025-06-28 23:29:43', 445, 'Que sea autoincremental y se actualice automáticamente cada vez que se ingresa nuevo registro.'),
('2025-06-28 23:30:59', 243, 'Información sobre la personalidad y características de los usuarios'),
('2025-06-28 23:30:59', 244, 'Generar informes y visualizaciones de datos.'),
('2025-06-28 23:30:59', 245, 'La velocidad de acceso a los datos es lenta.'),
('2025-06-28 23:30:59', 246, 'Escalabilidad y rendimiento.'),
('2025-06-28 23:30:59', 247, 'Analizar el rendimiento de la BD.'),
('2025-06-28 23:30:59', 248, 'Un lenguaje de programación utilizado para interactuar con bases de datos.'),
('2025-06-28 23:30:59', 249, 'Recopilar información para la toma de decisiones'),
('2025-06-28 23:30:59', 251, 'Generar reportes y visualizaciones.'),
('2025-06-28 23:30:59', 252, 'Limitaciones en el tamaño y la velocidad de acceso a los datos'),
('2025-06-28 23:30:59', 253, 'Crear gráficos e ilustraciones para presentaciones'),
('2025-06-28 23:30:59', 254, 'La capacidad de procesar grandes cantidades de información.'),
('2025-06-28 23:30:59', 255, 'Una aplicación web que ofrece acceso a información guardada en una BD'),
('2025-06-28 23:30:59', 257, 'Implementar la seguridad y control de acceso a la base de datos.'),
('2025-06-28 23:30:59', 258, 'Permite a los usuarios crear bases de datos sin necesidad de conocimientos técnicos.'),
('2025-06-28 23:30:59', 259, 'Nivel de motor de almacenamiento'),
('2025-06-28 23:30:59', 260, 'La capacidad de acceder directamente a los datos almacenados en el disco.'),
('2025-06-28 23:30:59', 261, 'Crear un diagrama visual para mostrar la estructura de los datos'),
('2025-06-28 23:30:59', 262, 'SQL'),
('2025-06-28 23:30:59', 263, 'Sistema Operativo'),
('2025-06-28 23:30:59', 264, 'Eliminación'),
('2025-06-28 23:30:59', 265, 'Proporcionar una interfaz visual para interactuar con los datos'),
('2025-06-29 14:45:37', 561, 'Es una forma de crear una vista temporal para utilizar en una consulta'),
('2025-06-29 14:45:37', 562, 'WITH'),
('2025-06-29 14:45:37', 563, 'Permite ejecutar consultas dentro de otra consulta para obtener resultados más detallados.'),
('2025-06-29 14:45:37', 564, 'La unión de dos o más tablas.'),
('2025-06-29 14:45:37', 565, 'Inner join'),
('2025-06-29 14:48:22', 544, 'INSERT INTO'),
('2025-06-29 14:48:22', 545, 'INSERT'),
('2025-06-29 14:48:22', 546, 'INSERT'),
('2025-06-29 14:48:22', 547, 'UPDATE tabla SET columna1 = valor, columna2 = valor'),
('2025-06-29 14:48:22', 548, 'UPDATE'),
('2025-06-29 14:48:22', 549, 'Utilizando el comando \"DROP TABLE\"'),
('2025-06-29 14:48:22', 550, 'DELETE FROM empleados;'),
('2025-06-29 14:48:22', 551, 'DELETE'),
('2025-06-29 23:42:49', 544, 'DELETE'),
('2025-06-29 23:51:04', 544, 'UPDATE'),
('2025-06-29 23:51:04', 549, 'Utilizando el comando \"ALTER\"'),
('2025-06-29 23:55:50', 544, 'INSERT INTO'),
('2025-06-29 23:55:50', 545, 'INSERT'),
('2025-06-29 23:55:50', 546, 'INSERT'),
('2025-06-29 23:55:50', 547, 'UPDATE tabla SET columna1 = valor, columna2 = valor'),
('2025-06-29 23:55:50', 548, 'UPDATE'),
('2025-06-29 23:55:50', 549, 'Utilizando el comando \"DELETE FROM\"'),
('2025-06-29 23:55:50', 550, 'DELETE FROM empleados;'),
('2025-06-29 23:55:50', 551, 'DELETE'),
('2025-06-29 23:57:51', 533, 'Consulta y manipulación de los resultados'),
('2025-06-29 23:57:51', 534, 'Realizar una búsqueda recursiva en un conjunto de datos'),
('2025-06-29 23:57:51', 535, 'Una técnica para mejorar el rendimiento de consultas complejas'),
('2025-06-29 23:57:51', 536, 'Una cláusula para actualizar múltiples filas al mismo tiempo'),
('2025-06-29 23:57:51', 537, 'Una sentencia SQL que permite crear una vista temporal en memoria.'),
('2025-06-29 23:57:51', 539, 'JOIN'),
('2025-06-29 23:57:51', 540, 'Elimina registros duplicados entre ambas tablas'),
('2025-06-29 23:57:51', 541, 'Except'),
('2025-06-29 23:58:20', 534, 'Reemplazar consultas complejas por consultas más simples'),
('2025-06-29 23:58:20', 536, 'Una cláusula para actualizar múltiples filas al mismo tiempo'),
('2025-06-29 23:58:20', 540, 'Compara los valores de una columna en una tabla con los valores de otra columna en la otra tabla y devuelve solo los registros que coinciden'),
('2025-06-29 23:58:44', 534, 'Reemplazar consultas complejas por consultas más simples'),
('2025-06-29 23:58:44', 536, 'Un tipo de índice que optimiza la búsqueda en una tabla'),
('2025-06-30 01:21:32', 533, 'Subconsulta para utilizar la respuesta en un cálculo'),
('2025-06-30 01:21:32', 534, 'Realizar una búsqueda recursiva en un conjunto de datos'),
('2025-06-30 01:22:16', 533, 'Consulta y manipulación de los resultados'),
('2025-06-30 01:22:16', 534, 'Realizar una búsqueda recursiva en un conjunto de datos'),
('2025-06-30 01:22:16', 536, 'Un tipo de índice que optimiza la búsqueda en una tabla'),
('2025-06-30 04:14:54', 572, 'Utilizando la sentencia \"UNION\".'),
('2025-06-30 14:09:20', 431, 'Simplificar la implementación y mantenimiento de la base de datos.'),
('2025-06-30 14:09:20', 432, 'Eliminar duplicidades y reducir la inconsistencia'),
('2025-06-30 14:09:20', 433, 'Eliminar redundancia y mejorar la integridad de los datos, facilitando el mantenimiento y escalabilidad del sistema.'),
('2025-06-30 14:09:20', 436, 'Es la forma más común de organización de la información'),
('2025-06-30 14:09:20', 437, 'Un conjunto de reglas para organizar la información.'),
('2025-06-30 14:09:20', 438, 'Dividir la información en diferentes tablas relacionadas.'),
('2025-06-30 14:09:36', 431, 'Simplificar la implementación y mantenimiento de la base de datos.'),
('2025-07-01 00:01:13', 534, 'Reemplazar consultas complejas por consultas más simples'),
('2025-07-01 00:01:13', 536, 'Un subconsulta reutilizable multiple veces en una consulta SQL'),
('2025-07-01 00:07:34', 533, 'Subconsulta para utilizar la respuesta en un cálculo'),
('2025-07-01 00:10:38', 533, 'Consulta y manipulación de los resultados'),
('2025-07-01 00:10:38', 534, 'Crear tablas derivadas y consultarlas como si fueran originales'),
('2025-07-01 00:10:38', 535, 'Un subconsultar dentro de una consulta principal'),
('2025-07-01 00:10:38', 536, 'Un subconsulta reutilizable multiple veces en una consulta SQL'),
('2025-07-01 00:10:38', 537, 'Una sentencia SQL que permite crear una vista temporal en memoria.'),
('2025-07-01 00:10:38', 539, 'JOIN'),
('2025-07-01 00:10:38', 540, 'Elimina registros duplicados entre ambas tablas'),
('2025-07-01 00:10:38', 541, 'Except'),
('2025-07-01 00:11:43', 535, 'Una técnica para mejorar el rendimiento de consultas complejas'),
('2025-07-01 00:11:43', 540, 'Elimina registros duplicados entre ambas tablas'),
('2025-07-03 02:32:54', 458, 'Proporcionar el valor por defecto para los campos'),
('2025-07-03 02:32:54', 459, 'INDEX'),
('2025-07-03 02:33:52', 458, 'Rechazar la inserción de datos no nulos'),
('2025-07-04 23:09:48', 342, 'Una jerarquía de entidades y sus subtipos'),
('2025-07-04 23:09:48', 343, 'Define la jerarquía entre entidades en un modelo conceptual'),
('2025-07-04 23:09:48', 344, 'Describe la jerarquía de las entidades.'),
('2025-07-04 23:09:48', 345, 'Definir la estructura y los requisitos de la base de datos'),
('2025-07-04 23:09:48', 346, 'Crear diagramas de entidad-relationship'),
('2025-07-04 23:09:48', 347, 'La definición de la estructura de la tabla.'),
('2025-07-04 23:35:04', 346, 'Determinar la necesidad y los requisitos funcionales de la base de datos'),
('2025-07-04 23:35:04', 347, 'La definición de la estructura de la tabla.'),
('2025-07-05 01:28:09', 329, 'El concepto fundamental que se utiliza para modelar la estructura y contenido de los datos en una base de datos'),
('2025-07-05 01:28:09', 330, 'Una entidad es un objeto que se describe mediante uno o más atributos.'),
('2025-07-05 01:28:09', 332, 'Una característica o propiedad que describe a un registro o entidad en la base de datos.'),
('2025-07-05 01:28:09', 334, 'Un valor que se almacena en un campo específico en la tabla'),
('2025-07-05 01:28:09', 336, 'Relación de jerarquía.'),
('2025-07-05 01:28:09', 337, 'Relación cardinalidad muchos a muchos'),
('2025-07-05 01:43:41', 329, 'Una fila en una tabla de una base de datos'),
('2025-07-05 01:43:41', 330, 'Una entidad es un conjunto de relaciones entre varias tablas.'),
('2025-07-05 01:43:41', 332, 'El nombre con el que se identifica una tabla en una base de datos.'),
('2025-07-05 01:43:41', 334, 'Un valor que se almacena en un campo específico en la tabla'),
('2025-07-05 01:43:41', 336, 'Relación cardinalidad M:M.'),
('2025-07-05 01:43:41', 337, 'Relación cardinalidad muchos a muchos'),
('2025-07-05 01:43:41', 338, 'Es el nombre que se le da a cada campo o registro de una tabla.'),
('2025-07-05 01:43:41', 339, 'Un conjunto de reglas que definen cómo se almacenan y recuperan los datos en una base de datos'),
('2025-07-05 01:43:41', 341, 'Para definir la relación entre tablas y entidades en un esquema de base de datos.'),
('2025-07-05 01:44:13', 329, 'El concepto fundamental que se utiliza para modelar la estructura y contenido de los datos en una base de datos'),
('2025-07-05 02:02:51', 342, 'Una jerarquía de entidades y sus subtipos'),
('2025-07-05 02:02:51', 343, 'Define la jerarquía entre entidades en un modelo conceptual'),
('2025-07-05 02:02:51', 344, 'Es una restricción en el diseño de bases de datos.'),
('2025-07-05 02:02:51', 345, 'Realizar la implementación física de la base de datos'),
('2025-07-05 02:02:51', 346, 'Crear diagramas de entidad-relationship'),
('2025-07-05 02:02:51', 347, 'La implementación del almacenamiento persistente de los datos.'),
('2025-07-05 02:03:27', 344, 'Describe la jerarquía de las entidades.'),
('2025-07-05 02:03:27', 345, 'Analizar y diseñar la arquitectura de la base de datos'),
('2025-07-05 02:06:07', 342, 'Una jerarquía de entidades y sus subtipos'),
('2025-07-05 02:06:07', 343, 'Define la jerarquía entre entidades en un modelo conceptual'),
('2025-07-05 02:06:07', 344, 'Describe la jerarquía de las entidades.'),
('2025-07-05 02:06:07', 345, 'Probar la integridad y la seguridad de la base de datos'),
('2025-07-05 02:06:07', 346, 'Definir la estructura física de la base de datos'),
('2025-07-05 02:06:07', 347, 'La implementación del almacenamiento persistente de los datos.'),
('2025-07-05 02:06:42', 345, 'Definir la estructura y los requisitos de la base de datos'),
('2025-07-05 02:06:42', 346, 'Determinar la necesidad y los requisitos funcionales de la base de datos'),
('2025-07-05 02:06:42', 347, 'La definición de la estructura de la tabla.'),
('2025-07-12 01:31:12', 418, 'Normalización'),
('2025-07-12 01:31:12', 419, 'Normalización, B) Agrupamiento, C) Denormalización y D) Schematización'),
('2025-07-12 01:31:12', 420, 'Crear una nueva tabla que contenga la llave primaria de ambas entidades'),
('2025-07-12 01:31:12', 421, 'Identificar la entidad y sus atributos'),
('2025-07-12 01:31:12', 422, 'Crear relaciones adicionales entre las tablas. B) Simplificar la estructura de la base de datos. C) Reducir la dimensionalidad de los datos. D) Eliminar los datos duplicados.'),
('2025-07-12 01:49:38', 422, 'Crear relaciones adicionales entre las tablas. B) Simplificar la estructura de la base de datos. C) Reducir la dimensionalidad de los datos. D) Eliminar los datos duplicados.'),
('2025-07-12 01:56:16', 423, 'Primero, identifica los atributos clave y luego transforma la relación en una representación relacional.'),
('2025-07-12 01:56:16', 424, 'Relación muchos a muchos.'),
('2025-07-12 01:56:16', 425, 'Cadena'),
('2025-07-12 01:56:16', 427, 'Estableciendo restricciones de integridad de entidad a partir del diseño conceptual.'),
('2025-07-12 01:56:16', 428, 'Definiendo una llave primaria común entre las dos tablas.'),
('2025-07-12 01:56:16', 429, 'Un departamento puede tener varias personas.'),
('2025-07-13 17:41:14', 300, 'Almacenar y recuperar grandes cantidades de datos'),
('2025-07-13 17:41:14', 301, 'El no poder realizar actualizaciones concurrentes en la información.'),
('2025-07-13 17:41:14', 302, 'Un sistema que gestiona la creación, acceso y modificación de bases de datos.'),
('2025-07-13 17:41:14', 304, 'Mayor seguridad y control sobre la información'),
('2025-07-13 17:41:14', 305, 'Nivel de Dirección de la Base de Datos'),
('2025-07-13 17:41:14', 306, 'La independencia lógica se refiere a la organización de los datos en una base de datos, mientras que la independencia física se refiere al almacenamiento de los mismos.'),
('2025-07-13 17:41:14', 307, 'Representar la estructura de la información y relaciones entre ella en la base de datos'),
('2025-07-13 17:41:14', 308, 'MySQL'),
('2025-07-13 17:41:14', 309, 'El usuario'),
('2025-07-13 17:41:14', 310, 'Definición del esquema'),
('2025-07-13 17:41:14', 311, 'Almacena, organiza y gestiona los datos que se requieren para una aplicación.'),
('2025-07-13 17:41:14', 312, 'La capacidad para realizar consultas complejas y rápidas'),
('2025-07-13 17:41:14', 313, 'Almacena y gestiona la información en la BD.'),
('2025-07-13 17:41:14', 314, 'Indexación'),
('2025-07-13 17:41:14', 316, 'Para mejorar la seguridad y integridad de los datos'),
('2025-07-13 17:41:14', 317, 'Nivel físico'),
('2025-07-13 17:41:14', 318, 'La capacidad para cambiar la estructura y el contenido de los datos sin afectar a la aplicación que se comunica con ellos.'),
('2025-07-13 17:41:14', 319, 'Definir la estructura y las relaciones entre los datos almacenados en la base de datos'),
('2025-07-13 17:41:14', 320, 'PL/SQL'),
('2025-07-13 17:41:14', 322, 'Realizar consultas y filtrados a datos'),
('2025-07-13 17:41:14', 323, 'Permite la creación y modificación de tablas.'),
('2025-07-13 17:41:14', 324, 'Es la capa más baja del SGBD, se encarga de administrar la memoria y los recursos del sistema.'),
('2025-07-13 17:41:14', 325, 'Gestor de archivos'),
('2025-07-13 17:41:14', 326, 'Es el responsable de mantener la integridad de los datos en la BD.'),
('2025-07-13 17:41:14', 327, 'Análisis, Diseno, Implementación y Mantenimiento'),
('2025-07-13 17:41:14', 328, 'Maneja la comunicación entre el usuario y el motor de consultas'),
('2025-07-13 17:41:59', 301, 'La posibilidad de realizar consultas complejas y rápidas.'),
('2025-07-13 17:41:59', 305, 'Nivel de Manejo de Archivos y Directorios'),
('2025-07-13 17:41:59', 308, 'T-SQL'),
('2025-07-13 17:41:59', 312, 'El riesgo de perder información debido al fallo del hardware'),
('2025-07-13 17:41:59', 314, 'Interfaz de usuario'),
('2025-07-13 17:53:32', 431, 'Simplificar la implementación y mantenimiento de la base de datos.'),
('2025-07-13 17:53:32', 432, 'Eliminar duplicidades y reducir la inconsistencia'),
('2025-07-13 17:53:32', 433, 'Reducir la cantidad de campos en una tabla.'),
('2025-07-13 17:53:32', 436, 'Es un conjunto de reglas para mantener la integridad en una base de datos'),
('2025-07-13 17:53:32', 437, 'La estructura fundamental para almacenar la data.'),
('2025-07-13 17:53:32', 438, 'Agrupar los campos en un grupo lógico.'),
('2025-07-13 17:53:32', 621, 'Mejorar la integridad de los datos y reducir redundancias.'),
('2025-07-13 17:53:32', 622, 'Involucran la eliminación de los valores no significativos.'),
('2025-07-13 17:53:32', 623, 'Es cuando un atributo B depende funcionalmente de A.'),
('2025-07-13 17:54:18', 431, 'Simplificar la implementación y mantenimiento de la base de datos.'),
('2025-07-13 17:54:18', 433, 'Eliminar redundancia y mejorar la integridad de los datos, facilitando el mantenimiento y escalabilidad del sistema.'),
('2025-07-13 17:54:18', 438, 'Dividir la información en diferentes tablas relacionadas.'),
('2025-07-13 17:54:18', 622, 'Consisten en eliminar duplicaciones y ordenar los atributos en un rango.'),
('2025-07-13 17:56:03', 301, 'La necesidad de administrar los permisos de acceso a los archivos.'),
('2025-07-13 17:56:03', 312, 'La necesidad de utilizar un software específico para acceder a los datos'),
('2025-07-13 17:56:03', 325, 'Sistema de gestión de bases de datos (SGBD)'),
('2025-07-13 17:56:03', 326, 'Es responsable de almacenar y recuperar datos de la base de datos.'),
('2025-07-13 17:56:12', 326, 'Es el responsable de mantener la integridad de los datos en la BD.'),
('2025-07-13 17:56:18', 326, 'Se encarga de recibir solicitudes de acceso a la BD y gestionarlas adecuadamente.'),
('2025-07-13 18:01:51', 300, 'Realizar cálculos estadísticos y visualizar resultados'),
('2025-07-13 18:22:16', 300, 'Almacenar y recuperar grandes cantidades de datos'),
('2025-07-13 18:22:24', 300, 'Realizar cálculos estadísticos y visualizar resultados'),
('2025-07-13 19:16:08', 300, 'Almacenar y recuperar grandes cantidades de datos'),
('2025-07-13 19:16:08', 301, 'La necesidad de administrar los permisos de acceso a los archivos.'),
('2025-07-13 19:16:08', 302, 'Un software que se encarga de almacenar información en la memoria RAM.'),
('2025-07-13 19:17:21', 392, 'Es una forma organizada de almacenar datos en una base de datos'),
('2025-07-13 19:17:21', 393, 'Un conjunto de filas en una tabla'),
('2025-07-13 19:17:21', 394, 'Es una característica o atributo que describe a un registro'),
('2025-07-13 19:21:15', 418, 'Normalización'),
('2025-07-13 19:21:15', 420, 'Crear dos tablas, cada una con su respectiva llave primaria'),
('2025-07-13 19:22:26', 302, 'Un sistema que gestiona la creación, acceso y modificación de bases de datos.'),
('2025-07-13 19:22:46', 300, 'Almacenar y recuperar grandes cantidades de datos'),
('2025-07-13 19:22:46', 301, 'El no poder realizar actualizaciones concurrentes en la información.'),
('2025-07-13 19:34:13', 300, 'Almacenar y recuperar grandes cantidades de datos'),
('2025-07-13 19:34:13', 301, 'El no poder realizar actualizaciones concurrentes en la información.'),
('2025-07-13 19:34:13', 302, 'Un software que se encarga de almacenar información en la memoria RAM.'),
('2025-07-13 19:34:13', 304, 'Posibilidad de acceso a datos en tiempo real'),
('2025-07-13 20:46:46', 459, 'PRIMARY KEY'),
('2025-07-13 20:46:46', 460, 'Unique'),
('2025-07-13 20:46:46', 461, 'Modelo evento-condición-acción'),
('2025-07-13 20:46:46', 462, 'Modelo de eventos-condición-acción (ECA)'),
('2025-07-13 20:47:01', 459, 'INDEX'),
('2025-07-13 20:47:01', 460, 'Primary Key');

-- --------------------------------------------------------

--
-- Estructura de tabla para la tabla `usuario`
--

CREATE TABLE `usuario` (
  `Correo` varchar(255) NOT NULL,
  `Nombre` varchar(255) DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_general_ci;

--
-- Volcado de datos para la tabla `usuario`
--

INSERT INTO `usuario` (`Correo`, `Nombre`) VALUES
('usuario@ejemplo.com', 'Usuario de Prueba');

--
-- Índices para tablas volcadas
--

--
-- Indices de la tabla `criterio`
--
ALTER TABLE `criterio`
  ADD PRIMARY KEY (`Id`),
  ADD KEY `HistoriaId` (`HistoriaId`);

--
-- Indices de la tabla `historia`
--
ALTER TABLE `historia`
  ADD PRIMARY KEY (`Id`),
  ADD KEY `ObjetivoId` (`ObjetivoId`);

--
-- Indices de la tabla `intento`
--
ALTER TABLE `intento`
  ADD PRIMARY KEY (`Fecha`),
  ADD KEY `UsuarioCorreo` (`UsuarioCorreo`);

--
-- Indices de la tabla `objetivo`
--
ALTER TABLE `objetivo`
  ADD PRIMARY KEY (`Id`);

--
-- Indices de la tabla `opcion`
--
ALTER TABLE `opcion`
  ADD PRIMARY KEY (`PreguntaId`,`Texto`);

--
-- Indices de la tabla `pregunta`
--
ALTER TABLE `pregunta`
  ADD PRIMARY KEY (`Id`),
  ADD KEY `CriterioId` (`CriterioId`);

--
-- Indices de la tabla `seleccionar`
--
ALTER TABLE `seleccionar`
  ADD KEY `OpcionPreguntaId` (`OpcionPreguntaId`,`OpcionTexto`),
  ADD KEY `seleccionar_ibfk_1` (`IntentoFecha`);

--
-- Indices de la tabla `usuario`
--
ALTER TABLE `usuario`
  ADD PRIMARY KEY (`Correo`);

--
-- AUTO_INCREMENT de las tablas volcadas
--

--
-- AUTO_INCREMENT de la tabla `criterio`
--
ALTER TABLE `criterio`
  MODIFY `Id` int(11) NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=108;

--
-- AUTO_INCREMENT de la tabla `historia`
--
ALTER TABLE `historia`
  MODIFY `Id` int(11) NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=22;

--
-- AUTO_INCREMENT de la tabla `objetivo`
--
ALTER TABLE `objetivo`
  MODIFY `Id` int(11) NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=6;

--
-- AUTO_INCREMENT de la tabla `pregunta`
--
ALTER TABLE `pregunta`
  MODIFY `Id` int(11) NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=624;

--
-- Restricciones para tablas volcadas
--

--
-- Filtros para la tabla `criterio`
--
ALTER TABLE `criterio`
  ADD CONSTRAINT `criterio_ibfk_1` FOREIGN KEY (`HistoriaId`) REFERENCES `historia` (`Id`);

--
-- Filtros para la tabla `historia`
--
ALTER TABLE `historia`
  ADD CONSTRAINT `historia_ibfk_1` FOREIGN KEY (`ObjetivoId`) REFERENCES `objetivo` (`Id`);

--
-- Filtros para la tabla `intento`
--
ALTER TABLE `intento`
  ADD CONSTRAINT `intento_ibfk_1` FOREIGN KEY (`UsuarioCorreo`) REFERENCES `usuario` (`Correo`);

--
-- Filtros para la tabla `opcion`
--
ALTER TABLE `opcion`
  ADD CONSTRAINT `opcion_ibfk_1` FOREIGN KEY (`PreguntaId`) REFERENCES `pregunta` (`Id`) ON DELETE CASCADE;

--
-- Filtros para la tabla `pregunta`
--
ALTER TABLE `pregunta`
  ADD CONSTRAINT `pregunta_ibfk_1` FOREIGN KEY (`CriterioId`) REFERENCES `criterio` (`Id`);

--
-- Filtros para la tabla `seleccionar`
--
ALTER TABLE `seleccionar`
  ADD CONSTRAINT `seleccionar_ibfk_1` FOREIGN KEY (`IntentoFecha`) REFERENCES `intento` (`Fecha`) ON DELETE CASCADE;
COMMIT;

/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
